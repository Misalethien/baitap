
KiemTragiuaki_Thuctapcoso_Nhom3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004908  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000908  08004aa8  08004aa8  00014aa8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080053b0  080053b0  00020078  2**0
                  CONTENTS
  4 .ARM          00000000  080053b0  080053b0  00020078  2**0
                  CONTENTS
  5 .preinit_array 00000000  080053b0  080053b0  00020078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080053b0  080053b0  000153b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080053b4  080053b4  000153b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000078  20000000  080053b8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000142c  20000078  08005430  00020078  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200014a4  08005430  000214a4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY
 12 .comment      000000be  00000000  00000000  000200a8  2**0
                  CONTENTS, READONLY
 13 .debug_info   00037a03  00000000  00000000  00020166  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00002e55  00000000  00000000  00057b69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000d40  00000000  00000000  0005a9c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000134  00000000  00000000  0005b700  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000fdff  00000000  00000000  0005b834  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000a424  00000000  00000000  0006b633  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0004dee7  00000000  00000000  00075a57  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00003960  00000000  00000000  000c3940  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000059  00000000  00000000  000c72a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00000a18  00000000  00000000  000c72f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000078 	.word	0x20000078
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004a90 	.word	0x08004a90

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000007c 	.word	0x2000007c
 80001dc:	08004a90 	.word	0x08004a90

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <bufInit>:
bufInit(
    void *pBuffer,
    buffqueue_p pQueue,
	uint8_t sizeofElement,
	uint16_t numberOfElement
) {
 8000280:	b580      	push	{r7, lr}
 8000282:	b084      	sub	sp, #16
 8000284:	af00      	add	r7, sp, #0
 8000286:	60f8      	str	r0, [r7, #12]
 8000288:	60b9      	str	r1, [r7, #8]
 800028a:	4611      	mov	r1, r2
 800028c:	461a      	mov	r2, r3
 800028e:	460b      	mov	r3, r1
 8000290:	71fb      	strb	r3, [r7, #7]
 8000292:	4613      	mov	r3, r2
 8000294:	80bb      	strh	r3, [r7, #4]
    pQueue->wSize = numberOfElement;
 8000296:	68bb      	ldr	r3, [r7, #8]
 8000298:	88ba      	ldrh	r2, [r7, #4]
 800029a:	801a      	strh	r2, [r3, #0]
    pQueue->byItemSize = sizeofElement;
 800029c:	68bb      	ldr	r3, [r7, #8]
 800029e:	79fa      	ldrb	r2, [r7, #7]
 80002a0:	711a      	strb	r2, [r3, #4]
    pQueue->pData = (uint8_t *)pBuffer;
 80002a2:	68bb      	ldr	r3, [r7, #8]
 80002a4:	68fa      	ldr	r2, [r7, #12]
 80002a6:	60da      	str	r2, [r3, #12]
    bufFlush(pQueue);
 80002a8:	68b8      	ldr	r0, [r7, #8]
 80002aa:	f000 f836 	bl	800031a <bufFlush>
}
 80002ae:	bf00      	nop
 80002b0:	3710      	adds	r7, #16
 80002b2:	46bd      	mov	sp, r7
 80002b4:	bd80      	pop	{r7, pc}

080002b6 <bufNumItems>:
 * @return The number of items in the ring buffer
 */
uint16_t
bufNumItems(
	buffqueue_p pQueue
) {
 80002b6:	b480      	push	{r7}
 80002b8:	b083      	sub	sp, #12
 80002ba:	af00      	add	r7, sp, #0
 80002bc:	6078      	str	r0, [r7, #4]
    return pQueue->wCountEle;
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	885b      	ldrh	r3, [r3, #2]
}
 80002c2:	4618      	mov	r0, r3
 80002c4:	370c      	adds	r7, #12
 80002c6:	46bd      	mov	sp, r7
 80002c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002cc:	4770      	bx	lr

080002ce <bufIsFull>:
 * @return 1 if full; 0 otherwise
 */
uint8_t
bufIsFull(
    buffqueue_p pQueue
) {
 80002ce:	b480      	push	{r7}
 80002d0:	b083      	sub	sp, #12
 80002d2:	af00      	add	r7, sp, #0
 80002d4:	6078      	str	r0, [r7, #4]
    return (pQueue->wCountEle >= pQueue->wSize);
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	885a      	ldrh	r2, [r3, #2]
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	881b      	ldrh	r3, [r3, #0]
 80002de:	429a      	cmp	r2, r3
 80002e0:	bf2c      	ite	cs
 80002e2:	2301      	movcs	r3, #1
 80002e4:	2300      	movcc	r3, #0
 80002e6:	b2db      	uxtb	r3, r3
}
 80002e8:	4618      	mov	r0, r3
 80002ea:	370c      	adds	r7, #12
 80002ec:	46bd      	mov	sp, r7
 80002ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f2:	4770      	bx	lr

080002f4 <bufIsEmpty>:
 * @return 1 if empty; 0 otherwise
 */
uint8_t
bufIsEmpty(
    buffqueue_p pQueue
) {
 80002f4:	b480      	push	{r7}
 80002f6:	b083      	sub	sp, #12
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	6078      	str	r0, [r7, #4]
    return (pQueue->wHeadIndex == pQueue->wTailIndex);
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	88da      	ldrh	r2, [r3, #6]
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	891b      	ldrh	r3, [r3, #8]
 8000304:	429a      	cmp	r2, r3
 8000306:	bf0c      	ite	eq
 8000308:	2301      	moveq	r3, #1
 800030a:	2300      	movne	r3, #0
 800030c:	b2db      	uxtb	r3, r3
}
 800030e:	4618      	mov	r0, r3
 8000310:	370c      	adds	r7, #12
 8000312:	46bd      	mov	sp, r7
 8000314:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000318:	4770      	bx	lr

0800031a <bufFlush>:
 * @retval None
 */
void
bufFlush(
    buffqueue_p pQueue
) {
 800031a:	b580      	push	{r7, lr}
 800031c:	b082      	sub	sp, #8
 800031e:	af00      	add	r7, sp, #0
 8000320:	6078      	str	r0, [r7, #4]
    pQueue->wHeadIndex = 0;
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	2200      	movs	r2, #0
 8000326:	80da      	strh	r2, [r3, #6]
    pQueue->wTailIndex = 0;
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	2200      	movs	r2, #0
 800032c:	811a      	strh	r2, [r3, #8]
    pQueue->wCountEle = 0;
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	2200      	movs	r2, #0
 8000332:	805a      	strh	r2, [r3, #2]
    
    memsetl(pQueue->pData, 0, pQueue->wSize);
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	68d8      	ldr	r0, [r3, #12]
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	881b      	ldrh	r3, [r3, #0]
 800033c:	461a      	mov	r2, r3
 800033e:	2100      	movs	r1, #0
 8000340:	f000 f899 	bl	8000476 <memsetl>
}
 8000344:	bf00      	nop
 8000346:	3708      	adds	r7, #8
 8000348:	46bd      	mov	sp, r7
 800034a:	bd80      	pop	{r7, pc}

0800034c <bufEnDat>:
 */
uint8_t
bufEnDat(
    buffqueue_p pQueue,
	uint8_t *pReceiverData
) {
 800034c:	b580      	push	{r7, lr}
 800034e:	b084      	sub	sp, #16
 8000350:	af00      	add	r7, sp, #0
 8000352:	6078      	str	r0, [r7, #4]
 8000354:	6039      	str	r1, [r7, #0]
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000356:	b672      	cpsid	i
}
 8000358:	bf00      	nop
	__disable_irq();
    
    /* Place data in buffer */
    for (uint8_t i = 0; i < pQueue->byItemSize; i++) {
 800035a:	2300      	movs	r3, #0
 800035c:	73fb      	strb	r3, [r7, #15]
 800035e:	e021      	b.n	80003a4 <bufEnDat+0x58>
        pQueue->pData[pQueue->wHeadIndex] = pReceiverData[i];
 8000360:	7bfb      	ldrb	r3, [r7, #15]
 8000362:	683a      	ldr	r2, [r7, #0]
 8000364:	441a      	add	r2, r3
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	68db      	ldr	r3, [r3, #12]
 800036a:	6879      	ldr	r1, [r7, #4]
 800036c:	88c9      	ldrh	r1, [r1, #6]
 800036e:	440b      	add	r3, r1
 8000370:	7812      	ldrb	r2, [r2, #0]
 8000372:	701a      	strb	r2, [r3, #0]
        pQueue->wHeadIndex = ((pQueue->wHeadIndex + 1)  & (pQueue->wSize - 1));
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	88db      	ldrh	r3, [r3, #6]
 8000378:	3301      	adds	r3, #1
 800037a:	b29b      	uxth	r3, r3
 800037c:	b21a      	sxth	r2, r3
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	881b      	ldrh	r3, [r3, #0]
 8000382:	3b01      	subs	r3, #1
 8000384:	b29b      	uxth	r3, r3
 8000386:	b21b      	sxth	r3, r3
 8000388:	4013      	ands	r3, r2
 800038a:	b21b      	sxth	r3, r3
 800038c:	b29a      	uxth	r2, r3
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	80da      	strh	r2, [r3, #6]
        pQueue->wCountEle++;
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	885b      	ldrh	r3, [r3, #2]
 8000396:	3301      	adds	r3, #1
 8000398:	b29a      	uxth	r2, r3
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	805a      	strh	r2, [r3, #2]
    for (uint8_t i = 0; i < pQueue->byItemSize; i++) {
 800039e:	7bfb      	ldrb	r3, [r7, #15]
 80003a0:	3301      	adds	r3, #1
 80003a2:	73fb      	strb	r3, [r7, #15]
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	791b      	ldrb	r3, [r3, #4]
 80003a8:	7bfa      	ldrb	r2, [r7, #15]
 80003aa:	429a      	cmp	r2, r3
 80003ac:	d3d8      	bcc.n	8000360 <bufEnDat+0x14>
    }
    
    if (bufIsFull(pQueue)) {
 80003ae:	6878      	ldr	r0, [r7, #4]
 80003b0:	f7ff ff8d 	bl	80002ce <bufIsFull>
 80003b4:	4603      	mov	r3, r0
 80003b6:	2b00      	cmp	r3, #0
 80003b8:	d011      	beq.n	80003de <bufEnDat+0x92>
        /* Is going to overwrite the oldest byte */
        /* Increase tail index */
        pQueue->wTailIndex = (pQueue->wTailIndex + pQueue->byItemSize) & (pQueue->wSize - 1);
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	891a      	ldrh	r2, [r3, #8]
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	791b      	ldrb	r3, [r3, #4]
 80003c2:	b29b      	uxth	r3, r3
 80003c4:	4413      	add	r3, r2
 80003c6:	b29b      	uxth	r3, r3
 80003c8:	b21a      	sxth	r2, r3
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	881b      	ldrh	r3, [r3, #0]
 80003ce:	3b01      	subs	r3, #1
 80003d0:	b29b      	uxth	r3, r3
 80003d2:	b21b      	sxth	r3, r3
 80003d4:	4013      	ands	r3, r2
 80003d6:	b21b      	sxth	r3, r3
 80003d8:	b29a      	uxth	r2, r3
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	811a      	strh	r2, [r3, #8]
  __ASM volatile ("cpsie i" : : : "memory");
 80003de:	b662      	cpsie	i
}
 80003e0:	bf00      	nop
    }
    
    __enable_irq();
    return ERR_OK;
 80003e2:	2300      	movs	r3, #0
}
 80003e4:	4618      	mov	r0, r3
 80003e6:	3710      	adds	r7, #16
 80003e8:	46bd      	mov	sp, r7
 80003ea:	bd80      	pop	{r7, pc}

080003ec <bufDeDat>:
 */
uint8_t
bufDeDat(
    buffqueue_p pQueue,
	uint8_t *pBuffer
) {
 80003ec:	b580      	push	{r7, lr}
 80003ee:	b084      	sub	sp, #16
 80003f0:	af00      	add	r7, sp, #0
 80003f2:	6078      	str	r0, [r7, #4]
 80003f4:	6039      	str	r1, [r7, #0]
  __ASM volatile ("cpsid i" : : : "memory");
 80003f6:	b672      	cpsid	i
}
 80003f8:	bf00      	nop
	__disable_irq();
    
    if (bufIsEmpty(pQueue)) {
 80003fa:	6878      	ldr	r0, [r7, #4]
 80003fc:	f7ff ff7a 	bl	80002f4 <bufIsEmpty>
 8000400:	4603      	mov	r3, r0
 8000402:	2b00      	cmp	r3, #0
 8000404:	d006      	beq.n	8000414 <bufDeDat+0x28>
        /* No items */
        pQueue->wCountEle = 0;
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	2200      	movs	r2, #0
 800040a:	805a      	strh	r2, [r3, #2]
  __ASM volatile ("cpsie i" : : : "memory");
 800040c:	b662      	cpsie	i
}
 800040e:	bf00      	nop
        __enable_irq();
        return ERR_BUF_EMPTY;
 8000410:	2302      	movs	r3, #2
 8000412:	e02c      	b.n	800046e <bufDeDat+0x82>
    }
    
    for (uint8_t i = 0; i < pQueue->byItemSize; i++) {
 8000414:	2300      	movs	r3, #0
 8000416:	73fb      	strb	r3, [r7, #15]
 8000418:	e021      	b.n	800045e <bufDeDat+0x72>
        pBuffer[i] = pQueue->pData[pQueue->wTailIndex];
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	68db      	ldr	r3, [r3, #12]
 800041e:	687a      	ldr	r2, [r7, #4]
 8000420:	8912      	ldrh	r2, [r2, #8]
 8000422:	441a      	add	r2, r3
 8000424:	7bfb      	ldrb	r3, [r7, #15]
 8000426:	6839      	ldr	r1, [r7, #0]
 8000428:	440b      	add	r3, r1
 800042a:	7812      	ldrb	r2, [r2, #0]
 800042c:	701a      	strb	r2, [r3, #0]
        pQueue->wTailIndex = ((pQueue->wTailIndex + 1) & (pQueue->wSize - 1));
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	891b      	ldrh	r3, [r3, #8]
 8000432:	3301      	adds	r3, #1
 8000434:	b29b      	uxth	r3, r3
 8000436:	b21a      	sxth	r2, r3
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	881b      	ldrh	r3, [r3, #0]
 800043c:	3b01      	subs	r3, #1
 800043e:	b29b      	uxth	r3, r3
 8000440:	b21b      	sxth	r3, r3
 8000442:	4013      	ands	r3, r2
 8000444:	b21b      	sxth	r3, r3
 8000446:	b29a      	uxth	r2, r3
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	811a      	strh	r2, [r3, #8]
        pQueue->wCountEle--;
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	885b      	ldrh	r3, [r3, #2]
 8000450:	3b01      	subs	r3, #1
 8000452:	b29a      	uxth	r2, r3
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	805a      	strh	r2, [r3, #2]
    for (uint8_t i = 0; i < pQueue->byItemSize; i++) {
 8000458:	7bfb      	ldrb	r3, [r7, #15]
 800045a:	3301      	adds	r3, #1
 800045c:	73fb      	strb	r3, [r7, #15]
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	791b      	ldrb	r3, [r3, #4]
 8000462:	7bfa      	ldrb	r2, [r7, #15]
 8000464:	429a      	cmp	r2, r3
 8000466:	d3d8      	bcc.n	800041a <bufDeDat+0x2e>
  __ASM volatile ("cpsie i" : : : "memory");
 8000468:	b662      	cpsie	i
}
 800046a:	bf00      	nop
    }
    
    __enable_irq();
    return ERR_OK;
 800046c:	2300      	movs	r3, #0
}
 800046e:	4618      	mov	r0, r3
 8000470:	3710      	adds	r7, #16
 8000472:	46bd      	mov	sp, r7
 8000474:	bd80      	pop	{r7, pc}

08000476 <memsetl>:
void
memsetl(
	uint8_t *dst,
	uint8_t value,
	uint16_t size
) {
 8000476:	b480      	push	{r7}
 8000478:	b083      	sub	sp, #12
 800047a:	af00      	add	r7, sp, #0
 800047c:	6078      	str	r0, [r7, #4]
 800047e:	460b      	mov	r3, r1
 8000480:	70fb      	strb	r3, [r7, #3]
 8000482:	4613      	mov	r3, r2
 8000484:	803b      	strh	r3, [r7, #0]
    while (size--) {
 8000486:	e004      	b.n	8000492 <memsetl+0x1c>
        *dst++ = value;
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	1c5a      	adds	r2, r3, #1
 800048c:	607a      	str	r2, [r7, #4]
 800048e:	78fa      	ldrb	r2, [r7, #3]
 8000490:	701a      	strb	r2, [r3, #0]
    while (size--) {
 8000492:	883b      	ldrh	r3, [r7, #0]
 8000494:	1e5a      	subs	r2, r3, #1
 8000496:	803a      	strh	r2, [r7, #0]
 8000498:	2b00      	cmp	r3, #0
 800049a:	d1f5      	bne.n	8000488 <memsetl+0x12>
    }    
}
 800049c:	bf00      	nop
 800049e:	bf00      	nop
 80004a0:	370c      	adds	r7, #12
 80004a2:	46bd      	mov	sp, r7
 80004a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a8:	4770      	bx	lr
	...

080004ac <delay>:
#define SI7020_ADDR                          0x40
#define CMDR_MEASURE_VALUE                   0xE0


/*Privated Function ************************************************************/
void delay() {
 80004ac:	b480      	push	{r7}
 80004ae:	b083      	sub	sp, #12
 80004b0:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i < 500000; i++);
 80004b2:	2300      	movs	r3, #0
 80004b4:	607b      	str	r3, [r7, #4]
 80004b6:	e002      	b.n	80004be <delay+0x12>
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	3301      	adds	r3, #1
 80004bc:	607b      	str	r3, [r7, #4]
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	4a04      	ldr	r2, [pc, #16]	; (80004d4 <delay+0x28>)
 80004c2:	4293      	cmp	r3, r2
 80004c4:	d9f8      	bls.n	80004b8 <delay+0xc>
}
 80004c6:	bf00      	nop
 80004c8:	bf00      	nop
 80004ca:	370c      	adds	r7, #12
 80004cc:	46bd      	mov	sp, r7
 80004ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d2:	4770      	bx	lr
 80004d4:	0007a11f 	.word	0x0007a11f

080004d8 <Led_init>:
static void Led_init(void) {
 80004d8:	b580      	push	{r7, lr}
 80004da:	b082      	sub	sp, #8
 80004dc:	af00      	add	r7, sp, #0
	// Khai bao bien thuoc kieu struct
	GPIO_InitTypeDef GPIO_InitStructure;

	// Cap xung clock hoat dong cho port A
	RCC_AHB1PeriphClockCmd(LEDControl_SetClock, ENABLE);
 80004de:	2101      	movs	r1, #1
 80004e0:	2001      	movs	r0, #1
 80004e2:	f001 f913 	bl	800170c <RCC_AHB1PeriphClockCmd>

	// chon chan su dung chuc nang dieu khien led

	GPIO_InitStructure.GPIO_Pin = LED_GPIO_PIN;
 80004e6:	2320      	movs	r3, #32
 80004e8:	603b      	str	r3, [r7, #0]

	//Chon chan dieu khien led che do output

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80004ea:	2301      	movs	r3, #1
 80004ec:	713b      	strb	r3, [r7, #4]

	// Toc do xu ly

	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80004ee:	2302      	movs	r3, #2
 80004f0:	717b      	strb	r3, [r7, #5]

	// PUSH PULL

	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80004f2:	2300      	movs	r3, #0
 80004f4:	71bb      	strb	r3, [r7, #6]

	// trang thai ban dau tren chan la Pull down

	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80004f6:	2301      	movs	r3, #1
 80004f8:	71fb      	strb	r3, [r7, #7]

	// khoi tao cac gia tri

	GPIO_Init(LED_GPIO_PORT, &GPIO_InitStructure);
 80004fa:	463b      	mov	r3, r7
 80004fc:	4619      	mov	r1, r3
 80004fe:	4803      	ldr	r0, [pc, #12]	; (800050c <Led_init+0x34>)
 8000500:	f000 fd8a 	bl	8001018 <GPIO_Init>

}
 8000504:	bf00      	nop
 8000506:	3708      	adds	r7, #8
 8000508:	46bd      	mov	sp, r7
 800050a:	bd80      	pop	{r7, pc}
 800050c:	40020000 	.word	0x40020000

08000510 <Button_init>:

static void Button_init(void) {
 8000510:	b580      	push	{r7, lr}
 8000512:	b082      	sub	sp, #8
 8000514:	af00      	add	r7, sp, #0
	// Khai báo biến thuộc kiểu struct
	GPIO_InitTypeDef GPIO_InitStructure;

	// Cấp xung clock hoạt động cho PORT A

	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 8000516:	2101      	movs	r1, #1
 8000518:	2001      	movs	r0, #1
 800051a:	f001 f8f7 	bl	800170c <RCC_AHB1PeriphClockCmd>

	// chon chan su dung chuc nang dieu khien nut nhan

	GPIO_InitStructure.GPIO_Pin = BUTTON_GPIO_PIN;
 800051e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000522:	603b      	str	r3, [r7, #0]

	//Chon chan dieu khien nut che do output

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8000524:	2300      	movs	r3, #0
 8000526:	713b      	strb	r3, [r7, #4]

	// Toc do xu ly

	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000528:	2302      	movs	r3, #2
 800052a:	717b      	strb	r3, [r7, #5]

	// trang thai ban dau tren chan la Pull up

	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 800052c:	2301      	movs	r3, #1
 800052e:	71fb      	strb	r3, [r7, #7]

	// khoi tao cac gia tri

	GPIO_Init(BUTTON_GPIO_PORT, &GPIO_InitStructure);
 8000530:	463b      	mov	r3, r7
 8000532:	4619      	mov	r1, r3
 8000534:	4803      	ldr	r0, [pc, #12]	; (8000544 <Button_init+0x34>)
 8000536:	f000 fd6f 	bl	8001018 <GPIO_Init>
}
 800053a:	bf00      	nop
 800053c:	3708      	adds	r7, #8
 800053e:	46bd      	mov	sp, r7
 8000540:	bd80      	pop	{r7, pc}
 8000542:	bf00      	nop
 8000544:	40020800 	.word	0x40020800

08000548 <LedControl_SetStatus>:


static void LedControl_SetStatus(GPIO_TypeDef *GPIOx, uint16_t GPIO_PIN,
		uint8_t Status) {
 8000548:	b480      	push	{r7}
 800054a:	b083      	sub	sp, #12
 800054c:	af00      	add	r7, sp, #0
 800054e:	6078      	str	r0, [r7, #4]
 8000550:	460b      	mov	r3, r1
 8000552:	807b      	strh	r3, [r7, #2]
 8000554:	4613      	mov	r3, r2
 8000556:	707b      	strb	r3, [r7, #1]
	// SET bit in BSRR Registers

	if (Status == GPIO_PIN_SET) {
 8000558:	787b      	ldrb	r3, [r7, #1]
 800055a:	2b01      	cmp	r3, #1
 800055c:	d102      	bne.n	8000564 <LedControl_SetStatus+0x1c>
		GPIOx->BSRRL = GPIO_PIN;
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	887a      	ldrh	r2, [r7, #2]
 8000562:	831a      	strh	r2, [r3, #24]
	}
	if (Status == GPIO_PIN_RESET) {
 8000564:	787b      	ldrb	r3, [r7, #1]
 8000566:	2b00      	cmp	r3, #0
 8000568:	d102      	bne.n	8000570 <LedControl_SetStatus+0x28>
		GPIOx->BSRRH = GPIO_PIN;
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	887a      	ldrh	r2, [r7, #2]
 800056e:	835a      	strh	r2, [r3, #26]
	}
}
 8000570:	bf00      	nop
 8000572:	370c      	adds	r7, #12
 8000574:	46bd      	mov	sp, r7
 8000576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800057a:	4770      	bx	lr

0800057c <ButtonRead_Status>:

static uint8_t ButtonRead_Status(GPIO_TypeDef *GPIOx, uint16_t GPIO_PIN) {
 800057c:	b480      	push	{r7}
 800057e:	b085      	sub	sp, #20
 8000580:	af00      	add	r7, sp, #0
 8000582:	6078      	str	r0, [r7, #4]
 8000584:	460b      	mov	r3, r1
 8000586:	807b      	strh	r3, [r7, #2]
	uint8_t Read_Pin = 0x00;
 8000588:	2300      	movs	r3, #0
 800058a:	73fb      	strb	r3, [r7, #15]

	if ((GPIOx->IDR & GPIO_PIN) != (uint32_t) Bit_RESET) {
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	691a      	ldr	r2, [r3, #16]
 8000590:	887b      	ldrh	r3, [r7, #2]
 8000592:	4013      	ands	r3, r2
 8000594:	2b00      	cmp	r3, #0
 8000596:	d002      	beq.n	800059e <ButtonRead_Status+0x22>
		Read_Pin = (uint8_t) Bit_SET;
 8000598:	2301      	movs	r3, #1
 800059a:	73fb      	strb	r3, [r7, #15]
 800059c:	e001      	b.n	80005a2 <ButtonRead_Status+0x26>
	} else {
		Read_Pin = (uint8_t) Bit_RESET;
 800059e:	2300      	movs	r3, #0
 80005a0:	73fb      	strb	r3, [r7, #15]
	}
	return Read_Pin;
 80005a2:	7bfb      	ldrb	r3, [r7, #15]
}
 80005a4:	4618      	mov	r0, r3
 80005a6:	3714      	adds	r7, #20
 80005a8:	46bd      	mov	sp, r7
 80005aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ae:	4770      	bx	lr

080005b0 <main>:
static uint8_t temperature1, humidity1;
//static uint8_t temperature2, humidity2;


int main(void)
{
 80005b0:	b580      	push	{r7, lr}
 80005b2:	b082      	sub	sp, #8
 80005b4:	af00      	add	r7, sp, #0
	uint8_t status = 1;
 80005b6:	2301      	movs	r3, #1
 80005b8:	71fb      	strb	r3, [r7, #7]
		Led_init();
 80005ba:	f7ff ff8d 	bl	80004d8 <Led_init>
		Button_init();
 80005be:	f7ff ffa7 	bl	8000510 <Button_init>
	AppCommon();
 80005c2:	f000 f86d 	bl	80006a0 <AppCommon>

	while(1)
	{
		if (ButtonRead_Status(BUTTON_GPIO_PORT, BUTTON_GPIO_PIN) == BTN_PRESS) {
 80005c6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80005ca:	481a      	ldr	r0, [pc, #104]	; (8000634 <main+0x84>)
 80005cc:	f7ff ffd6 	bl	800057c <ButtonRead_Status>
 80005d0:	4603      	mov	r3, r0
 80005d2:	2b00      	cmp	r3, #0
 80005d4:	d104      	bne.n	80005e0 <main+0x30>
					delay();
 80005d6:	f7ff ff69 	bl	80004ac <delay>
					status++;
 80005da:	79fb      	ldrb	r3, [r7, #7]
 80005dc:	3301      	adds	r3, #1
 80005de:	71fb      	strb	r3, [r7, #7]
				}
				if (status % 2 == 0) {
 80005e0:	79fb      	ldrb	r3, [r7, #7]
 80005e2:	f003 0301 	and.w	r3, r3, #1
 80005e6:	b2db      	uxtb	r3, r3
 80005e8:	2b00      	cmp	r3, #0
 80005ea:	d11d      	bne.n	8000628 <main+0x78>
					// Bật đèn
					            delay();
 80005ec:	f7ff ff5e 	bl	80004ac <delay>
					            LedControl_SetStatus(LED_GPIO_PORT, LED_GPIO_PIN, GPIO_PIN_HIGH);
 80005f0:	2201      	movs	r2, #1
 80005f2:	2120      	movs	r1, #32
 80005f4:	4810      	ldr	r0, [pc, #64]	; (8000638 <main+0x88>)
 80005f6:	f7ff ffa7 	bl	8000548 <LedControl_SetStatus>
					            delay();
 80005fa:	f7ff ff57 	bl	80004ac <delay>
					            // Tắt đèn
					            LedControl_SetStatus(LED_GPIO_PORT, LED_GPIO_PIN, GPIO_PIN_LOW);
 80005fe:	2200      	movs	r2, #0
 8000600:	2120      	movs	r1, #32
 8000602:	480d      	ldr	r0, [pc, #52]	; (8000638 <main+0x88>)
 8000604:	f7ff ffa0 	bl	8000548 <LedControl_SetStatus>
					            delay();
 8000608:	f7ff ff50 	bl	80004ac <delay>
					            // Bật đèn
					            LedControl_SetStatus(LED_GPIO_PORT, LED_GPIO_PIN, GPIO_PIN_HIGH);
 800060c:	2201      	movs	r2, #1
 800060e:	2120      	movs	r1, #32
 8000610:	4809      	ldr	r0, [pc, #36]	; (8000638 <main+0x88>)
 8000612:	f7ff ff99 	bl	8000548 <LedControl_SetStatus>
					            delay();
 8000616:	f7ff ff49 	bl	80004ac <delay>
					            // Tắt đèn
					            LedControl_SetStatus(LED_GPIO_PORT, LED_GPIO_PIN, GPIO_PIN_LOW);
 800061a:	2200      	movs	r2, #0
 800061c:	2120      	movs	r1, #32
 800061e:	4806      	ldr	r0, [pc, #24]	; (8000638 <main+0x88>)
 8000620:	f7ff ff92 	bl	8000548 <LedControl_SetStatus>
					            // Reset lại biến status để đếm lại từ đầu
					            status = 1;
 8000624:	2301      	movs	r3, #1
 8000626:	71fb      	strb	r3, [r7, #7]
				}
		processGetValueSensor();
 8000628:	f000 fa58 	bl	8000adc <processGetValueSensor>
		processTimerScheduler();
 800062c:	f001 f9da 	bl	80019e4 <processTimerScheduler>
		if (ButtonRead_Status(BUTTON_GPIO_PORT, BUTTON_GPIO_PIN) == BTN_PRESS) {
 8000630:	e7c9      	b.n	80005c6 <main+0x16>
 8000632:	bf00      	nop
 8000634:	40020800 	.word	0x40020800
 8000638:	40020000 	.word	0x40020000

0800063c <delay_ms>:
 * @func   delay_ms
 * @brief  delay milisecon
 * @param  None
 * @retval None
 */
void delay_ms(uint32_t ms) {
 800063c:	b580      	push	{r7, lr}
 800063e:	b084      	sub	sp, #16
 8000640:	af00      	add	r7, sp, #0
 8000642:	6078      	str	r0, [r7, #4]

	uint32_t startTime = GetMilSecTick(); //Lưu lại thời điểm hiện tại.
 8000644:	f001 f9c2 	bl	80019cc <GetMilSecTick>
 8000648:	60f8      	str	r0, [r7, #12]
	while (CalculatorTime(startTime, GetMilSecTick()) <= ms)
 800064a:	bf00      	nop
 800064c:	f001 f9be 	bl	80019cc <GetMilSecTick>
 8000650:	4603      	mov	r3, r0
 8000652:	4619      	mov	r1, r3
 8000654:	68f8      	ldr	r0, [r7, #12]
 8000656:	f000 f809 	bl	800066c <CalculatorTime>
 800065a:	4602      	mov	r2, r0
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	4293      	cmp	r3, r2
 8000660:	d2f4      	bcs.n	800064c <delay_ms+0x10>
		;

//	Đợi cho đến khi hết khoảng time cài đặt

}
 8000662:	bf00      	nop
 8000664:	bf00      	nop
 8000666:	3710      	adds	r7, #16
 8000668:	46bd      	mov	sp, r7
 800066a:	bd80      	pop	{r7, pc}

0800066c <CalculatorTime>:
 * @func   CalculatorTime
 * @brief  Caculator time button
 * @param  None
 * @retval None
 */
uint32_t CalculatorTime(uint32_t dwTimeInit, uint32_t dwTimeCurrent) {
 800066c:	b480      	push	{r7}
 800066e:	b085      	sub	sp, #20
 8000670:	af00      	add	r7, sp, #0
 8000672:	6078      	str	r0, [r7, #4]
 8000674:	6039      	str	r1, [r7, #0]
	uint32_t dwTimeTotal;
	if (dwTimeCurrent >= dwTimeInit) {
 8000676:	683a      	ldr	r2, [r7, #0]
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	429a      	cmp	r2, r3
 800067c:	d304      	bcc.n	8000688 <CalculatorTime+0x1c>
		dwTimeTotal = dwTimeCurrent - dwTimeInit;
 800067e:	683a      	ldr	r2, [r7, #0]
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	1ad3      	subs	r3, r2, r3
 8000684:	60fb      	str	r3, [r7, #12]
 8000686:	e004      	b.n	8000692 <CalculatorTime+0x26>
	} else {
		dwTimeTotal = 0xFFFFFFFFU + dwTimeCurrent - dwTimeInit;
 8000688:	683a      	ldr	r2, [r7, #0]
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	1ad3      	subs	r3, r2, r3
 800068e:	3b01      	subs	r3, #1
 8000690:	60fb      	str	r3, [r7, #12]
	}
	return dwTimeTotal;
 8000692:	68fb      	ldr	r3, [r7, #12]

}
 8000694:	4618      	mov	r0, r3
 8000696:	3714      	adds	r7, #20
 8000698:	46bd      	mov	sp, r7
 800069a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800069e:	4770      	bx	lr

080006a0 <AppCommon>:
 * @brief  Init everything
 * @param  None
 * @retval None
 */
static void AppCommon()
{
 80006a0:	b580      	push	{r7, lr}
 80006a2:	b082      	sub	sp, #8
 80006a4:	af02      	add	r7, sp, #8
	SystemCoreClockUpdate();
 80006a6:	f000 fbeb 	bl	8000e80 <SystemCoreClockUpdate>
	TimerInit();
 80006aa:	f001 f8bb 	bl	8001824 <TimerInit>
    SPI1_Init();
 80006ae:	f000 f835 	bl	800071c <SPI1_Init>
    I2C_Init_temphumi();
 80006b2:	f000 f863 	bl	800077c <I2C_Init_temphumi>
    TemHumSensor_Init();
 80006b6:	f001 fa81 	bl	8001bbc <TemHumSensor_Init>
    Ucglib4WireSWSPI_begin(&ucg, UCG_FONT_MODE_SOLID); //là hàm khởi tạo LCD.
 80006ba:	2100      	movs	r1, #0
 80006bc:	4814      	ldr	r0, [pc, #80]	; (8000710 <AppCommon+0x70>)
 80006be:	f001 fc5f 	bl	8001f80 <Ucglib4WireSWSPI_begin>
    ucg_ClearScreen(&ucg);
 80006c2:	4813      	ldr	r0, [pc, #76]	; (8000710 <AppCommon+0x70>)
 80006c4:	f001 fca3 	bl	800200e <ucg_ClearScreen>
    ucg_SetFont(&ucg, ucg_font_ncenR12_hr);
 80006c8:	4912      	ldr	r1, [pc, #72]	; (8000714 <AppCommon+0x74>)
 80006ca:	4811      	ldr	r0, [pc, #68]	; (8000710 <AppCommon+0x70>)
 80006cc:	f002 fdb8 	bl	8003240 <ucg_SetFont>
    ucg_SetColor(&ucg, 0, 255, 255, 255);
 80006d0:	23ff      	movs	r3, #255	; 0xff
 80006d2:	9300      	str	r3, [sp, #0]
 80006d4:	23ff      	movs	r3, #255	; 0xff
 80006d6:	22ff      	movs	r2, #255	; 0xff
 80006d8:	2100      	movs	r1, #0
 80006da:	480d      	ldr	r0, [pc, #52]	; (8000710 <AppCommon+0x70>)
 80006dc:	f002 fe8f 	bl	80033fe <ucg_SetColor>
    ucg_SetColor(&ucg, 1, 0, 0, 0);
 80006e0:	2300      	movs	r3, #0
 80006e2:	9300      	str	r3, [sp, #0]
 80006e4:	2300      	movs	r3, #0
 80006e6:	2200      	movs	r2, #0
 80006e8:	2101      	movs	r1, #1
 80006ea:	4809      	ldr	r0, [pc, #36]	; (8000710 <AppCommon+0x70>)
 80006ec:	f002 fe87 	bl	80033fe <ucg_SetColor>
    ucg_SetRotate180(&ucg);
 80006f0:	4807      	ldr	r0, [pc, #28]	; (8000710 <AppCommon+0x70>)
 80006f2:	f002 ff7f 	bl	80035f4 <ucg_SetRotate180>
    Scan_TimeSensor(5000);
 80006f6:	f241 3088 	movw	r0, #5000	; 0x1388
 80006fa:	f000 fb07 	bl	8000d0c <Scan_TimeSensor>
    time_initial = GetMilSecTick();
 80006fe:	f001 f965 	bl	80019cc <GetMilSecTick>
 8000702:	4603      	mov	r3, r0
 8000704:	4a04      	ldr	r2, [pc, #16]	; (8000718 <AppCommon+0x78>)
 8000706:	6013      	str	r3, [r2, #0]
}
 8000708:	bf00      	nop
 800070a:	46bd      	mov	sp, r7
 800070c:	bd80      	pop	{r7, pc}
 800070e:	bf00      	nop
 8000710:	20000094 	.word	0x20000094
 8000714:	08004bd4 	.word	0x08004bd4
 8000718:	20000148 	.word	0x20000148

0800071c <SPI1_Init>:
 * @brief  Init SPI
 * @param  None
 * @retval None
 */
static void SPI1_Init(void)
{
 800071c:	b580      	push	{r7, lr}
 800071e:	b082      	sub	sp, #8
 8000720:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;

	/* GPIOA, GPIOB and GPIOC Clocks enable */
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOB | RCC_AHB1Periph_GPIOC, ENABLE);
 8000722:	2101      	movs	r1, #1
 8000724:	2007      	movs	r0, #7
 8000726:	f000 fff1 	bl	800170c <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 800072a:	2301      	movs	r3, #1
 800072c:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
 800072e:	2303      	movs	r3, #3
 8000730:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000732:	2300      	movs	r3, #0
 8000734:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 8000736:	2300      	movs	r3, #0
 8000738:	71fb      	strb	r3, [r7, #7]

	GPIO_InitStructure.GPIO_Pin = SPI1_SCK_PIN | SPI1_MOSI_PIN | SPI1_RS_PIN | SPI1_MODE_PIN;
 800073a:	f44f 7368 	mov.w	r3, #928	; 0x3a0
 800073e:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000740:	463b      	mov	r3, r7
 8000742:	4619      	mov	r1, r3
 8000744:	480a      	ldr	r0, [pc, #40]	; (8000770 <SPI1_Init+0x54>)
 8000746:	f000 fc67 	bl	8001018 <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = SPI1_CS_PIN | SPI1_ENABLE_PIN;
 800074a:	f44f 6388 	mov.w	r3, #1088	; 0x440
 800074e:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 8000750:	463b      	mov	r3, r7
 8000752:	4619      	mov	r1, r3
 8000754:	4807      	ldr	r0, [pc, #28]	; (8000774 <SPI1_Init+0x58>)
 8000756:	f000 fc5f 	bl	8001018 <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = SPI1_RST_PIN;
 800075a:	2380      	movs	r3, #128	; 0x80
 800075c:	603b      	str	r3, [r7, #0]
	GPIO_Init(GPIOC, &GPIO_InitStructure);
 800075e:	463b      	mov	r3, r7
 8000760:	4619      	mov	r1, r3
 8000762:	4805      	ldr	r0, [pc, #20]	; (8000778 <SPI1_Init+0x5c>)
 8000764:	f000 fc58 	bl	8001018 <GPIO_Init>
}
 8000768:	bf00      	nop
 800076a:	3708      	adds	r7, #8
 800076c:	46bd      	mov	sp, r7
 800076e:	bd80      	pop	{r7, pc}
 8000770:	40020000 	.word	0x40020000
 8000774:	40020400 	.word	0x40020400
 8000778:	40020800 	.word	0x40020800

0800077c <I2C_Init_temphumi>:
 * @brief  Init I2C temp and humi
 * @param  None
 * @retval None
 */
static void I2C_Init_temphumi(void)
{
 800077c:	b580      	push	{r7, lr}
 800077e:	b086      	sub	sp, #24
 8000780:	af00      	add	r7, sp, #0
// Initialization struct
	I2C_InitTypeDef I2C_InitStruct;
	GPIO_InitTypeDef GPIO_InitStruct;

	// Step 1: Initialize I2C
	RCC_APB1PeriphClockCmd(I2Cx_RCC, ENABLE);
 8000782:	2101      	movs	r1, #1
 8000784:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8000788:	f000 ffe0 	bl	800174c <RCC_APB1PeriphClockCmd>
	I2C_InitStruct.I2C_ClockSpeed = 400000;
 800078c:	4b1d      	ldr	r3, [pc, #116]	; (8000804 <I2C_Init_temphumi+0x88>)
 800078e:	60bb      	str	r3, [r7, #8]
	I2C_InitStruct.I2C_Mode = I2C_Mode_I2C;
 8000790:	2300      	movs	r3, #0
 8000792:	81bb      	strh	r3, [r7, #12]
	I2C_InitStruct.I2C_DutyCycle = I2C_DutyCycle_2;
 8000794:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 8000798:	81fb      	strh	r3, [r7, #14]
	I2C_InitStruct.I2C_OwnAddress1 = 0x00;
 800079a:	2300      	movs	r3, #0
 800079c:	823b      	strh	r3, [r7, #16]
	I2C_InitStruct.I2C_Ack = I2C_Ack_Enable;
 800079e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80007a2:	827b      	strh	r3, [r7, #18]
	I2C_InitStruct.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 80007a4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80007a8:	82bb      	strh	r3, [r7, #20]
	I2C_Init(I2Cx_SENSOR, &I2C_InitStruct);
 80007aa:	f107 0308 	add.w	r3, r7, #8
 80007ae:	4619      	mov	r1, r3
 80007b0:	4815      	ldr	r0, [pc, #84]	; (8000808 <I2C_Init_temphumi+0x8c>)
 80007b2:	f000 fd21 	bl	80011f8 <I2C_Init>
	I2C_Cmd(I2Cx_SENSOR, ENABLE);
 80007b6:	2101      	movs	r1, #1
 80007b8:	4813      	ldr	r0, [pc, #76]	; (8000808 <I2C_Init_temphumi+0x8c>)
 80007ba:	f000 fddf 	bl	800137c <I2C_Cmd>

	// Step 2: Initialize GPIO as open drain alternate function
	RCC_AHB1PeriphClockCmd(I2C_GPIO_RCC, ENABLE);
 80007be:	2101      	movs	r1, #1
 80007c0:	2002      	movs	r0, #2
 80007c2:	f000 ffa3 	bl	800170c <RCC_AHB1PeriphClockCmd>
	GPIO_InitStruct.GPIO_Pin = I2C_PIN_SCL | I2C_PIN_SDA;
 80007c6:	f44f 7340 	mov.w	r3, #768	; 0x300
 80007ca:	603b      	str	r3, [r7, #0]
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 80007cc:	2302      	movs	r3, #2
 80007ce:	713b      	strb	r3, [r7, #4]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 80007d0:	2302      	movs	r3, #2
 80007d2:	717b      	strb	r3, [r7, #5]
	GPIO_InitStruct.GPIO_OType = GPIO_OType_OD;
 80007d4:	2301      	movs	r3, #1
 80007d6:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStruct.GPIO_PuPd  = GPIO_PuPd_NOPULL;
 80007d8:	2300      	movs	r3, #0
 80007da:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(I2C_GPIO, &GPIO_InitStruct);
 80007dc:	463b      	mov	r3, r7
 80007de:	4619      	mov	r1, r3
 80007e0:	480a      	ldr	r0, [pc, #40]	; (800080c <I2C_Init_temphumi+0x90>)
 80007e2:	f000 fc19 	bl	8001018 <GPIO_Init>

	/* Connect PXx to I2C_SCL */
	GPIO_PinAFConfig(I2C_GPIO, GPIO_PinSource8, GPIO_AF_I2C1);
 80007e6:	2204      	movs	r2, #4
 80007e8:	2108      	movs	r1, #8
 80007ea:	4808      	ldr	r0, [pc, #32]	; (800080c <I2C_Init_temphumi+0x90>)
 80007ec:	f000 fcba 	bl	8001164 <GPIO_PinAFConfig>

	/* Connect PXx to I2C_SDA */
	GPIO_PinAFConfig(I2C_GPIO, GPIO_PinSource9, GPIO_AF_I2C1);
 80007f0:	2204      	movs	r2, #4
 80007f2:	2109      	movs	r1, #9
 80007f4:	4805      	ldr	r0, [pc, #20]	; (800080c <I2C_Init_temphumi+0x90>)
 80007f6:	f000 fcb5 	bl	8001164 <GPIO_PinAFConfig>
}
 80007fa:	bf00      	nop
 80007fc:	3718      	adds	r7, #24
 80007fe:	46bd      	mov	sp, r7
 8000800:	bd80      	pop	{r7, pc}
 8000802:	bf00      	nop
 8000804:	00061a80 	.word	0x00061a80
 8000808:	40005400 	.word	0x40005400
 800080c:	40020400 	.word	0x40020400

08000810 <I2C_start>:
 * @brief   Generate I2C start condition
 * @param   None
 * @retval  None
 */
void I2C_start(void)
{
 8000810:	b580      	push	{r7, lr}
 8000812:	af00      	add	r7, sp, #0
	// Wait until I2Cx is not busy anymore
	while (I2C_GetFlagStatus(I2Cx_SENSOR, I2C_FLAG_BUSY));
 8000814:	bf00      	nop
 8000816:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 800081a:	480a      	ldr	r0, [pc, #40]	; (8000844 <I2C_start+0x34>)
 800081c:	f000 fe9a 	bl	8001554 <I2C_GetFlagStatus>
 8000820:	4603      	mov	r3, r0
 8000822:	2b00      	cmp	r3, #0
 8000824:	d1f7      	bne.n	8000816 <I2C_start+0x6>

	// Generate start condition
	I2C_GenerateSTART(I2Cx_SENSOR, ENABLE);
 8000826:	2101      	movs	r1, #1
 8000828:	4806      	ldr	r0, [pc, #24]	; (8000844 <I2C_start+0x34>)
 800082a:	f000 fdc7 	bl	80013bc <I2C_GenerateSTART>

	// Wait for I2C EV5.
	// It means that the start condition has been correctly released
	// on the I2C bus (the bus is free, no other devices is communicating))
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_MODE_SELECT));
 800082e:	bf00      	nop
 8000830:	4905      	ldr	r1, [pc, #20]	; (8000848 <I2C_start+0x38>)
 8000832:	4804      	ldr	r0, [pc, #16]	; (8000844 <I2C_start+0x34>)
 8000834:	f000 fe5e 	bl	80014f4 <I2C_CheckEvent>
 8000838:	4603      	mov	r3, r0
 800083a:	2b00      	cmp	r3, #0
 800083c:	d0f8      	beq.n	8000830 <I2C_start+0x20>
}
 800083e:	bf00      	nop
 8000840:	bf00      	nop
 8000842:	bd80      	pop	{r7, pc}
 8000844:	40005400 	.word	0x40005400
 8000848:	00030001 	.word	0x00030001

0800084c <I2C_address_direction>:
 * @brief   e
 * @param   None
 * @retval  None
 */
void I2C_address_direction(uint8_t address, uint8_t direction)
{
 800084c:	b580      	push	{r7, lr}
 800084e:	b082      	sub	sp, #8
 8000850:	af00      	add	r7, sp, #0
 8000852:	4603      	mov	r3, r0
 8000854:	460a      	mov	r2, r1
 8000856:	71fb      	strb	r3, [r7, #7]
 8000858:	4613      	mov	r3, r2
 800085a:	71bb      	strb	r3, [r7, #6]
	// Send slave address
	I2C_Send7bitAddress(I2Cx_SENSOR, address, direction);
 800085c:	79ba      	ldrb	r2, [r7, #6]
 800085e:	79fb      	ldrb	r3, [r7, #7]
 8000860:	4619      	mov	r1, r3
 8000862:	480f      	ldr	r0, [pc, #60]	; (80008a0 <I2C_address_direction+0x54>)
 8000864:	f000 fdea 	bl	800143c <I2C_Send7bitAddress>

	// Wait for I2C EV6
	// It means that a slave acknowledges his address
	if (direction == I2C_Direction_Transmitter)		// truyền
 8000868:	79bb      	ldrb	r3, [r7, #6]
 800086a:	2b00      	cmp	r3, #0
 800086c:	d108      	bne.n	8000880 <I2C_address_direction+0x34>
	{
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED));
 800086e:	bf00      	nop
 8000870:	490c      	ldr	r1, [pc, #48]	; (80008a4 <I2C_address_direction+0x58>)
 8000872:	480b      	ldr	r0, [pc, #44]	; (80008a0 <I2C_address_direction+0x54>)
 8000874:	f000 fe3e 	bl	80014f4 <I2C_CheckEvent>
 8000878:	4603      	mov	r3, r0
 800087a:	2b00      	cmp	r3, #0
 800087c:	d0f8      	beq.n	8000870 <I2C_address_direction+0x24>
	}
	else if (direction == I2C_Direction_Receiver)  // nhận
	{
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED));
	}
}
 800087e:	e00a      	b.n	8000896 <I2C_address_direction+0x4a>
	else if (direction == I2C_Direction_Receiver)  // nhận
 8000880:	79bb      	ldrb	r3, [r7, #6]
 8000882:	2b01      	cmp	r3, #1
 8000884:	d107      	bne.n	8000896 <I2C_address_direction+0x4a>
		while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED));
 8000886:	bf00      	nop
 8000888:	4907      	ldr	r1, [pc, #28]	; (80008a8 <I2C_address_direction+0x5c>)
 800088a:	4805      	ldr	r0, [pc, #20]	; (80008a0 <I2C_address_direction+0x54>)
 800088c:	f000 fe32 	bl	80014f4 <I2C_CheckEvent>
 8000890:	4603      	mov	r3, r0
 8000892:	2b00      	cmp	r3, #0
 8000894:	d0f8      	beq.n	8000888 <I2C_address_direction+0x3c>
}
 8000896:	bf00      	nop
 8000898:	3708      	adds	r7, #8
 800089a:	46bd      	mov	sp, r7
 800089c:	bd80      	pop	{r7, pc}
 800089e:	bf00      	nop
 80008a0:	40005400 	.word	0x40005400
 80008a4:	00070082 	.word	0x00070082
 80008a8:	00030002 	.word	0x00030002

080008ac <I2C_transmit>:
 * @brief   Transmit one byte to I2C bus
 * @param   None
 * @retval  None
 */
void I2C_transmit(uint8_t byte)
{
 80008ac:	b580      	push	{r7, lr}
 80008ae:	b082      	sub	sp, #8
 80008b0:	af00      	add	r7, sp, #0
 80008b2:	4603      	mov	r3, r0
 80008b4:	71fb      	strb	r3, [r7, #7]
	// Send data byte
	I2C_SendData(I2Cx_SENSOR, byte);
 80008b6:	79fb      	ldrb	r3, [r7, #7]
 80008b8:	4619      	mov	r1, r3
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <I2C_transmit+0x30>)
 80008bc:	f000 fdfc 	bl	80014b8 <I2C_SendData>
	// Wait for I2C EV8_2.
	// It means that the data has been physically shifted out and
	// output on the bus)
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_TRANSMITTED));
 80008c0:	bf00      	nop
 80008c2:	4907      	ldr	r1, [pc, #28]	; (80008e0 <I2C_transmit+0x34>)
 80008c4:	4805      	ldr	r0, [pc, #20]	; (80008dc <I2C_transmit+0x30>)
 80008c6:	f000 fe15 	bl	80014f4 <I2C_CheckEvent>
 80008ca:	4603      	mov	r3, r0
 80008cc:	2b00      	cmp	r3, #0
 80008ce:	d0f8      	beq.n	80008c2 <I2C_transmit+0x16>
}
 80008d0:	bf00      	nop
 80008d2:	bf00      	nop
 80008d4:	3708      	adds	r7, #8
 80008d6:	46bd      	mov	sp, r7
 80008d8:	bd80      	pop	{r7, pc}
 80008da:	bf00      	nop
 80008dc:	40005400 	.word	0x40005400
 80008e0:	00070084 	.word	0x00070084

080008e4 <I2C_stop>:
 * @brief   Generate I2C stop condition
 * @param   None
 * @retval  None
 */
void I2C_stop(void)
{
 80008e4:	b580      	push	{r7, lr}
 80008e6:	af00      	add	r7, sp, #0
	// Generate I2C stop condition
	I2C_GenerateSTOP(I2Cx_SENSOR, ENABLE);
 80008e8:	2101      	movs	r1, #1
 80008ea:	4802      	ldr	r0, [pc, #8]	; (80008f4 <I2C_stop+0x10>)
 80008ec:	f000 fd86 	bl	80013fc <I2C_GenerateSTOP>
}
 80008f0:	bf00      	nop
 80008f2:	bd80      	pop	{r7, pc}
 80008f4:	40005400 	.word	0x40005400

080008f8 <I2C_receive_nack>:
 * @brief   receive data
 * @param   None
 * @retval  None
 */
uint8_t I2C_receive_nack(void)
{
 80008f8:	b580      	push	{r7, lr}
 80008fa:	af00      	add	r7, sp, #0
	// Disable ACK of received data
	I2C_AcknowledgeConfig(I2Cx_SENSOR, DISABLE);
 80008fc:	2100      	movs	r1, #0
 80008fe:	4808      	ldr	r0, [pc, #32]	; (8000920 <I2C_receive_nack+0x28>)
 8000900:	f000 fdba 	bl	8001478 <I2C_AcknowledgeConfig>
	// Wait for I2C EV7
	// It means that the data has been received in I2C data register
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_RECEIVED));
 8000904:	bf00      	nop
 8000906:	4907      	ldr	r1, [pc, #28]	; (8000924 <I2C_receive_nack+0x2c>)
 8000908:	4805      	ldr	r0, [pc, #20]	; (8000920 <I2C_receive_nack+0x28>)
 800090a:	f000 fdf3 	bl	80014f4 <I2C_CheckEvent>
 800090e:	4603      	mov	r3, r0
 8000910:	2b00      	cmp	r3, #0
 8000912:	d0f8      	beq.n	8000906 <I2C_receive_nack+0xe>

	// Read and return data byte from I2C data register
	return I2C_ReceiveData(I2Cx_SENSOR);
 8000914:	4802      	ldr	r0, [pc, #8]	; (8000920 <I2C_receive_nack+0x28>)
 8000916:	f000 fddf 	bl	80014d8 <I2C_ReceiveData>
 800091a:	4603      	mov	r3, r0
}
 800091c:	4618      	mov	r0, r3
 800091e:	bd80      	pop	{r7, pc}
 8000920:	40005400 	.word	0x40005400
 8000924:	00030040 	.word	0x00030040

08000928 <I2C_receive_ack>:
 * @brief   receive data
 * @param   None
 * @retval  None
 */
uint8_t I2C_receive_ack(void)
{
 8000928:	b580      	push	{r7, lr}
 800092a:	af00      	add	r7, sp, #0
	// Enable ACK of received data
	I2C_AcknowledgeConfig(I2Cx_SENSOR, ENABLE);
 800092c:	2101      	movs	r1, #1
 800092e:	4808      	ldr	r0, [pc, #32]	; (8000950 <I2C_receive_ack+0x28>)
 8000930:	f000 fda2 	bl	8001478 <I2C_AcknowledgeConfig>
	// Wait for I2C EV7
	// It means that the data has been received in I2C data register
	while (!I2C_CheckEvent(I2Cx_SENSOR, I2C_EVENT_MASTER_BYTE_RECEIVED));
 8000934:	bf00      	nop
 8000936:	4907      	ldr	r1, [pc, #28]	; (8000954 <I2C_receive_ack+0x2c>)
 8000938:	4805      	ldr	r0, [pc, #20]	; (8000950 <I2C_receive_ack+0x28>)
 800093a:	f000 fddb 	bl	80014f4 <I2C_CheckEvent>
 800093e:	4603      	mov	r3, r0
 8000940:	2b00      	cmp	r3, #0
 8000942:	d0f8      	beq.n	8000936 <I2C_receive_ack+0xe>

	// Read and return data byte from I2C data register
	return I2C_ReceiveData(I2Cx_SENSOR);
 8000944:	4802      	ldr	r0, [pc, #8]	; (8000950 <I2C_receive_ack+0x28>)
 8000946:	f000 fdc7 	bl	80014d8 <I2C_ReceiveData>
 800094a:	4603      	mov	r3, r0
}
 800094c:	4618      	mov	r0, r3
 800094e:	bd80      	pop	{r7, pc}
 8000950:	40005400 	.word	0x40005400
 8000954:	00030040 	.word	0x00030040

08000958 <TemHumSensor_readRegister>:
		uint8_t address,	// Địa chỉ cảm biến.
	    uint8_t* pAddressRegister, // Địa chỉ của thanh ghi chứa dữ liệu nhiệt độ, độ ẩm.
	    uint8_t* pDataRegister, // Dữ liệu đọc được từ thanh ghi tương ứng.
	    uint8_t Length_Data, //Độ dài Dữ liệu đọc được từ thanh ghi tương ứng.
	    uint16_t delay)	//Dữ liệu đọc được từ thanh ghi tương ứng.
{
 8000958:	b590      	push	{r4, r7, lr}
 800095a:	b087      	sub	sp, #28
 800095c:	af00      	add	r7, sp, #0
 800095e:	60b9      	str	r1, [r7, #8]
 8000960:	607a      	str	r2, [r7, #4]
 8000962:	461a      	mov	r2, r3
 8000964:	4603      	mov	r3, r0
 8000966:	73fb      	strb	r3, [r7, #15]
 8000968:	4613      	mov	r3, r2
 800096a:	73bb      	strb	r3, [r7, #14]
	uint8_t LengthCmd = pAddressRegister[0];
 800096c:	68bb      	ldr	r3, [r7, #8]
 800096e:	781b      	ldrb	r3, [r3, #0]
 8000970:	757b      	strb	r3, [r7, #21]

	I2C_start();	// conditon start
 8000972:	f7ff ff4d 	bl	8000810 <I2C_start>
	I2C_address_direction(address << 1, I2C_Direction_Transmitter); // send slave address - Transmit
 8000976:	7bfb      	ldrb	r3, [r7, #15]
 8000978:	005b      	lsls	r3, r3, #1
 800097a:	b2db      	uxtb	r3, r3
 800097c:	2100      	movs	r1, #0
 800097e:	4618      	mov	r0, r3
 8000980:	f7ff ff64 	bl	800084c <I2C_address_direction>

	for (uint8_t i = 1; i < LengthCmd; i++) {
 8000984:	2301      	movs	r3, #1
 8000986:	75fb      	strb	r3, [r7, #23]
 8000988:	e009      	b.n	800099e <TemHumSensor_readRegister+0x46>
		I2C_transmit(pAddressRegister[i]);		// Send Data from register
 800098a:	7dfb      	ldrb	r3, [r7, #23]
 800098c:	68ba      	ldr	r2, [r7, #8]
 800098e:	4413      	add	r3, r2
 8000990:	781b      	ldrb	r3, [r3, #0]
 8000992:	4618      	mov	r0, r3
 8000994:	f7ff ff8a 	bl	80008ac <I2C_transmit>
	for (uint8_t i = 1; i < LengthCmd; i++) {
 8000998:	7dfb      	ldrb	r3, [r7, #23]
 800099a:	3301      	adds	r3, #1
 800099c:	75fb      	strb	r3, [r7, #23]
 800099e:	7dfa      	ldrb	r2, [r7, #23]
 80009a0:	7d7b      	ldrb	r3, [r7, #21]
 80009a2:	429a      	cmp	r2, r3
 80009a4:	d3f1      	bcc.n	800098a <TemHumSensor_readRegister+0x32>
	}

    if (delay > 0) {
 80009a6:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 80009a8:	2b00      	cmp	r3, #0
 80009aa:	d003      	beq.n	80009b4 <TemHumSensor_readRegister+0x5c>
        delay_ms(delay);
 80009ac:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 80009ae:	4618      	mov	r0, r3
 80009b0:	f7ff fe44 	bl	800063c <delay_ms>
    }

	I2C_stop();// condition stop
 80009b4:	f7ff ff96 	bl	80008e4 <I2C_stop>

	I2C_start(); // condition start
 80009b8:	f7ff ff2a 	bl	8000810 <I2C_start>
	I2C_address_direction(address << 1, I2C_Direction_Receiver); // send slave address - Received
 80009bc:	7bfb      	ldrb	r3, [r7, #15]
 80009be:	005b      	lsls	r3, r3, #1
 80009c0:	b2db      	uxtb	r3, r3
 80009c2:	2101      	movs	r1, #1
 80009c4:	4618      	mov	r0, r3
 80009c6:	f7ff ff41 	bl	800084c <I2C_address_direction>

	for (uint8_t i = 0; i < Length_Data; i++)
 80009ca:	2300      	movs	r3, #0
 80009cc:	75bb      	strb	r3, [r7, #22]
 80009ce:	e016      	b.n	80009fe <TemHumSensor_readRegister+0xa6>
	{
		if (i == (Length_Data - 1))
 80009d0:	7dba      	ldrb	r2, [r7, #22]
 80009d2:	7bbb      	ldrb	r3, [r7, #14]
 80009d4:	3b01      	subs	r3, #1
 80009d6:	429a      	cmp	r2, r3
 80009d8:	d107      	bne.n	80009ea <TemHumSensor_readRegister+0x92>
		{
			pDataRegister[i] = I2C_receive_nack();  // 	NA
 80009da:	7dbb      	ldrb	r3, [r7, #22]
 80009dc:	687a      	ldr	r2, [r7, #4]
 80009de:	18d4      	adds	r4, r2, r3
 80009e0:	f7ff ff8a 	bl	80008f8 <I2C_receive_nack>
 80009e4:	4603      	mov	r3, r0
 80009e6:	7023      	strb	r3, [r4, #0]
 80009e8:	e006      	b.n	80009f8 <TemHumSensor_readRegister+0xa0>
		}
		else
		{
			pDataRegister[i] = I2C_receive_ack();   // A
 80009ea:	7dbb      	ldrb	r3, [r7, #22]
 80009ec:	687a      	ldr	r2, [r7, #4]
 80009ee:	18d4      	adds	r4, r2, r3
 80009f0:	f7ff ff9a 	bl	8000928 <I2C_receive_ack>
 80009f4:	4603      	mov	r3, r0
 80009f6:	7023      	strb	r3, [r4, #0]
	for (uint8_t i = 0; i < Length_Data; i++)
 80009f8:	7dbb      	ldrb	r3, [r7, #22]
 80009fa:	3301      	adds	r3, #1
 80009fc:	75bb      	strb	r3, [r7, #22]
 80009fe:	7dba      	ldrb	r2, [r7, #22]
 8000a00:	7bbb      	ldrb	r3, [r7, #14]
 8000a02:	429a      	cmp	r2, r3
 8000a04:	d3e4      	bcc.n	80009d0 <TemHumSensor_readRegister+0x78>
		}
	}
	I2C_stop();
 8000a06:	f7ff ff6d 	bl	80008e4 <I2C_stop>

}
 8000a0a:	bf00      	nop
 8000a0c:	371c      	adds	r7, #28
 8000a0e:	46bd      	mov	sp, r7
 8000a10:	bd90      	pop	{r4, r7, pc}
	...

08000a14 <GetTemp_Sensor>:
 * @brief   Get value temperature
 * @param   None
 * @retval  Temperature
 */
uint32_t GetTemp_Sensor(void)
{
 8000a14:	b580      	push	{r7, lr}
 8000a16:	b086      	sub	sp, #24
 8000a18:	af02      	add	r7, sp, #8
	uint32_t RT;
    uint8_t pRT[3] = { 0 };	// pRT[0]: MSB		pRT[1]: LSB
 8000a1a:	4b15      	ldr	r3, [pc, #84]	; (8000a70 <GetTemp_Sensor+0x5c>)
 8000a1c:	881b      	ldrh	r3, [r3, #0]
 8000a1e:	813b      	strh	r3, [r7, #8]
 8000a20:	2300      	movs	r3, #0
 8000a22:	72bb      	strb	r3, [r7, #10]

    uint8_t CMD_MEASURE_TEMP[2] =  { 2, 0xE3 }; // gửi độ dài byte cần truyền và CMD_MEASURE chế độ HOLD MASTER MODE
 8000a24:	f24e 3302 	movw	r3, #58114	; 0xe302
 8000a28:	80bb      	strh	r3, [r7, #4]

    TemHumSensor_readRegister(SI7020_ADDR, CMD_MEASURE_TEMP, pRT, 3, 4);
 8000a2a:	f107 0208 	add.w	r2, r7, #8
 8000a2e:	1d39      	adds	r1, r7, #4
 8000a30:	2304      	movs	r3, #4
 8000a32:	9300      	str	r3, [sp, #0]
 8000a34:	2303      	movs	r3, #3
 8000a36:	2040      	movs	r0, #64	; 0x40
 8000a38:	f7ff ff8e 	bl	8000958 <TemHumSensor_readRegister>

    RT = (pRT[0] << 8) + pRT[1];			// RT_CODE (MSB << 8) + LSB		// Temp = ((17572* RT)/(0xFFu +1) - 4685)/100
 8000a3c:	7a3b      	ldrb	r3, [r7, #8]
 8000a3e:	021b      	lsls	r3, r3, #8
 8000a40:	7a7a      	ldrb	r2, [r7, #9]
 8000a42:	4413      	add	r3, r2
 8000a44:	60fb      	str	r3, [r7, #12]
    RT = ((RT * 17572) >> 16) - 4685;
 8000a46:	68fb      	ldr	r3, [r7, #12]
 8000a48:	f244 42a4 	movw	r2, #17572	; 0x44a4
 8000a4c:	fb02 f303 	mul.w	r3, r2, r3
 8000a50:	0c1b      	lsrs	r3, r3, #16
 8000a52:	f5a3 5392 	sub.w	r3, r3, #4672	; 0x1240
 8000a56:	3b0d      	subs	r3, #13
 8000a58:	60fb      	str	r3, [r7, #12]
    RT = RT/100;
 8000a5a:	68fb      	ldr	r3, [r7, #12]
 8000a5c:	4a05      	ldr	r2, [pc, #20]	; (8000a74 <GetTemp_Sensor+0x60>)
 8000a5e:	fba2 2303 	umull	r2, r3, r2, r3
 8000a62:	095b      	lsrs	r3, r3, #5
 8000a64:	60fb      	str	r3, [r7, #12]
    return RT;
 8000a66:	68fb      	ldr	r3, [r7, #12]
}
 8000a68:	4618      	mov	r0, r3
 8000a6a:	3710      	adds	r7, #16
 8000a6c:	46bd      	mov	sp, r7
 8000a6e:	bd80      	pop	{r7, pc}
 8000a70:	08004aa8 	.word	0x08004aa8
 8000a74:	51eb851f 	.word	0x51eb851f

08000a78 <GetHumi_Sensor>:
 * @brief   Get value humidity
 * @param   None
 * @retval  Humidity
 */
uint32_t GetHumi_Sensor(void)
{
 8000a78:	b580      	push	{r7, lr}
 8000a7a:	b086      	sub	sp, #24
 8000a7c:	af02      	add	r7, sp, #8
	uint32_t RH;
	uint8_t pRH[3] = { 0 };
 8000a7e:	4b15      	ldr	r3, [pc, #84]	; (8000ad4 <GetHumi_Sensor+0x5c>)
 8000a80:	881b      	ldrh	r3, [r3, #0]
 8000a82:	813b      	strh	r3, [r7, #8]
 8000a84:	2300      	movs	r3, #0
 8000a86:	72bb      	strb	r3, [r7, #10]


	uint8_t CMD_MEASURE_HUMI[2] =  { 2, 0xE5 }; // gửi độ dài byte cần truyền và CMD_MEASURE chế độ HOLD MASTER MODE
 8000a88:	f24e 5302 	movw	r3, #58626	; 0xe502
 8000a8c:	80bb      	strh	r3, [r7, #4]

    TemHumSensor_readRegister(SI7020_ADDR, CMD_MEASURE_HUMI, pRH, 3, 8);
 8000a8e:	f107 0208 	add.w	r2, r7, #8
 8000a92:	1d39      	adds	r1, r7, #4
 8000a94:	2308      	movs	r3, #8
 8000a96:	9300      	str	r3, [sp, #0]
 8000a98:	2303      	movs	r3, #3
 8000a9a:	2040      	movs	r0, #64	; 0x40
 8000a9c:	f7ff ff5c 	bl	8000958 <TemHumSensor_readRegister>

    RH = (pRH[0] << 8) + pRH[1]; // RH_CODE (MSB << 8) + LSB
 8000aa0:	7a3b      	ldrb	r3, [r7, #8]
 8000aa2:	021b      	lsls	r3, r3, #8
 8000aa4:	7a7a      	ldrb	r2, [r7, #9]
 8000aa6:	4413      	add	r3, r2
 8000aa8:	60fb      	str	r3, [r7, #12]
    RH = ((RH * 12500) >> 16) - 600;
 8000aaa:	68fb      	ldr	r3, [r7, #12]
 8000aac:	f243 02d4 	movw	r2, #12500	; 0x30d4
 8000ab0:	fb02 f303 	mul.w	r3, r2, r3
 8000ab4:	0c1b      	lsrs	r3, r3, #16
 8000ab6:	f5a3 7316 	sub.w	r3, r3, #600	; 0x258
 8000aba:	60fb      	str	r3, [r7, #12]
    RH = RH/100;
 8000abc:	68fb      	ldr	r3, [r7, #12]
 8000abe:	4a06      	ldr	r2, [pc, #24]	; (8000ad8 <GetHumi_Sensor+0x60>)
 8000ac0:	fba2 2303 	umull	r2, r3, r2, r3
 8000ac4:	095b      	lsrs	r3, r3, #5
 8000ac6:	60fb      	str	r3, [r7, #12]

    return RH;
 8000ac8:	68fb      	ldr	r3, [r7, #12]
}
 8000aca:	4618      	mov	r0, r3
 8000acc:	3710      	adds	r7, #16
 8000ace:	46bd      	mov	sp, r7
 8000ad0:	bd80      	pop	{r7, pc}
 8000ad2:	bf00      	nop
 8000ad4:	08004aa8 	.word	0x08004aa8
 8000ad8:	51eb851f 	.word	0x51eb851f

08000adc <processGetValueSensor>:
 * @func 	processGetValueSensor
 * @brief	Get value sensor
 * @param	None
 * @retval	None
 */
void processGetValueSensor(void) {
 8000adc:	b580      	push	{r7, lr}
 8000ade:	b082      	sub	sp, #8
 8000ae0:	af02      	add	r7, sp, #8
	// Get timer
	time_current = GetMilSecTick();
 8000ae2:	f000 ff73 	bl	80019cc <GetMilSecTick>
 8000ae6:	4603      	mov	r3, r0
 8000ae8:	4a58      	ldr	r2, [pc, #352]	; (8000c4c <processGetValueSensor+0x170>)
 8000aea:	6013      	str	r3, [r2, #0]

	if (time_current >= time_initial) {
 8000aec:	4b57      	ldr	r3, [pc, #348]	; (8000c4c <processGetValueSensor+0x170>)
 8000aee:	681a      	ldr	r2, [r3, #0]
 8000af0:	4b57      	ldr	r3, [pc, #348]	; (8000c50 <processGetValueSensor+0x174>)
 8000af2:	681b      	ldr	r3, [r3, #0]
 8000af4:	429a      	cmp	r2, r3
 8000af6:	d30a      	bcc.n	8000b0e <processGetValueSensor+0x32>
		time_total += time_current - time_initial;
 8000af8:	4b54      	ldr	r3, [pc, #336]	; (8000c4c <processGetValueSensor+0x170>)
 8000afa:	681a      	ldr	r2, [r3, #0]
 8000afc:	4b54      	ldr	r3, [pc, #336]	; (8000c50 <processGetValueSensor+0x174>)
 8000afe:	681b      	ldr	r3, [r3, #0]
 8000b00:	1ad2      	subs	r2, r2, r3
 8000b02:	4b54      	ldr	r3, [pc, #336]	; (8000c54 <processGetValueSensor+0x178>)
 8000b04:	681b      	ldr	r3, [r3, #0]
 8000b06:	4413      	add	r3, r2
 8000b08:	4a52      	ldr	r2, [pc, #328]	; (8000c54 <processGetValueSensor+0x178>)
 8000b0a:	6013      	str	r3, [r2, #0]
 8000b0c:	e00a      	b.n	8000b24 <processGetValueSensor+0x48>
	} else {
		time_total += 0xFFFFFFFFU - time_current + time_initial;
 8000b0e:	4b50      	ldr	r3, [pc, #320]	; (8000c50 <processGetValueSensor+0x174>)
 8000b10:	681a      	ldr	r2, [r3, #0]
 8000b12:	4b4e      	ldr	r3, [pc, #312]	; (8000c4c <processGetValueSensor+0x170>)
 8000b14:	681b      	ldr	r3, [r3, #0]
 8000b16:	1ad2      	subs	r2, r2, r3
 8000b18:	4b4e      	ldr	r3, [pc, #312]	; (8000c54 <processGetValueSensor+0x178>)
 8000b1a:	681b      	ldr	r3, [r3, #0]
 8000b1c:	4413      	add	r3, r2
 8000b1e:	3b01      	subs	r3, #1
 8000b20:	4a4c      	ldr	r2, [pc, #304]	; (8000c54 <processGetValueSensor+0x178>)
 8000b22:	6013      	str	r3, [r2, #0]
	}
	if (time_total == CYCLE_SEND_DATA_1) {
 8000b24:	4b4b      	ldr	r3, [pc, #300]	; (8000c54 <processGetValueSensor+0x178>)
 8000b26:	681b      	ldr	r3, [r3, #0]
 8000b28:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000b2c:	d10b      	bne.n	8000b46 <processGetValueSensor+0x6a>
		//Dùng để đọc giá trị nhiệt độ trả về từ cảm biến thông qua giao tiếp I2C.
		temperature = (uint8_t) (GetTemp_Sensor());
 8000b2e:	f7ff ff71 	bl	8000a14 <GetTemp_Sensor>
 8000b32:	4603      	mov	r3, r0
 8000b34:	b2da      	uxtb	r2, r3
 8000b36:	4b48      	ldr	r3, [pc, #288]	; (8000c58 <processGetValueSensor+0x17c>)
 8000b38:	701a      	strb	r2, [r3, #0]

		//Dùng để đọc giá trị độ ẩm trả về từ cảm biến thông qua giao tiếp I2C.
		humidity = (uint8_t) (GetHumi_Sensor());
 8000b3a:	f7ff ff9d 	bl	8000a78 <GetHumi_Sensor>
 8000b3e:	4603      	mov	r3, r0
 8000b40:	b2da      	uxtb	r2, r3
 8000b42:	4b46      	ldr	r3, [pc, #280]	; (8000c5c <processGetValueSensor+0x180>)
 8000b44:	701a      	strb	r2, [r3, #0]

	}
	if(time_total >= CYCLE_SEND_DATA_2)
 8000b46:	4b43      	ldr	r3, [pc, #268]	; (8000c54 <processGetValueSensor+0x178>)
 8000b48:	681b      	ldr	r3, [r3, #0]
 8000b4a:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8000b4e:	d376      	bcc.n	8000c3e <processGetValueSensor+0x162>
	{
		temperature1 = (uint8_t) (GetTemp_Sensor());
 8000b50:	f7ff ff60 	bl	8000a14 <GetTemp_Sensor>
 8000b54:	4603      	mov	r3, r0
 8000b56:	b2da      	uxtb	r2, r3
 8000b58:	4b41      	ldr	r3, [pc, #260]	; (8000c60 <processGetValueSensor+0x184>)
 8000b5a:	701a      	strb	r2, [r3, #0]

		humidity1 = (uint8_t) (GetHumi_Sensor());
 8000b5c:	f7ff ff8c 	bl	8000a78 <GetHumi_Sensor>
 8000b60:	4603      	mov	r3, r0
 8000b62:	b2da      	uxtb	r2, r3
 8000b64:	4b3f      	ldr	r3, [pc, #252]	; (8000c64 <processGetValueSensor+0x188>)
 8000b66:	701a      	strb	r2, [r3, #0]

		// nếu thời gian chênh lệch giữa lần đo 1 và lần đo 2 là 2 thì sẽ cập nhật giá trị sensor
		if( ((temperature1 > temperature ) && (temperature1 - temperature >= 2))
 8000b68:	4b3d      	ldr	r3, [pc, #244]	; (8000c60 <processGetValueSensor+0x184>)
 8000b6a:	781a      	ldrb	r2, [r3, #0]
 8000b6c:	4b3a      	ldr	r3, [pc, #232]	; (8000c58 <processGetValueSensor+0x17c>)
 8000b6e:	781b      	ldrb	r3, [r3, #0]
 8000b70:	429a      	cmp	r2, r3
 8000b72:	d907      	bls.n	8000b84 <processGetValueSensor+0xa8>
 8000b74:	4b3a      	ldr	r3, [pc, #232]	; (8000c60 <processGetValueSensor+0x184>)
 8000b76:	781b      	ldrb	r3, [r3, #0]
 8000b78:	461a      	mov	r2, r3
 8000b7a:	4b37      	ldr	r3, [pc, #220]	; (8000c58 <processGetValueSensor+0x17c>)
 8000b7c:	781b      	ldrb	r3, [r3, #0]
 8000b7e:	1ad3      	subs	r3, r2, r3
 8000b80:	2b01      	cmp	r3, #1
 8000b82:	dc29      	bgt.n	8000bd8 <processGetValueSensor+0xfc>
		 || ((temperature1 < temperature ) && (temperature1 - temperature <= 2))
 8000b84:	4b36      	ldr	r3, [pc, #216]	; (8000c60 <processGetValueSensor+0x184>)
 8000b86:	781a      	ldrb	r2, [r3, #0]
 8000b88:	4b33      	ldr	r3, [pc, #204]	; (8000c58 <processGetValueSensor+0x17c>)
 8000b8a:	781b      	ldrb	r3, [r3, #0]
 8000b8c:	429a      	cmp	r2, r3
 8000b8e:	d207      	bcs.n	8000ba0 <processGetValueSensor+0xc4>
 8000b90:	4b33      	ldr	r3, [pc, #204]	; (8000c60 <processGetValueSensor+0x184>)
 8000b92:	781b      	ldrb	r3, [r3, #0]
 8000b94:	461a      	mov	r2, r3
 8000b96:	4b30      	ldr	r3, [pc, #192]	; (8000c58 <processGetValueSensor+0x17c>)
 8000b98:	781b      	ldrb	r3, [r3, #0]
 8000b9a:	1ad3      	subs	r3, r2, r3
 8000b9c:	2b02      	cmp	r3, #2
 8000b9e:	dd1b      	ble.n	8000bd8 <processGetValueSensor+0xfc>
		 || ((humidity1 > humidity ) && (humidity1 - humidity >= 2))
 8000ba0:	4b30      	ldr	r3, [pc, #192]	; (8000c64 <processGetValueSensor+0x188>)
 8000ba2:	781a      	ldrb	r2, [r3, #0]
 8000ba4:	4b2d      	ldr	r3, [pc, #180]	; (8000c5c <processGetValueSensor+0x180>)
 8000ba6:	781b      	ldrb	r3, [r3, #0]
 8000ba8:	429a      	cmp	r2, r3
 8000baa:	d907      	bls.n	8000bbc <processGetValueSensor+0xe0>
 8000bac:	4b2d      	ldr	r3, [pc, #180]	; (8000c64 <processGetValueSensor+0x188>)
 8000bae:	781b      	ldrb	r3, [r3, #0]
 8000bb0:	461a      	mov	r2, r3
 8000bb2:	4b2a      	ldr	r3, [pc, #168]	; (8000c5c <processGetValueSensor+0x180>)
 8000bb4:	781b      	ldrb	r3, [r3, #0]
 8000bb6:	1ad3      	subs	r3, r2, r3
 8000bb8:	2b01      	cmp	r3, #1
 8000bba:	dc0d      	bgt.n	8000bd8 <processGetValueSensor+0xfc>
		 || ((humidity1 < humidity ) && (humidity1 - humidity <= 2)))
 8000bbc:	4b29      	ldr	r3, [pc, #164]	; (8000c64 <processGetValueSensor+0x188>)
 8000bbe:	781a      	ldrb	r2, [r3, #0]
 8000bc0:	4b26      	ldr	r3, [pc, #152]	; (8000c5c <processGetValueSensor+0x180>)
 8000bc2:	781b      	ldrb	r3, [r3, #0]
 8000bc4:	429a      	cmp	r2, r3
 8000bc6:	d237      	bcs.n	8000c38 <processGetValueSensor+0x15c>
 8000bc8:	4b26      	ldr	r3, [pc, #152]	; (8000c64 <processGetValueSensor+0x188>)
 8000bca:	781b      	ldrb	r3, [r3, #0]
 8000bcc:	461a      	mov	r2, r3
 8000bce:	4b23      	ldr	r3, [pc, #140]	; (8000c5c <processGetValueSensor+0x180>)
 8000bd0:	781b      	ldrb	r3, [r3, #0]
 8000bd2:	1ad3      	subs	r3, r2, r3
 8000bd4:	2b02      	cmp	r3, #2
 8000bd6:	dc2f      	bgt.n	8000c38 <processGetValueSensor+0x15c>
		{
			ucg_DrawString(&ucg, 0, 32, 0, "Nhom 3");
 8000bd8:	4b23      	ldr	r3, [pc, #140]	; (8000c68 <processGetValueSensor+0x18c>)
 8000bda:	9300      	str	r3, [sp, #0]
 8000bdc:	2300      	movs	r3, #0
 8000bde:	2220      	movs	r2, #32
 8000be0:	2100      	movs	r1, #0
 8000be2:	4822      	ldr	r0, [pc, #136]	; (8000c6c <processGetValueSensor+0x190>)
 8000be4:	f002 fa68 	bl	80030b8 <ucg_DrawString>
			memset(src1, 0, sizeof(src1));
 8000be8:	2214      	movs	r2, #20
 8000bea:	2100      	movs	r1, #0
 8000bec:	4820      	ldr	r0, [pc, #128]	; (8000c70 <processGetValueSensor+0x194>)
 8000bee:	f003 facb 	bl	8004188 <memset>
			sprintf(src1, " Temp = %d oC  ", temperature1);
 8000bf2:	4b1b      	ldr	r3, [pc, #108]	; (8000c60 <processGetValueSensor+0x184>)
 8000bf4:	781b      	ldrb	r3, [r3, #0]
 8000bf6:	461a      	mov	r2, r3
 8000bf8:	491e      	ldr	r1, [pc, #120]	; (8000c74 <processGetValueSensor+0x198>)
 8000bfa:	481d      	ldr	r0, [pc, #116]	; (8000c70 <processGetValueSensor+0x194>)
 8000bfc:	f003 faa4 	bl	8004148 <siprintf>
			ucg_DrawString(&ucg, 0, 52, 0, src1);
 8000c00:	4b1b      	ldr	r3, [pc, #108]	; (8000c70 <processGetValueSensor+0x194>)
 8000c02:	9300      	str	r3, [sp, #0]
 8000c04:	2300      	movs	r3, #0
 8000c06:	2234      	movs	r2, #52	; 0x34
 8000c08:	2100      	movs	r1, #0
 8000c0a:	4818      	ldr	r0, [pc, #96]	; (8000c6c <processGetValueSensor+0x190>)
 8000c0c:	f002 fa54 	bl	80030b8 <ucg_DrawString>

			memset(src2, 0, sizeof(src2));
 8000c10:	2214      	movs	r2, #20
 8000c12:	2100      	movs	r1, #0
 8000c14:	4818      	ldr	r0, [pc, #96]	; (8000c78 <processGetValueSensor+0x19c>)
 8000c16:	f003 fab7 	bl	8004188 <memset>
			sprintf(src2, " Humi = %3d %%   ", humidity1);
 8000c1a:	4b12      	ldr	r3, [pc, #72]	; (8000c64 <processGetValueSensor+0x188>)
 8000c1c:	781b      	ldrb	r3, [r3, #0]
 8000c1e:	461a      	mov	r2, r3
 8000c20:	4916      	ldr	r1, [pc, #88]	; (8000c7c <processGetValueSensor+0x1a0>)
 8000c22:	4815      	ldr	r0, [pc, #84]	; (8000c78 <processGetValueSensor+0x19c>)
 8000c24:	f003 fa90 	bl	8004148 <siprintf>
			ucg_DrawString(&ucg, 0, 72, 0, src2);
 8000c28:	4b13      	ldr	r3, [pc, #76]	; (8000c78 <processGetValueSensor+0x19c>)
 8000c2a:	9300      	str	r3, [sp, #0]
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	2248      	movs	r2, #72	; 0x48
 8000c30:	2100      	movs	r1, #0
 8000c32:	480e      	ldr	r0, [pc, #56]	; (8000c6c <processGetValueSensor+0x190>)
 8000c34:	f002 fa40 	bl	80030b8 <ucg_DrawString>
		}

		time_total = 0;
 8000c38:	4b06      	ldr	r3, [pc, #24]	; (8000c54 <processGetValueSensor+0x178>)
 8000c3a:	2200      	movs	r2, #0
 8000c3c:	601a      	str	r2, [r3, #0]
		// Reset lại biến thời gian sau quá trình đọc giá trị nhiệt độ - độ ẩm.

	}
	time_initial = time_current;
 8000c3e:	4b03      	ldr	r3, [pc, #12]	; (8000c4c <processGetValueSensor+0x170>)
 8000c40:	681b      	ldr	r3, [r3, #0]
 8000c42:	4a03      	ldr	r2, [pc, #12]	; (8000c50 <processGetValueSensor+0x174>)
 8000c44:	6013      	str	r3, [r2, #0]



}
 8000c46:	bf00      	nop
 8000c48:	46bd      	mov	sp, r7
 8000c4a:	bd80      	pop	{r7, pc}
 8000c4c:	2000014c 	.word	0x2000014c
 8000c50:	20000148 	.word	0x20000148
 8000c54:	200001a4 	.word	0x200001a4
 8000c58:	200001a8 	.word	0x200001a8
 8000c5c:	200001a9 	.word	0x200001a9
 8000c60:	200001aa 	.word	0x200001aa
 8000c64:	200001ab 	.word	0x200001ab
 8000c68:	08004aac 	.word	0x08004aac
 8000c6c:	20000094 	.word	0x20000094
 8000c70:	20000154 	.word	0x20000154
 8000c74:	08004ab4 	.word	0x08004ab4
 8000c78:	20000168 	.word	0x20000168
 8000c7c:	08004ac4 	.word	0x08004ac4

08000c80 <Scan_SensorLCD>:
* @brief	Scan display value sensor
* @param	None
* @retval	None
*/
void Scan_SensorLCD(void)
{
 8000c80:	b580      	push	{r7, lr}
 8000c82:	b082      	sub	sp, #8
 8000c84:	af02      	add	r7, sp, #8
	ucg_DrawString(&ucg, 0, 32, 0, "Nhom 3");
 8000c86:	4b19      	ldr	r3, [pc, #100]	; (8000cec <Scan_SensorLCD+0x6c>)
 8000c88:	9300      	str	r3, [sp, #0]
 8000c8a:	2300      	movs	r3, #0
 8000c8c:	2220      	movs	r2, #32
 8000c8e:	2100      	movs	r1, #0
 8000c90:	4817      	ldr	r0, [pc, #92]	; (8000cf0 <Scan_SensorLCD+0x70>)
 8000c92:	f002 fa11 	bl	80030b8 <ucg_DrawString>
	memset(src3, 0, sizeof(src3));
 8000c96:	2214      	movs	r2, #20
 8000c98:	2100      	movs	r1, #0
 8000c9a:	4816      	ldr	r0, [pc, #88]	; (8000cf4 <Scan_SensorLCD+0x74>)
 8000c9c:	f003 fa74 	bl	8004188 <memset>
	sprintf(src3, " Temp = %d oC  ", temperature);
 8000ca0:	4b15      	ldr	r3, [pc, #84]	; (8000cf8 <Scan_SensorLCD+0x78>)
 8000ca2:	781b      	ldrb	r3, [r3, #0]
 8000ca4:	461a      	mov	r2, r3
 8000ca6:	4915      	ldr	r1, [pc, #84]	; (8000cfc <Scan_SensorLCD+0x7c>)
 8000ca8:	4812      	ldr	r0, [pc, #72]	; (8000cf4 <Scan_SensorLCD+0x74>)
 8000caa:	f003 fa4d 	bl	8004148 <siprintf>
	ucg_DrawString(&ucg, 0, 52, 0, src3);
 8000cae:	4b11      	ldr	r3, [pc, #68]	; (8000cf4 <Scan_SensorLCD+0x74>)
 8000cb0:	9300      	str	r3, [sp, #0]
 8000cb2:	2300      	movs	r3, #0
 8000cb4:	2234      	movs	r2, #52	; 0x34
 8000cb6:	2100      	movs	r1, #0
 8000cb8:	480d      	ldr	r0, [pc, #52]	; (8000cf0 <Scan_SensorLCD+0x70>)
 8000cba:	f002 f9fd 	bl	80030b8 <ucg_DrawString>

	memset(src4, 0, sizeof(src4));
 8000cbe:	2214      	movs	r2, #20
 8000cc0:	2100      	movs	r1, #0
 8000cc2:	480f      	ldr	r0, [pc, #60]	; (8000d00 <Scan_SensorLCD+0x80>)
 8000cc4:	f003 fa60 	bl	8004188 <memset>
	sprintf(src4, " Humi = %3d %%   ", humidity);
 8000cc8:	4b0e      	ldr	r3, [pc, #56]	; (8000d04 <Scan_SensorLCD+0x84>)
 8000cca:	781b      	ldrb	r3, [r3, #0]
 8000ccc:	461a      	mov	r2, r3
 8000cce:	490e      	ldr	r1, [pc, #56]	; (8000d08 <Scan_SensorLCD+0x88>)
 8000cd0:	480b      	ldr	r0, [pc, #44]	; (8000d00 <Scan_SensorLCD+0x80>)
 8000cd2:	f003 fa39 	bl	8004148 <siprintf>
	ucg_DrawString(&ucg, 0, 72, 0, src4);
 8000cd6:	4b0a      	ldr	r3, [pc, #40]	; (8000d00 <Scan_SensorLCD+0x80>)
 8000cd8:	9300      	str	r3, [sp, #0]
 8000cda:	2300      	movs	r3, #0
 8000cdc:	2248      	movs	r2, #72	; 0x48
 8000cde:	2100      	movs	r1, #0
 8000ce0:	4803      	ldr	r0, [pc, #12]	; (8000cf0 <Scan_SensorLCD+0x70>)
 8000ce2:	f002 f9e9 	bl	80030b8 <ucg_DrawString>
}
 8000ce6:	bf00      	nop
 8000ce8:	46bd      	mov	sp, r7
 8000cea:	bd80      	pop	{r7, pc}
 8000cec:	08004aac 	.word	0x08004aac
 8000cf0:	20000094 	.word	0x20000094
 8000cf4:	2000017c 	.word	0x2000017c
 8000cf8:	200001a8 	.word	0x200001a8
 8000cfc:	08004ab4 	.word	0x08004ab4
 8000d00:	20000190 	.word	0x20000190
 8000d04:	200001a9 	.word	0x200001a9
 8000d08:	08004ac4 	.word	0x08004ac4

08000d0c <Scan_TimeSensor>:
* @brief	Scan period 1s
* @param	None
* @retval	None
*/
void Scan_TimeSensor(uint32_t byRepeats)
{
 8000d0c:	b580      	push	{r7, lr}
 8000d0e:	b084      	sub	sp, #16
 8000d10:	af02      	add	r7, sp, #8
 8000d12:	6078      	str	r0, [r7, #4]
	if (idTimer != NO_TIMER) {
 8000d14:	4b0c      	ldr	r3, [pc, #48]	; (8000d48 <Scan_TimeSensor+0x3c>)
 8000d16:	681b      	ldr	r3, [r3, #0]
 8000d18:	2bff      	cmp	r3, #255	; 0xff
 8000d1a:	d005      	beq.n	8000d28 <Scan_TimeSensor+0x1c>
	TimerStop(idTimer);
 8000d1c:	4b0a      	ldr	r3, [pc, #40]	; (8000d48 <Scan_TimeSensor+0x3c>)
 8000d1e:	681b      	ldr	r3, [r3, #0]
 8000d20:	b2db      	uxtb	r3, r3
 8000d22:	4618      	mov	r0, r3
 8000d24:	f000 fe02 	bl	800192c <TimerStop>
	}
	idTimer = TimerStart("Scan_sensor", byRepeats, TIMER_REPEAT_FOREVER, (void*) Scan_SensorLCD, NULL);
 8000d28:	2300      	movs	r3, #0
 8000d2a:	9300      	str	r3, [sp, #0]
 8000d2c:	4b07      	ldr	r3, [pc, #28]	; (8000d4c <Scan_TimeSensor+0x40>)
 8000d2e:	22ff      	movs	r2, #255	; 0xff
 8000d30:	6879      	ldr	r1, [r7, #4]
 8000d32:	4807      	ldr	r0, [pc, #28]	; (8000d50 <Scan_TimeSensor+0x44>)
 8000d34:	f000 fd98 	bl	8001868 <TimerStart>
 8000d38:	4603      	mov	r3, r0
 8000d3a:	461a      	mov	r2, r3
 8000d3c:	4b02      	ldr	r3, [pc, #8]	; (8000d48 <Scan_TimeSensor+0x3c>)
 8000d3e:	601a      	str	r2, [r3, #0]
}
 8000d40:	bf00      	nop
 8000d42:	3708      	adds	r7, #8
 8000d44:	46bd      	mov	sp, r7
 8000d46:	bd80      	pop	{r7, pc}
 8000d48:	20000150 	.word	0x20000150
 8000d4c:	08000c81 	.word	0x08000c81
 8000d50:	08004ad8 	.word	0x08004ad8

08000d54 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000d54:	b580      	push	{r7, lr}
 8000d56:	b086      	sub	sp, #24
 8000d58:	af00      	add	r7, sp, #0
 8000d5a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000d5c:	4a14      	ldr	r2, [pc, #80]	; (8000db0 <_sbrk+0x5c>)
 8000d5e:	4b15      	ldr	r3, [pc, #84]	; (8000db4 <_sbrk+0x60>)
 8000d60:	1ad3      	subs	r3, r2, r3
 8000d62:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000d64:	697b      	ldr	r3, [r7, #20]
 8000d66:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000d68:	4b13      	ldr	r3, [pc, #76]	; (8000db8 <_sbrk+0x64>)
 8000d6a:	681b      	ldr	r3, [r3, #0]
 8000d6c:	2b00      	cmp	r3, #0
 8000d6e:	d102      	bne.n	8000d76 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000d70:	4b11      	ldr	r3, [pc, #68]	; (8000db8 <_sbrk+0x64>)
 8000d72:	4a12      	ldr	r2, [pc, #72]	; (8000dbc <_sbrk+0x68>)
 8000d74:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000d76:	4b10      	ldr	r3, [pc, #64]	; (8000db8 <_sbrk+0x64>)
 8000d78:	681a      	ldr	r2, [r3, #0]
 8000d7a:	687b      	ldr	r3, [r7, #4]
 8000d7c:	4413      	add	r3, r2
 8000d7e:	693a      	ldr	r2, [r7, #16]
 8000d80:	429a      	cmp	r2, r3
 8000d82:	d207      	bcs.n	8000d94 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000d84:	f003 fa08 	bl	8004198 <__errno>
 8000d88:	4603      	mov	r3, r0
 8000d8a:	220c      	movs	r2, #12
 8000d8c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000d8e:	f04f 33ff 	mov.w	r3, #4294967295
 8000d92:	e009      	b.n	8000da8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000d94:	4b08      	ldr	r3, [pc, #32]	; (8000db8 <_sbrk+0x64>)
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000d9a:	4b07      	ldr	r3, [pc, #28]	; (8000db8 <_sbrk+0x64>)
 8000d9c:	681a      	ldr	r2, [r3, #0]
 8000d9e:	687b      	ldr	r3, [r7, #4]
 8000da0:	4413      	add	r3, r2
 8000da2:	4a05      	ldr	r2, [pc, #20]	; (8000db8 <_sbrk+0x64>)
 8000da4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000da6:	68fb      	ldr	r3, [r7, #12]
}
 8000da8:	4618      	mov	r0, r3
 8000daa:	3718      	adds	r7, #24
 8000dac:	46bd      	mov	sp, r7
 8000dae:	bd80      	pop	{r7, pc}
 8000db0:	20018000 	.word	0x20018000
 8000db4:	00000400 	.word	0x00000400
 8000db8:	200001ac 	.word	0x200001ac
 8000dbc:	200014a8 	.word	0x200014a8

08000dc0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000dc0:	480d      	ldr	r0, [pc, #52]	; (8000df8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000dc2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000dc4:	f000 f826 	bl	8000e14 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000dc8:	480c      	ldr	r0, [pc, #48]	; (8000dfc <LoopForever+0x6>)
  ldr r1, =_edata
 8000dca:	490d      	ldr	r1, [pc, #52]	; (8000e00 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000dcc:	4a0d      	ldr	r2, [pc, #52]	; (8000e04 <LoopForever+0xe>)
  movs r3, #0
 8000dce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000dd0:	e002      	b.n	8000dd8 <LoopCopyDataInit>

08000dd2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000dd2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000dd4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000dd6:	3304      	adds	r3, #4

08000dd8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000dd8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000dda:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000ddc:	d3f9      	bcc.n	8000dd2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000dde:	4a0a      	ldr	r2, [pc, #40]	; (8000e08 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000de0:	4c0a      	ldr	r4, [pc, #40]	; (8000e0c <LoopForever+0x16>)
  movs r3, #0
 8000de2:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000de4:	e001      	b.n	8000dea <LoopFillZerobss>

08000de6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000de6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000de8:	3204      	adds	r2, #4

08000dea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000dea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000dec:	d3fb      	bcc.n	8000de6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000dee:	f003 f9d9 	bl	80041a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000df2:	f7ff fbdd 	bl	80005b0 <main>

08000df6 <LoopForever>:

LoopForever:
  b LoopForever
 8000df6:	e7fe      	b.n	8000df6 <LoopForever>
  ldr   r0, =_estack
 8000df8:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000dfc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000e00:	20000078 	.word	0x20000078
  ldr r2, =_sidata
 8000e04:	080053b8 	.word	0x080053b8
  ldr r2, =_sbss
 8000e08:	20000078 	.word	0x20000078
  ldr r4, =_ebss
 8000e0c:	200014a4 	.word	0x200014a4

08000e10 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000e10:	e7fe      	b.n	8000e10 <ADC_IRQHandler>
	...

08000e14 <SystemInit>:
 8000e14:	b580      	push	{r7, lr}
 8000e16:	af00      	add	r7, sp, #0
 8000e18:	4b16      	ldr	r3, [pc, #88]	; (8000e74 <SystemInit+0x60>)
 8000e1a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000e1e:	4a15      	ldr	r2, [pc, #84]	; (8000e74 <SystemInit+0x60>)
 8000e20:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000e24:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8000e28:	4b13      	ldr	r3, [pc, #76]	; (8000e78 <SystemInit+0x64>)
 8000e2a:	681b      	ldr	r3, [r3, #0]
 8000e2c:	4a12      	ldr	r2, [pc, #72]	; (8000e78 <SystemInit+0x64>)
 8000e2e:	f043 0301 	orr.w	r3, r3, #1
 8000e32:	6013      	str	r3, [r2, #0]
 8000e34:	4b10      	ldr	r3, [pc, #64]	; (8000e78 <SystemInit+0x64>)
 8000e36:	2200      	movs	r2, #0
 8000e38:	609a      	str	r2, [r3, #8]
 8000e3a:	4b0f      	ldr	r3, [pc, #60]	; (8000e78 <SystemInit+0x64>)
 8000e3c:	681b      	ldr	r3, [r3, #0]
 8000e3e:	4a0e      	ldr	r2, [pc, #56]	; (8000e78 <SystemInit+0x64>)
 8000e40:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000e44:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000e48:	6013      	str	r3, [r2, #0]
 8000e4a:	4b0b      	ldr	r3, [pc, #44]	; (8000e78 <SystemInit+0x64>)
 8000e4c:	4a0b      	ldr	r2, [pc, #44]	; (8000e7c <SystemInit+0x68>)
 8000e4e:	605a      	str	r2, [r3, #4]
 8000e50:	4b09      	ldr	r3, [pc, #36]	; (8000e78 <SystemInit+0x64>)
 8000e52:	681b      	ldr	r3, [r3, #0]
 8000e54:	4a08      	ldr	r2, [pc, #32]	; (8000e78 <SystemInit+0x64>)
 8000e56:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000e5a:	6013      	str	r3, [r2, #0]
 8000e5c:	4b06      	ldr	r3, [pc, #24]	; (8000e78 <SystemInit+0x64>)
 8000e5e:	2200      	movs	r2, #0
 8000e60:	60da      	str	r2, [r3, #12]
 8000e62:	f000 f889 	bl	8000f78 <SetSysClock>
 8000e66:	4b03      	ldr	r3, [pc, #12]	; (8000e74 <SystemInit+0x60>)
 8000e68:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000e6c:	609a      	str	r2, [r3, #8]
 8000e6e:	bf00      	nop
 8000e70:	bd80      	pop	{r7, pc}
 8000e72:	bf00      	nop
 8000e74:	e000ed00 	.word	0xe000ed00
 8000e78:	40023800 	.word	0x40023800
 8000e7c:	24003010 	.word	0x24003010

08000e80 <SystemCoreClockUpdate>:
 8000e80:	b480      	push	{r7}
 8000e82:	b087      	sub	sp, #28
 8000e84:	af00      	add	r7, sp, #0
 8000e86:	2300      	movs	r3, #0
 8000e88:	613b      	str	r3, [r7, #16]
 8000e8a:	2300      	movs	r3, #0
 8000e8c:	617b      	str	r3, [r7, #20]
 8000e8e:	2302      	movs	r3, #2
 8000e90:	60fb      	str	r3, [r7, #12]
 8000e92:	2300      	movs	r3, #0
 8000e94:	60bb      	str	r3, [r7, #8]
 8000e96:	2302      	movs	r3, #2
 8000e98:	607b      	str	r3, [r7, #4]
 8000e9a:	4b32      	ldr	r3, [pc, #200]	; (8000f64 <SystemCoreClockUpdate+0xe4>)
 8000e9c:	689b      	ldr	r3, [r3, #8]
 8000e9e:	f003 030c 	and.w	r3, r3, #12
 8000ea2:	613b      	str	r3, [r7, #16]
 8000ea4:	693b      	ldr	r3, [r7, #16]
 8000ea6:	2b04      	cmp	r3, #4
 8000ea8:	d007      	beq.n	8000eba <SystemCoreClockUpdate+0x3a>
 8000eaa:	2b08      	cmp	r3, #8
 8000eac:	d009      	beq.n	8000ec2 <SystemCoreClockUpdate+0x42>
 8000eae:	2b00      	cmp	r3, #0
 8000eb0:	d13d      	bne.n	8000f2e <SystemCoreClockUpdate+0xae>
 8000eb2:	4b2d      	ldr	r3, [pc, #180]	; (8000f68 <SystemCoreClockUpdate+0xe8>)
 8000eb4:	4a2d      	ldr	r2, [pc, #180]	; (8000f6c <SystemCoreClockUpdate+0xec>)
 8000eb6:	601a      	str	r2, [r3, #0]
 8000eb8:	e03d      	b.n	8000f36 <SystemCoreClockUpdate+0xb6>
 8000eba:	4b2b      	ldr	r3, [pc, #172]	; (8000f68 <SystemCoreClockUpdate+0xe8>)
 8000ebc:	4a2c      	ldr	r2, [pc, #176]	; (8000f70 <SystemCoreClockUpdate+0xf0>)
 8000ebe:	601a      	str	r2, [r3, #0]
 8000ec0:	e039      	b.n	8000f36 <SystemCoreClockUpdate+0xb6>
 8000ec2:	4b28      	ldr	r3, [pc, #160]	; (8000f64 <SystemCoreClockUpdate+0xe4>)
 8000ec4:	685b      	ldr	r3, [r3, #4]
 8000ec6:	0d9b      	lsrs	r3, r3, #22
 8000ec8:	f003 0301 	and.w	r3, r3, #1
 8000ecc:	60bb      	str	r3, [r7, #8]
 8000ece:	4b25      	ldr	r3, [pc, #148]	; (8000f64 <SystemCoreClockUpdate+0xe4>)
 8000ed0:	685b      	ldr	r3, [r3, #4]
 8000ed2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000ed6:	607b      	str	r3, [r7, #4]
 8000ed8:	68bb      	ldr	r3, [r7, #8]
 8000eda:	2b00      	cmp	r3, #0
 8000edc:	d00c      	beq.n	8000ef8 <SystemCoreClockUpdate+0x78>
 8000ede:	4a24      	ldr	r2, [pc, #144]	; (8000f70 <SystemCoreClockUpdate+0xf0>)
 8000ee0:	687b      	ldr	r3, [r7, #4]
 8000ee2:	fbb2 f3f3 	udiv	r3, r2, r3
 8000ee6:	4a1f      	ldr	r2, [pc, #124]	; (8000f64 <SystemCoreClockUpdate+0xe4>)
 8000ee8:	6852      	ldr	r2, [r2, #4]
 8000eea:	0992      	lsrs	r2, r2, #6
 8000eec:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000ef0:	fb02 f303 	mul.w	r3, r2, r3
 8000ef4:	617b      	str	r3, [r7, #20]
 8000ef6:	e00b      	b.n	8000f10 <SystemCoreClockUpdate+0x90>
 8000ef8:	4a1c      	ldr	r2, [pc, #112]	; (8000f6c <SystemCoreClockUpdate+0xec>)
 8000efa:	687b      	ldr	r3, [r7, #4]
 8000efc:	fbb2 f3f3 	udiv	r3, r2, r3
 8000f00:	4a18      	ldr	r2, [pc, #96]	; (8000f64 <SystemCoreClockUpdate+0xe4>)
 8000f02:	6852      	ldr	r2, [r2, #4]
 8000f04:	0992      	lsrs	r2, r2, #6
 8000f06:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000f0a:	fb02 f303 	mul.w	r3, r2, r3
 8000f0e:	617b      	str	r3, [r7, #20]
 8000f10:	4b14      	ldr	r3, [pc, #80]	; (8000f64 <SystemCoreClockUpdate+0xe4>)
 8000f12:	685b      	ldr	r3, [r3, #4]
 8000f14:	0c1b      	lsrs	r3, r3, #16
 8000f16:	f003 0303 	and.w	r3, r3, #3
 8000f1a:	3301      	adds	r3, #1
 8000f1c:	005b      	lsls	r3, r3, #1
 8000f1e:	60fb      	str	r3, [r7, #12]
 8000f20:	697a      	ldr	r2, [r7, #20]
 8000f22:	68fb      	ldr	r3, [r7, #12]
 8000f24:	fbb2 f3f3 	udiv	r3, r2, r3
 8000f28:	4a0f      	ldr	r2, [pc, #60]	; (8000f68 <SystemCoreClockUpdate+0xe8>)
 8000f2a:	6013      	str	r3, [r2, #0]
 8000f2c:	e003      	b.n	8000f36 <SystemCoreClockUpdate+0xb6>
 8000f2e:	4b0e      	ldr	r3, [pc, #56]	; (8000f68 <SystemCoreClockUpdate+0xe8>)
 8000f30:	4a0e      	ldr	r2, [pc, #56]	; (8000f6c <SystemCoreClockUpdate+0xec>)
 8000f32:	601a      	str	r2, [r3, #0]
 8000f34:	bf00      	nop
 8000f36:	4b0b      	ldr	r3, [pc, #44]	; (8000f64 <SystemCoreClockUpdate+0xe4>)
 8000f38:	689b      	ldr	r3, [r3, #8]
 8000f3a:	091b      	lsrs	r3, r3, #4
 8000f3c:	f003 030f 	and.w	r3, r3, #15
 8000f40:	4a0c      	ldr	r2, [pc, #48]	; (8000f74 <SystemCoreClockUpdate+0xf4>)
 8000f42:	5cd3      	ldrb	r3, [r2, r3]
 8000f44:	b2db      	uxtb	r3, r3
 8000f46:	613b      	str	r3, [r7, #16]
 8000f48:	4b07      	ldr	r3, [pc, #28]	; (8000f68 <SystemCoreClockUpdate+0xe8>)
 8000f4a:	681a      	ldr	r2, [r3, #0]
 8000f4c:	693b      	ldr	r3, [r7, #16]
 8000f4e:	fa22 f303 	lsr.w	r3, r2, r3
 8000f52:	4a05      	ldr	r2, [pc, #20]	; (8000f68 <SystemCoreClockUpdate+0xe8>)
 8000f54:	6013      	str	r3, [r2, #0]
 8000f56:	bf00      	nop
 8000f58:	371c      	adds	r7, #28
 8000f5a:	46bd      	mov	sp, r7
 8000f5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f60:	4770      	bx	lr
 8000f62:	bf00      	nop
 8000f64:	40023800 	.word	0x40023800
 8000f68:	20000000 	.word	0x20000000
 8000f6c:	00f42400 	.word	0x00f42400
 8000f70:	017d7840 	.word	0x017d7840
 8000f74:	20000004 	.word	0x20000004

08000f78 <SetSysClock>:
 8000f78:	b480      	push	{r7}
 8000f7a:	af00      	add	r7, sp, #0
 8000f7c:	4b22      	ldr	r3, [pc, #136]	; (8001008 <SetSysClock+0x90>)
 8000f7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f80:	4a21      	ldr	r2, [pc, #132]	; (8001008 <SetSysClock+0x90>)
 8000f82:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000f86:	6413      	str	r3, [r2, #64]	; 0x40
 8000f88:	4b20      	ldr	r3, [pc, #128]	; (800100c <SetSysClock+0x94>)
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	4a1f      	ldr	r2, [pc, #124]	; (800100c <SetSysClock+0x94>)
 8000f8e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000f92:	6013      	str	r3, [r2, #0]
 8000f94:	4b1c      	ldr	r3, [pc, #112]	; (8001008 <SetSysClock+0x90>)
 8000f96:	4a1c      	ldr	r2, [pc, #112]	; (8001008 <SetSysClock+0x90>)
 8000f98:	689b      	ldr	r3, [r3, #8]
 8000f9a:	6093      	str	r3, [r2, #8]
 8000f9c:	4b1a      	ldr	r3, [pc, #104]	; (8001008 <SetSysClock+0x90>)
 8000f9e:	4a1a      	ldr	r2, [pc, #104]	; (8001008 <SetSysClock+0x90>)
 8000fa0:	689b      	ldr	r3, [r3, #8]
 8000fa2:	6093      	str	r3, [r2, #8]
 8000fa4:	4b18      	ldr	r3, [pc, #96]	; (8001008 <SetSysClock+0x90>)
 8000fa6:	689b      	ldr	r3, [r3, #8]
 8000fa8:	4a17      	ldr	r2, [pc, #92]	; (8001008 <SetSysClock+0x90>)
 8000faa:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000fae:	6093      	str	r3, [r2, #8]
 8000fb0:	4b15      	ldr	r3, [pc, #84]	; (8001008 <SetSysClock+0x90>)
 8000fb2:	4a17      	ldr	r2, [pc, #92]	; (8001010 <SetSysClock+0x98>)
 8000fb4:	605a      	str	r2, [r3, #4]
 8000fb6:	4b14      	ldr	r3, [pc, #80]	; (8001008 <SetSysClock+0x90>)
 8000fb8:	681b      	ldr	r3, [r3, #0]
 8000fba:	4a13      	ldr	r2, [pc, #76]	; (8001008 <SetSysClock+0x90>)
 8000fbc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000fc0:	6013      	str	r3, [r2, #0]
 8000fc2:	bf00      	nop
 8000fc4:	4b10      	ldr	r3, [pc, #64]	; (8001008 <SetSysClock+0x90>)
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	d0f9      	beq.n	8000fc4 <SetSysClock+0x4c>
 8000fd0:	4b10      	ldr	r3, [pc, #64]	; (8001014 <SetSysClock+0x9c>)
 8000fd2:	f240 6202 	movw	r2, #1538	; 0x602
 8000fd6:	601a      	str	r2, [r3, #0]
 8000fd8:	4b0b      	ldr	r3, [pc, #44]	; (8001008 <SetSysClock+0x90>)
 8000fda:	689b      	ldr	r3, [r3, #8]
 8000fdc:	4a0a      	ldr	r2, [pc, #40]	; (8001008 <SetSysClock+0x90>)
 8000fde:	f023 0303 	bic.w	r3, r3, #3
 8000fe2:	6093      	str	r3, [r2, #8]
 8000fe4:	4b08      	ldr	r3, [pc, #32]	; (8001008 <SetSysClock+0x90>)
 8000fe6:	689b      	ldr	r3, [r3, #8]
 8000fe8:	4a07      	ldr	r2, [pc, #28]	; (8001008 <SetSysClock+0x90>)
 8000fea:	f043 0302 	orr.w	r3, r3, #2
 8000fee:	6093      	str	r3, [r2, #8]
 8000ff0:	bf00      	nop
 8000ff2:	4b05      	ldr	r3, [pc, #20]	; (8001008 <SetSysClock+0x90>)
 8000ff4:	689b      	ldr	r3, [r3, #8]
 8000ff6:	f003 030c 	and.w	r3, r3, #12
 8000ffa:	2b08      	cmp	r3, #8
 8000ffc:	d1f9      	bne.n	8000ff2 <SetSysClock+0x7a>
 8000ffe:	bf00      	nop
 8001000:	46bd      	mov	sp, r7
 8001002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001006:	4770      	bx	lr
 8001008:	40023800 	.word	0x40023800
 800100c:	40007000 	.word	0x40007000
 8001010:	08015410 	.word	0x08015410
 8001014:	40023c00 	.word	0x40023c00

08001018 <GPIO_Init>:
 8001018:	b480      	push	{r7}
 800101a:	b087      	sub	sp, #28
 800101c:	af00      	add	r7, sp, #0
 800101e:	6078      	str	r0, [r7, #4]
 8001020:	6039      	str	r1, [r7, #0]
 8001022:	2300      	movs	r3, #0
 8001024:	617b      	str	r3, [r7, #20]
 8001026:	2300      	movs	r3, #0
 8001028:	613b      	str	r3, [r7, #16]
 800102a:	2300      	movs	r3, #0
 800102c:	60fb      	str	r3, [r7, #12]
 800102e:	2300      	movs	r3, #0
 8001030:	617b      	str	r3, [r7, #20]
 8001032:	e076      	b.n	8001122 <GPIO_Init+0x10a>
 8001034:	2201      	movs	r2, #1
 8001036:	697b      	ldr	r3, [r7, #20]
 8001038:	fa02 f303 	lsl.w	r3, r2, r3
 800103c:	613b      	str	r3, [r7, #16]
 800103e:	683b      	ldr	r3, [r7, #0]
 8001040:	681b      	ldr	r3, [r3, #0]
 8001042:	693a      	ldr	r2, [r7, #16]
 8001044:	4013      	ands	r3, r2
 8001046:	60fb      	str	r3, [r7, #12]
 8001048:	68fa      	ldr	r2, [r7, #12]
 800104a:	693b      	ldr	r3, [r7, #16]
 800104c:	429a      	cmp	r2, r3
 800104e:	d165      	bne.n	800111c <GPIO_Init+0x104>
 8001050:	687b      	ldr	r3, [r7, #4]
 8001052:	681a      	ldr	r2, [r3, #0]
 8001054:	697b      	ldr	r3, [r7, #20]
 8001056:	005b      	lsls	r3, r3, #1
 8001058:	2103      	movs	r1, #3
 800105a:	fa01 f303 	lsl.w	r3, r1, r3
 800105e:	43db      	mvns	r3, r3
 8001060:	401a      	ands	r2, r3
 8001062:	687b      	ldr	r3, [r7, #4]
 8001064:	601a      	str	r2, [r3, #0]
 8001066:	687b      	ldr	r3, [r7, #4]
 8001068:	681a      	ldr	r2, [r3, #0]
 800106a:	683b      	ldr	r3, [r7, #0]
 800106c:	791b      	ldrb	r3, [r3, #4]
 800106e:	4619      	mov	r1, r3
 8001070:	697b      	ldr	r3, [r7, #20]
 8001072:	005b      	lsls	r3, r3, #1
 8001074:	fa01 f303 	lsl.w	r3, r1, r3
 8001078:	431a      	orrs	r2, r3
 800107a:	687b      	ldr	r3, [r7, #4]
 800107c:	601a      	str	r2, [r3, #0]
 800107e:	683b      	ldr	r3, [r7, #0]
 8001080:	791b      	ldrb	r3, [r3, #4]
 8001082:	2b01      	cmp	r3, #1
 8001084:	d003      	beq.n	800108e <GPIO_Init+0x76>
 8001086:	683b      	ldr	r3, [r7, #0]
 8001088:	791b      	ldrb	r3, [r3, #4]
 800108a:	2b02      	cmp	r3, #2
 800108c:	d12e      	bne.n	80010ec <GPIO_Init+0xd4>
 800108e:	687b      	ldr	r3, [r7, #4]
 8001090:	689a      	ldr	r2, [r3, #8]
 8001092:	697b      	ldr	r3, [r7, #20]
 8001094:	005b      	lsls	r3, r3, #1
 8001096:	2103      	movs	r1, #3
 8001098:	fa01 f303 	lsl.w	r3, r1, r3
 800109c:	43db      	mvns	r3, r3
 800109e:	401a      	ands	r2, r3
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	609a      	str	r2, [r3, #8]
 80010a4:	687b      	ldr	r3, [r7, #4]
 80010a6:	689a      	ldr	r2, [r3, #8]
 80010a8:	683b      	ldr	r3, [r7, #0]
 80010aa:	795b      	ldrb	r3, [r3, #5]
 80010ac:	4619      	mov	r1, r3
 80010ae:	697b      	ldr	r3, [r7, #20]
 80010b0:	005b      	lsls	r3, r3, #1
 80010b2:	fa01 f303 	lsl.w	r3, r1, r3
 80010b6:	431a      	orrs	r2, r3
 80010b8:	687b      	ldr	r3, [r7, #4]
 80010ba:	609a      	str	r2, [r3, #8]
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	685a      	ldr	r2, [r3, #4]
 80010c0:	697b      	ldr	r3, [r7, #20]
 80010c2:	b29b      	uxth	r3, r3
 80010c4:	4619      	mov	r1, r3
 80010c6:	2301      	movs	r3, #1
 80010c8:	408b      	lsls	r3, r1
 80010ca:	43db      	mvns	r3, r3
 80010cc:	401a      	ands	r2, r3
 80010ce:	687b      	ldr	r3, [r7, #4]
 80010d0:	605a      	str	r2, [r3, #4]
 80010d2:	687b      	ldr	r3, [r7, #4]
 80010d4:	685b      	ldr	r3, [r3, #4]
 80010d6:	683a      	ldr	r2, [r7, #0]
 80010d8:	7992      	ldrb	r2, [r2, #6]
 80010da:	4611      	mov	r1, r2
 80010dc:	697a      	ldr	r2, [r7, #20]
 80010de:	b292      	uxth	r2, r2
 80010e0:	fa01 f202 	lsl.w	r2, r1, r2
 80010e4:	b292      	uxth	r2, r2
 80010e6:	431a      	orrs	r2, r3
 80010e8:	687b      	ldr	r3, [r7, #4]
 80010ea:	605a      	str	r2, [r3, #4]
 80010ec:	687b      	ldr	r3, [r7, #4]
 80010ee:	68da      	ldr	r2, [r3, #12]
 80010f0:	697b      	ldr	r3, [r7, #20]
 80010f2:	b29b      	uxth	r3, r3
 80010f4:	005b      	lsls	r3, r3, #1
 80010f6:	2103      	movs	r1, #3
 80010f8:	fa01 f303 	lsl.w	r3, r1, r3
 80010fc:	43db      	mvns	r3, r3
 80010fe:	401a      	ands	r2, r3
 8001100:	687b      	ldr	r3, [r7, #4]
 8001102:	60da      	str	r2, [r3, #12]
 8001104:	687b      	ldr	r3, [r7, #4]
 8001106:	68da      	ldr	r2, [r3, #12]
 8001108:	683b      	ldr	r3, [r7, #0]
 800110a:	79db      	ldrb	r3, [r3, #7]
 800110c:	4619      	mov	r1, r3
 800110e:	697b      	ldr	r3, [r7, #20]
 8001110:	005b      	lsls	r3, r3, #1
 8001112:	fa01 f303 	lsl.w	r3, r1, r3
 8001116:	431a      	orrs	r2, r3
 8001118:	687b      	ldr	r3, [r7, #4]
 800111a:	60da      	str	r2, [r3, #12]
 800111c:	697b      	ldr	r3, [r7, #20]
 800111e:	3301      	adds	r3, #1
 8001120:	617b      	str	r3, [r7, #20]
 8001122:	697b      	ldr	r3, [r7, #20]
 8001124:	2b0f      	cmp	r3, #15
 8001126:	d985      	bls.n	8001034 <GPIO_Init+0x1c>
 8001128:	bf00      	nop
 800112a:	371c      	adds	r7, #28
 800112c:	46bd      	mov	sp, r7
 800112e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001132:	4770      	bx	lr

08001134 <GPIO_WriteBit>:
 8001134:	b480      	push	{r7}
 8001136:	b083      	sub	sp, #12
 8001138:	af00      	add	r7, sp, #0
 800113a:	6078      	str	r0, [r7, #4]
 800113c:	460b      	mov	r3, r1
 800113e:	807b      	strh	r3, [r7, #2]
 8001140:	4613      	mov	r3, r2
 8001142:	707b      	strb	r3, [r7, #1]
 8001144:	787b      	ldrb	r3, [r7, #1]
 8001146:	2b00      	cmp	r3, #0
 8001148:	d003      	beq.n	8001152 <GPIO_WriteBit+0x1e>
 800114a:	687b      	ldr	r3, [r7, #4]
 800114c:	887a      	ldrh	r2, [r7, #2]
 800114e:	831a      	strh	r2, [r3, #24]
 8001150:	e002      	b.n	8001158 <GPIO_WriteBit+0x24>
 8001152:	687b      	ldr	r3, [r7, #4]
 8001154:	887a      	ldrh	r2, [r7, #2]
 8001156:	835a      	strh	r2, [r3, #26]
 8001158:	bf00      	nop
 800115a:	370c      	adds	r7, #12
 800115c:	46bd      	mov	sp, r7
 800115e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001162:	4770      	bx	lr

08001164 <GPIO_PinAFConfig>:
 8001164:	b480      	push	{r7}
 8001166:	b085      	sub	sp, #20
 8001168:	af00      	add	r7, sp, #0
 800116a:	6078      	str	r0, [r7, #4]
 800116c:	460b      	mov	r3, r1
 800116e:	807b      	strh	r3, [r7, #2]
 8001170:	4613      	mov	r3, r2
 8001172:	707b      	strb	r3, [r7, #1]
 8001174:	2300      	movs	r3, #0
 8001176:	60fb      	str	r3, [r7, #12]
 8001178:	2300      	movs	r3, #0
 800117a:	60bb      	str	r3, [r7, #8]
 800117c:	787a      	ldrb	r2, [r7, #1]
 800117e:	887b      	ldrh	r3, [r7, #2]
 8001180:	f003 0307 	and.w	r3, r3, #7
 8001184:	009b      	lsls	r3, r3, #2
 8001186:	fa02 f303 	lsl.w	r3, r2, r3
 800118a:	60fb      	str	r3, [r7, #12]
 800118c:	887b      	ldrh	r3, [r7, #2]
 800118e:	08db      	lsrs	r3, r3, #3
 8001190:	b29b      	uxth	r3, r3
 8001192:	461a      	mov	r2, r3
 8001194:	687b      	ldr	r3, [r7, #4]
 8001196:	3208      	adds	r2, #8
 8001198:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800119c:	887b      	ldrh	r3, [r7, #2]
 800119e:	f003 0307 	and.w	r3, r3, #7
 80011a2:	009b      	lsls	r3, r3, #2
 80011a4:	210f      	movs	r1, #15
 80011a6:	fa01 f303 	lsl.w	r3, r1, r3
 80011aa:	43db      	mvns	r3, r3
 80011ac:	8879      	ldrh	r1, [r7, #2]
 80011ae:	08c9      	lsrs	r1, r1, #3
 80011b0:	b289      	uxth	r1, r1
 80011b2:	4608      	mov	r0, r1
 80011b4:	ea02 0103 	and.w	r1, r2, r3
 80011b8:	687b      	ldr	r3, [r7, #4]
 80011ba:	f100 0208 	add.w	r2, r0, #8
 80011be:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80011c2:	887b      	ldrh	r3, [r7, #2]
 80011c4:	08db      	lsrs	r3, r3, #3
 80011c6:	b29b      	uxth	r3, r3
 80011c8:	461a      	mov	r2, r3
 80011ca:	687b      	ldr	r3, [r7, #4]
 80011cc:	3208      	adds	r2, #8
 80011ce:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80011d2:	68fa      	ldr	r2, [r7, #12]
 80011d4:	4313      	orrs	r3, r2
 80011d6:	60bb      	str	r3, [r7, #8]
 80011d8:	887b      	ldrh	r3, [r7, #2]
 80011da:	08db      	lsrs	r3, r3, #3
 80011dc:	b29b      	uxth	r3, r3
 80011de:	461a      	mov	r2, r3
 80011e0:	687b      	ldr	r3, [r7, #4]
 80011e2:	3208      	adds	r2, #8
 80011e4:	68b9      	ldr	r1, [r7, #8]
 80011e6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80011ea:	bf00      	nop
 80011ec:	3714      	adds	r7, #20
 80011ee:	46bd      	mov	sp, r7
 80011f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011f4:	4770      	bx	lr
	...

080011f8 <I2C_Init>:
 80011f8:	b580      	push	{r7, lr}
 80011fa:	b08a      	sub	sp, #40	; 0x28
 80011fc:	af00      	add	r7, sp, #0
 80011fe:	6078      	str	r0, [r7, #4]
 8001200:	6039      	str	r1, [r7, #0]
 8001202:	2300      	movs	r3, #0
 8001204:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001206:	2300      	movs	r3, #0
 8001208:	847b      	strh	r3, [r7, #34]	; 0x22
 800120a:	2304      	movs	r3, #4
 800120c:	84bb      	strh	r3, [r7, #36]	; 0x24
 800120e:	4b57      	ldr	r3, [pc, #348]	; (800136c <I2C_Init+0x174>)
 8001210:	61fb      	str	r3, [r7, #28]
 8001212:	687b      	ldr	r3, [r7, #4]
 8001214:	889b      	ldrh	r3, [r3, #4]
 8001216:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001218:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800121a:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800121e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001220:	f107 030c 	add.w	r3, r7, #12
 8001224:	4618      	mov	r0, r3
 8001226:	f000 f9c9 	bl	80015bc <RCC_GetClocksFreq>
 800122a:	697b      	ldr	r3, [r7, #20]
 800122c:	61fb      	str	r3, [r7, #28]
 800122e:	69fb      	ldr	r3, [r7, #28]
 8001230:	4a4f      	ldr	r2, [pc, #316]	; (8001370 <I2C_Init+0x178>)
 8001232:	fba2 2303 	umull	r2, r3, r2, r3
 8001236:	0c9b      	lsrs	r3, r3, #18
 8001238:	847b      	strh	r3, [r7, #34]	; 0x22
 800123a:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 800123c:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 800123e:	4313      	orrs	r3, r2
 8001240:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001242:	687b      	ldr	r3, [r7, #4]
 8001244:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001246:	809a      	strh	r2, [r3, #4]
 8001248:	687b      	ldr	r3, [r7, #4]
 800124a:	881b      	ldrh	r3, [r3, #0]
 800124c:	b29b      	uxth	r3, r3
 800124e:	f023 0301 	bic.w	r3, r3, #1
 8001252:	b29a      	uxth	r2, r3
 8001254:	687b      	ldr	r3, [r7, #4]
 8001256:	801a      	strh	r2, [r3, #0]
 8001258:	2300      	movs	r3, #0
 800125a:	84fb      	strh	r3, [r7, #38]	; 0x26
 800125c:	683b      	ldr	r3, [r7, #0]
 800125e:	681b      	ldr	r3, [r3, #0]
 8001260:	4a44      	ldr	r2, [pc, #272]	; (8001374 <I2C_Init+0x17c>)
 8001262:	4293      	cmp	r3, r2
 8001264:	d815      	bhi.n	8001292 <I2C_Init+0x9a>
 8001266:	683b      	ldr	r3, [r7, #0]
 8001268:	681b      	ldr	r3, [r3, #0]
 800126a:	005b      	lsls	r3, r3, #1
 800126c:	69fa      	ldr	r2, [r7, #28]
 800126e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001272:	84bb      	strh	r3, [r7, #36]	; 0x24
 8001274:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8001276:	2b03      	cmp	r3, #3
 8001278:	d801      	bhi.n	800127e <I2C_Init+0x86>
 800127a:	2304      	movs	r3, #4
 800127c:	84bb      	strh	r3, [r7, #36]	; 0x24
 800127e:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001280:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8001282:	4313      	orrs	r3, r2
 8001284:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001286:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8001288:	3301      	adds	r3, #1
 800128a:	b29a      	uxth	r2, r3
 800128c:	687b      	ldr	r3, [r7, #4]
 800128e:	841a      	strh	r2, [r3, #32]
 8001290:	e040      	b.n	8001314 <I2C_Init+0x11c>
 8001292:	683b      	ldr	r3, [r7, #0]
 8001294:	88db      	ldrh	r3, [r3, #6]
 8001296:	f64b 72ff 	movw	r2, #49151	; 0xbfff
 800129a:	4293      	cmp	r3, r2
 800129c:	d109      	bne.n	80012b2 <I2C_Init+0xba>
 800129e:	683b      	ldr	r3, [r7, #0]
 80012a0:	681a      	ldr	r2, [r3, #0]
 80012a2:	4613      	mov	r3, r2
 80012a4:	005b      	lsls	r3, r3, #1
 80012a6:	4413      	add	r3, r2
 80012a8:	69fa      	ldr	r2, [r7, #28]
 80012aa:	fbb2 f3f3 	udiv	r3, r2, r3
 80012ae:	84bb      	strh	r3, [r7, #36]	; 0x24
 80012b0:	e00e      	b.n	80012d0 <I2C_Init+0xd8>
 80012b2:	683b      	ldr	r3, [r7, #0]
 80012b4:	681a      	ldr	r2, [r3, #0]
 80012b6:	4613      	mov	r3, r2
 80012b8:	009b      	lsls	r3, r3, #2
 80012ba:	4413      	add	r3, r2
 80012bc:	009a      	lsls	r2, r3, #2
 80012be:	4413      	add	r3, r2
 80012c0:	69fa      	ldr	r2, [r7, #28]
 80012c2:	fbb2 f3f3 	udiv	r3, r2, r3
 80012c6:	84bb      	strh	r3, [r7, #36]	; 0x24
 80012c8:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80012ca:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80012ce:	84bb      	strh	r3, [r7, #36]	; 0x24
 80012d0:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80012d2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80012d6:	2b00      	cmp	r3, #0
 80012d8:	d103      	bne.n	80012e2 <I2C_Init+0xea>
 80012da:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80012dc:	f043 0301 	orr.w	r3, r3, #1
 80012e0:	84bb      	strh	r3, [r7, #36]	; 0x24
 80012e2:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80012e4:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80012e6:	4313      	orrs	r3, r2
 80012e8:	b29b      	uxth	r3, r3
 80012ea:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80012ee:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80012f2:	84fb      	strh	r3, [r7, #38]	; 0x26
 80012f4:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 80012f6:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80012fa:	fb02 f303 	mul.w	r3, r2, r3
 80012fe:	4a1e      	ldr	r2, [pc, #120]	; (8001378 <I2C_Init+0x180>)
 8001300:	fb82 1203 	smull	r1, r2, r2, r3
 8001304:	1192      	asrs	r2, r2, #6
 8001306:	17db      	asrs	r3, r3, #31
 8001308:	1ad3      	subs	r3, r2, r3
 800130a:	b29b      	uxth	r3, r3
 800130c:	3301      	adds	r3, #1
 800130e:	b29a      	uxth	r2, r3
 8001310:	687b      	ldr	r3, [r7, #4]
 8001312:	841a      	strh	r2, [r3, #32]
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001318:	839a      	strh	r2, [r3, #28]
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	881b      	ldrh	r3, [r3, #0]
 800131e:	b29b      	uxth	r3, r3
 8001320:	f043 0301 	orr.w	r3, r3, #1
 8001324:	b29a      	uxth	r2, r3
 8001326:	687b      	ldr	r3, [r7, #4]
 8001328:	801a      	strh	r2, [r3, #0]
 800132a:	687b      	ldr	r3, [r7, #4]
 800132c:	881b      	ldrh	r3, [r3, #0]
 800132e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8001330:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8001332:	f423 6381 	bic.w	r3, r3, #1032	; 0x408
 8001336:	f023 0302 	bic.w	r3, r3, #2
 800133a:	84fb      	strh	r3, [r7, #38]	; 0x26
 800133c:	683b      	ldr	r3, [r7, #0]
 800133e:	889a      	ldrh	r2, [r3, #4]
 8001340:	683b      	ldr	r3, [r7, #0]
 8001342:	895b      	ldrh	r3, [r3, #10]
 8001344:	4313      	orrs	r3, r2
 8001346:	b29a      	uxth	r2, r3
 8001348:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800134a:	4313      	orrs	r3, r2
 800134c:	84fb      	strh	r3, [r7, #38]	; 0x26
 800134e:	687b      	ldr	r3, [r7, #4]
 8001350:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8001352:	801a      	strh	r2, [r3, #0]
 8001354:	683b      	ldr	r3, [r7, #0]
 8001356:	899a      	ldrh	r2, [r3, #12]
 8001358:	683b      	ldr	r3, [r7, #0]
 800135a:	891b      	ldrh	r3, [r3, #8]
 800135c:	4313      	orrs	r3, r2
 800135e:	b29a      	uxth	r2, r3
 8001360:	687b      	ldr	r3, [r7, #4]
 8001362:	811a      	strh	r2, [r3, #8]
 8001364:	bf00      	nop
 8001366:	3728      	adds	r7, #40	; 0x28
 8001368:	46bd      	mov	sp, r7
 800136a:	bd80      	pop	{r7, pc}
 800136c:	007a1200 	.word	0x007a1200
 8001370:	431bde83 	.word	0x431bde83
 8001374:	000186a0 	.word	0x000186a0
 8001378:	10624dd3 	.word	0x10624dd3

0800137c <I2C_Cmd>:
 800137c:	b480      	push	{r7}
 800137e:	b083      	sub	sp, #12
 8001380:	af00      	add	r7, sp, #0
 8001382:	6078      	str	r0, [r7, #4]
 8001384:	460b      	mov	r3, r1
 8001386:	70fb      	strb	r3, [r7, #3]
 8001388:	78fb      	ldrb	r3, [r7, #3]
 800138a:	2b00      	cmp	r3, #0
 800138c:	d008      	beq.n	80013a0 <I2C_Cmd+0x24>
 800138e:	687b      	ldr	r3, [r7, #4]
 8001390:	881b      	ldrh	r3, [r3, #0]
 8001392:	b29b      	uxth	r3, r3
 8001394:	f043 0301 	orr.w	r3, r3, #1
 8001398:	b29a      	uxth	r2, r3
 800139a:	687b      	ldr	r3, [r7, #4]
 800139c:	801a      	strh	r2, [r3, #0]
 800139e:	e007      	b.n	80013b0 <I2C_Cmd+0x34>
 80013a0:	687b      	ldr	r3, [r7, #4]
 80013a2:	881b      	ldrh	r3, [r3, #0]
 80013a4:	b29b      	uxth	r3, r3
 80013a6:	f023 0301 	bic.w	r3, r3, #1
 80013aa:	b29a      	uxth	r2, r3
 80013ac:	687b      	ldr	r3, [r7, #4]
 80013ae:	801a      	strh	r2, [r3, #0]
 80013b0:	bf00      	nop
 80013b2:	370c      	adds	r7, #12
 80013b4:	46bd      	mov	sp, r7
 80013b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013ba:	4770      	bx	lr

080013bc <I2C_GenerateSTART>:
 80013bc:	b480      	push	{r7}
 80013be:	b083      	sub	sp, #12
 80013c0:	af00      	add	r7, sp, #0
 80013c2:	6078      	str	r0, [r7, #4]
 80013c4:	460b      	mov	r3, r1
 80013c6:	70fb      	strb	r3, [r7, #3]
 80013c8:	78fb      	ldrb	r3, [r7, #3]
 80013ca:	2b00      	cmp	r3, #0
 80013cc:	d008      	beq.n	80013e0 <I2C_GenerateSTART+0x24>
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	881b      	ldrh	r3, [r3, #0]
 80013d2:	b29b      	uxth	r3, r3
 80013d4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80013d8:	b29a      	uxth	r2, r3
 80013da:	687b      	ldr	r3, [r7, #4]
 80013dc:	801a      	strh	r2, [r3, #0]
 80013de:	e007      	b.n	80013f0 <I2C_GenerateSTART+0x34>
 80013e0:	687b      	ldr	r3, [r7, #4]
 80013e2:	881b      	ldrh	r3, [r3, #0]
 80013e4:	b29b      	uxth	r3, r3
 80013e6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80013ea:	b29a      	uxth	r2, r3
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	801a      	strh	r2, [r3, #0]
 80013f0:	bf00      	nop
 80013f2:	370c      	adds	r7, #12
 80013f4:	46bd      	mov	sp, r7
 80013f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013fa:	4770      	bx	lr

080013fc <I2C_GenerateSTOP>:
 80013fc:	b480      	push	{r7}
 80013fe:	b083      	sub	sp, #12
 8001400:	af00      	add	r7, sp, #0
 8001402:	6078      	str	r0, [r7, #4]
 8001404:	460b      	mov	r3, r1
 8001406:	70fb      	strb	r3, [r7, #3]
 8001408:	78fb      	ldrb	r3, [r7, #3]
 800140a:	2b00      	cmp	r3, #0
 800140c:	d008      	beq.n	8001420 <I2C_GenerateSTOP+0x24>
 800140e:	687b      	ldr	r3, [r7, #4]
 8001410:	881b      	ldrh	r3, [r3, #0]
 8001412:	b29b      	uxth	r3, r3
 8001414:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001418:	b29a      	uxth	r2, r3
 800141a:	687b      	ldr	r3, [r7, #4]
 800141c:	801a      	strh	r2, [r3, #0]
 800141e:	e007      	b.n	8001430 <I2C_GenerateSTOP+0x34>
 8001420:	687b      	ldr	r3, [r7, #4]
 8001422:	881b      	ldrh	r3, [r3, #0]
 8001424:	b29b      	uxth	r3, r3
 8001426:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800142a:	b29a      	uxth	r2, r3
 800142c:	687b      	ldr	r3, [r7, #4]
 800142e:	801a      	strh	r2, [r3, #0]
 8001430:	bf00      	nop
 8001432:	370c      	adds	r7, #12
 8001434:	46bd      	mov	sp, r7
 8001436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800143a:	4770      	bx	lr

0800143c <I2C_Send7bitAddress>:
 800143c:	b480      	push	{r7}
 800143e:	b083      	sub	sp, #12
 8001440:	af00      	add	r7, sp, #0
 8001442:	6078      	str	r0, [r7, #4]
 8001444:	460b      	mov	r3, r1
 8001446:	70fb      	strb	r3, [r7, #3]
 8001448:	4613      	mov	r3, r2
 800144a:	70bb      	strb	r3, [r7, #2]
 800144c:	78bb      	ldrb	r3, [r7, #2]
 800144e:	2b00      	cmp	r3, #0
 8001450:	d004      	beq.n	800145c <I2C_Send7bitAddress+0x20>
 8001452:	78fb      	ldrb	r3, [r7, #3]
 8001454:	f043 0301 	orr.w	r3, r3, #1
 8001458:	70fb      	strb	r3, [r7, #3]
 800145a:	e003      	b.n	8001464 <I2C_Send7bitAddress+0x28>
 800145c:	78fb      	ldrb	r3, [r7, #3]
 800145e:	f023 0301 	bic.w	r3, r3, #1
 8001462:	70fb      	strb	r3, [r7, #3]
 8001464:	78fb      	ldrb	r3, [r7, #3]
 8001466:	b29a      	uxth	r2, r3
 8001468:	687b      	ldr	r3, [r7, #4]
 800146a:	821a      	strh	r2, [r3, #16]
 800146c:	bf00      	nop
 800146e:	370c      	adds	r7, #12
 8001470:	46bd      	mov	sp, r7
 8001472:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001476:	4770      	bx	lr

08001478 <I2C_AcknowledgeConfig>:
 8001478:	b480      	push	{r7}
 800147a:	b083      	sub	sp, #12
 800147c:	af00      	add	r7, sp, #0
 800147e:	6078      	str	r0, [r7, #4]
 8001480:	460b      	mov	r3, r1
 8001482:	70fb      	strb	r3, [r7, #3]
 8001484:	78fb      	ldrb	r3, [r7, #3]
 8001486:	2b00      	cmp	r3, #0
 8001488:	d008      	beq.n	800149c <I2C_AcknowledgeConfig+0x24>
 800148a:	687b      	ldr	r3, [r7, #4]
 800148c:	881b      	ldrh	r3, [r3, #0]
 800148e:	b29b      	uxth	r3, r3
 8001490:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001494:	b29a      	uxth	r2, r3
 8001496:	687b      	ldr	r3, [r7, #4]
 8001498:	801a      	strh	r2, [r3, #0]
 800149a:	e007      	b.n	80014ac <I2C_AcknowledgeConfig+0x34>
 800149c:	687b      	ldr	r3, [r7, #4]
 800149e:	881b      	ldrh	r3, [r3, #0]
 80014a0:	b29b      	uxth	r3, r3
 80014a2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80014a6:	b29a      	uxth	r2, r3
 80014a8:	687b      	ldr	r3, [r7, #4]
 80014aa:	801a      	strh	r2, [r3, #0]
 80014ac:	bf00      	nop
 80014ae:	370c      	adds	r7, #12
 80014b0:	46bd      	mov	sp, r7
 80014b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014b6:	4770      	bx	lr

080014b8 <I2C_SendData>:
 80014b8:	b480      	push	{r7}
 80014ba:	b083      	sub	sp, #12
 80014bc:	af00      	add	r7, sp, #0
 80014be:	6078      	str	r0, [r7, #4]
 80014c0:	460b      	mov	r3, r1
 80014c2:	70fb      	strb	r3, [r7, #3]
 80014c4:	78fb      	ldrb	r3, [r7, #3]
 80014c6:	b29a      	uxth	r2, r3
 80014c8:	687b      	ldr	r3, [r7, #4]
 80014ca:	821a      	strh	r2, [r3, #16]
 80014cc:	bf00      	nop
 80014ce:	370c      	adds	r7, #12
 80014d0:	46bd      	mov	sp, r7
 80014d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014d6:	4770      	bx	lr

080014d8 <I2C_ReceiveData>:
 80014d8:	b480      	push	{r7}
 80014da:	b083      	sub	sp, #12
 80014dc:	af00      	add	r7, sp, #0
 80014de:	6078      	str	r0, [r7, #4]
 80014e0:	687b      	ldr	r3, [r7, #4]
 80014e2:	8a1b      	ldrh	r3, [r3, #16]
 80014e4:	b29b      	uxth	r3, r3
 80014e6:	b2db      	uxtb	r3, r3
 80014e8:	4618      	mov	r0, r3
 80014ea:	370c      	adds	r7, #12
 80014ec:	46bd      	mov	sp, r7
 80014ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014f2:	4770      	bx	lr

080014f4 <I2C_CheckEvent>:
 80014f4:	b480      	push	{r7}
 80014f6:	b087      	sub	sp, #28
 80014f8:	af00      	add	r7, sp, #0
 80014fa:	6078      	str	r0, [r7, #4]
 80014fc:	6039      	str	r1, [r7, #0]
 80014fe:	2300      	movs	r3, #0
 8001500:	613b      	str	r3, [r7, #16]
 8001502:	2300      	movs	r3, #0
 8001504:	60fb      	str	r3, [r7, #12]
 8001506:	2300      	movs	r3, #0
 8001508:	60bb      	str	r3, [r7, #8]
 800150a:	2300      	movs	r3, #0
 800150c:	75fb      	strb	r3, [r7, #23]
 800150e:	687b      	ldr	r3, [r7, #4]
 8001510:	8a9b      	ldrh	r3, [r3, #20]
 8001512:	b29b      	uxth	r3, r3
 8001514:	60fb      	str	r3, [r7, #12]
 8001516:	687b      	ldr	r3, [r7, #4]
 8001518:	8b1b      	ldrh	r3, [r3, #24]
 800151a:	b29b      	uxth	r3, r3
 800151c:	60bb      	str	r3, [r7, #8]
 800151e:	68bb      	ldr	r3, [r7, #8]
 8001520:	041b      	lsls	r3, r3, #16
 8001522:	60bb      	str	r3, [r7, #8]
 8001524:	68fa      	ldr	r2, [r7, #12]
 8001526:	68bb      	ldr	r3, [r7, #8]
 8001528:	4313      	orrs	r3, r2
 800152a:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 800152e:	613b      	str	r3, [r7, #16]
 8001530:	693a      	ldr	r2, [r7, #16]
 8001532:	683b      	ldr	r3, [r7, #0]
 8001534:	4013      	ands	r3, r2
 8001536:	683a      	ldr	r2, [r7, #0]
 8001538:	429a      	cmp	r2, r3
 800153a:	d102      	bne.n	8001542 <I2C_CheckEvent+0x4e>
 800153c:	2301      	movs	r3, #1
 800153e:	75fb      	strb	r3, [r7, #23]
 8001540:	e001      	b.n	8001546 <I2C_CheckEvent+0x52>
 8001542:	2300      	movs	r3, #0
 8001544:	75fb      	strb	r3, [r7, #23]
 8001546:	7dfb      	ldrb	r3, [r7, #23]
 8001548:	4618      	mov	r0, r3
 800154a:	371c      	adds	r7, #28
 800154c:	46bd      	mov	sp, r7
 800154e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001552:	4770      	bx	lr

08001554 <I2C_GetFlagStatus>:
 8001554:	b480      	push	{r7}
 8001556:	b087      	sub	sp, #28
 8001558:	af00      	add	r7, sp, #0
 800155a:	6078      	str	r0, [r7, #4]
 800155c:	6039      	str	r1, [r7, #0]
 800155e:	2300      	movs	r3, #0
 8001560:	75fb      	strb	r3, [r7, #23]
 8001562:	2300      	movs	r3, #0
 8001564:	613b      	str	r3, [r7, #16]
 8001566:	2300      	movs	r3, #0
 8001568:	60fb      	str	r3, [r7, #12]
 800156a:	687b      	ldr	r3, [r7, #4]
 800156c:	60fb      	str	r3, [r7, #12]
 800156e:	683b      	ldr	r3, [r7, #0]
 8001570:	0f1b      	lsrs	r3, r3, #28
 8001572:	613b      	str	r3, [r7, #16]
 8001574:	683b      	ldr	r3, [r7, #0]
 8001576:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 800157a:	603b      	str	r3, [r7, #0]
 800157c:	693b      	ldr	r3, [r7, #16]
 800157e:	2b00      	cmp	r3, #0
 8001580:	d003      	beq.n	800158a <I2C_GetFlagStatus+0x36>
 8001582:	68fb      	ldr	r3, [r7, #12]
 8001584:	3314      	adds	r3, #20
 8001586:	60fb      	str	r3, [r7, #12]
 8001588:	e005      	b.n	8001596 <I2C_GetFlagStatus+0x42>
 800158a:	683b      	ldr	r3, [r7, #0]
 800158c:	0c1b      	lsrs	r3, r3, #16
 800158e:	603b      	str	r3, [r7, #0]
 8001590:	68fb      	ldr	r3, [r7, #12]
 8001592:	3318      	adds	r3, #24
 8001594:	60fb      	str	r3, [r7, #12]
 8001596:	68fb      	ldr	r3, [r7, #12]
 8001598:	681a      	ldr	r2, [r3, #0]
 800159a:	683b      	ldr	r3, [r7, #0]
 800159c:	4013      	ands	r3, r2
 800159e:	2b00      	cmp	r3, #0
 80015a0:	d002      	beq.n	80015a8 <I2C_GetFlagStatus+0x54>
 80015a2:	2301      	movs	r3, #1
 80015a4:	75fb      	strb	r3, [r7, #23]
 80015a6:	e001      	b.n	80015ac <I2C_GetFlagStatus+0x58>
 80015a8:	2300      	movs	r3, #0
 80015aa:	75fb      	strb	r3, [r7, #23]
 80015ac:	7dfb      	ldrb	r3, [r7, #23]
 80015ae:	4618      	mov	r0, r3
 80015b0:	371c      	adds	r7, #28
 80015b2:	46bd      	mov	sp, r7
 80015b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015b8:	4770      	bx	lr
	...

080015bc <RCC_GetClocksFreq>:
 80015bc:	b480      	push	{r7}
 80015be:	b089      	sub	sp, #36	; 0x24
 80015c0:	af00      	add	r7, sp, #0
 80015c2:	6078      	str	r0, [r7, #4]
 80015c4:	2300      	movs	r3, #0
 80015c6:	61bb      	str	r3, [r7, #24]
 80015c8:	2300      	movs	r3, #0
 80015ca:	617b      	str	r3, [r7, #20]
 80015cc:	2300      	movs	r3, #0
 80015ce:	61fb      	str	r3, [r7, #28]
 80015d0:	2302      	movs	r3, #2
 80015d2:	613b      	str	r3, [r7, #16]
 80015d4:	2300      	movs	r3, #0
 80015d6:	60fb      	str	r3, [r7, #12]
 80015d8:	2302      	movs	r3, #2
 80015da:	60bb      	str	r3, [r7, #8]
 80015dc:	4b47      	ldr	r3, [pc, #284]	; (80016fc <RCC_GetClocksFreq+0x140>)
 80015de:	689b      	ldr	r3, [r3, #8]
 80015e0:	f003 030c 	and.w	r3, r3, #12
 80015e4:	61bb      	str	r3, [r7, #24]
 80015e6:	69bb      	ldr	r3, [r7, #24]
 80015e8:	2b04      	cmp	r3, #4
 80015ea:	d007      	beq.n	80015fc <RCC_GetClocksFreq+0x40>
 80015ec:	2b08      	cmp	r3, #8
 80015ee:	d009      	beq.n	8001604 <RCC_GetClocksFreq+0x48>
 80015f0:	2b00      	cmp	r3, #0
 80015f2:	d13d      	bne.n	8001670 <RCC_GetClocksFreq+0xb4>
 80015f4:	687b      	ldr	r3, [r7, #4]
 80015f6:	4a42      	ldr	r2, [pc, #264]	; (8001700 <RCC_GetClocksFreq+0x144>)
 80015f8:	601a      	str	r2, [r3, #0]
 80015fa:	e03d      	b.n	8001678 <RCC_GetClocksFreq+0xbc>
 80015fc:	687b      	ldr	r3, [r7, #4]
 80015fe:	4a41      	ldr	r2, [pc, #260]	; (8001704 <RCC_GetClocksFreq+0x148>)
 8001600:	601a      	str	r2, [r3, #0]
 8001602:	e039      	b.n	8001678 <RCC_GetClocksFreq+0xbc>
 8001604:	4b3d      	ldr	r3, [pc, #244]	; (80016fc <RCC_GetClocksFreq+0x140>)
 8001606:	685b      	ldr	r3, [r3, #4]
 8001608:	0d9b      	lsrs	r3, r3, #22
 800160a:	f003 0301 	and.w	r3, r3, #1
 800160e:	60fb      	str	r3, [r7, #12]
 8001610:	4b3a      	ldr	r3, [pc, #232]	; (80016fc <RCC_GetClocksFreq+0x140>)
 8001612:	685b      	ldr	r3, [r3, #4]
 8001614:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001618:	60bb      	str	r3, [r7, #8]
 800161a:	68fb      	ldr	r3, [r7, #12]
 800161c:	2b00      	cmp	r3, #0
 800161e:	d00c      	beq.n	800163a <RCC_GetClocksFreq+0x7e>
 8001620:	4a38      	ldr	r2, [pc, #224]	; (8001704 <RCC_GetClocksFreq+0x148>)
 8001622:	68bb      	ldr	r3, [r7, #8]
 8001624:	fbb2 f3f3 	udiv	r3, r2, r3
 8001628:	4a34      	ldr	r2, [pc, #208]	; (80016fc <RCC_GetClocksFreq+0x140>)
 800162a:	6852      	ldr	r2, [r2, #4]
 800162c:	0992      	lsrs	r2, r2, #6
 800162e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001632:	fb02 f303 	mul.w	r3, r2, r3
 8001636:	61fb      	str	r3, [r7, #28]
 8001638:	e00b      	b.n	8001652 <RCC_GetClocksFreq+0x96>
 800163a:	4a31      	ldr	r2, [pc, #196]	; (8001700 <RCC_GetClocksFreq+0x144>)
 800163c:	68bb      	ldr	r3, [r7, #8]
 800163e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001642:	4a2e      	ldr	r2, [pc, #184]	; (80016fc <RCC_GetClocksFreq+0x140>)
 8001644:	6852      	ldr	r2, [r2, #4]
 8001646:	0992      	lsrs	r2, r2, #6
 8001648:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800164c:	fb02 f303 	mul.w	r3, r2, r3
 8001650:	61fb      	str	r3, [r7, #28]
 8001652:	4b2a      	ldr	r3, [pc, #168]	; (80016fc <RCC_GetClocksFreq+0x140>)
 8001654:	685b      	ldr	r3, [r3, #4]
 8001656:	0c1b      	lsrs	r3, r3, #16
 8001658:	f003 0303 	and.w	r3, r3, #3
 800165c:	3301      	adds	r3, #1
 800165e:	005b      	lsls	r3, r3, #1
 8001660:	613b      	str	r3, [r7, #16]
 8001662:	69fa      	ldr	r2, [r7, #28]
 8001664:	693b      	ldr	r3, [r7, #16]
 8001666:	fbb2 f2f3 	udiv	r2, r2, r3
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	601a      	str	r2, [r3, #0]
 800166e:	e003      	b.n	8001678 <RCC_GetClocksFreq+0xbc>
 8001670:	687b      	ldr	r3, [r7, #4]
 8001672:	4a23      	ldr	r2, [pc, #140]	; (8001700 <RCC_GetClocksFreq+0x144>)
 8001674:	601a      	str	r2, [r3, #0]
 8001676:	bf00      	nop
 8001678:	4b20      	ldr	r3, [pc, #128]	; (80016fc <RCC_GetClocksFreq+0x140>)
 800167a:	689b      	ldr	r3, [r3, #8]
 800167c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001680:	61bb      	str	r3, [r7, #24]
 8001682:	69bb      	ldr	r3, [r7, #24]
 8001684:	091b      	lsrs	r3, r3, #4
 8001686:	61bb      	str	r3, [r7, #24]
 8001688:	4a1f      	ldr	r2, [pc, #124]	; (8001708 <RCC_GetClocksFreq+0x14c>)
 800168a:	69bb      	ldr	r3, [r7, #24]
 800168c:	4413      	add	r3, r2
 800168e:	781b      	ldrb	r3, [r3, #0]
 8001690:	b2db      	uxtb	r3, r3
 8001692:	617b      	str	r3, [r7, #20]
 8001694:	687b      	ldr	r3, [r7, #4]
 8001696:	681a      	ldr	r2, [r3, #0]
 8001698:	697b      	ldr	r3, [r7, #20]
 800169a:	40da      	lsrs	r2, r3
 800169c:	687b      	ldr	r3, [r7, #4]
 800169e:	605a      	str	r2, [r3, #4]
 80016a0:	4b16      	ldr	r3, [pc, #88]	; (80016fc <RCC_GetClocksFreq+0x140>)
 80016a2:	689b      	ldr	r3, [r3, #8]
 80016a4:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80016a8:	61bb      	str	r3, [r7, #24]
 80016aa:	69bb      	ldr	r3, [r7, #24]
 80016ac:	0a9b      	lsrs	r3, r3, #10
 80016ae:	61bb      	str	r3, [r7, #24]
 80016b0:	4a15      	ldr	r2, [pc, #84]	; (8001708 <RCC_GetClocksFreq+0x14c>)
 80016b2:	69bb      	ldr	r3, [r7, #24]
 80016b4:	4413      	add	r3, r2
 80016b6:	781b      	ldrb	r3, [r3, #0]
 80016b8:	b2db      	uxtb	r3, r3
 80016ba:	617b      	str	r3, [r7, #20]
 80016bc:	687b      	ldr	r3, [r7, #4]
 80016be:	685a      	ldr	r2, [r3, #4]
 80016c0:	697b      	ldr	r3, [r7, #20]
 80016c2:	40da      	lsrs	r2, r3
 80016c4:	687b      	ldr	r3, [r7, #4]
 80016c6:	609a      	str	r2, [r3, #8]
 80016c8:	4b0c      	ldr	r3, [pc, #48]	; (80016fc <RCC_GetClocksFreq+0x140>)
 80016ca:	689b      	ldr	r3, [r3, #8]
 80016cc:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 80016d0:	61bb      	str	r3, [r7, #24]
 80016d2:	69bb      	ldr	r3, [r7, #24]
 80016d4:	0b5b      	lsrs	r3, r3, #13
 80016d6:	61bb      	str	r3, [r7, #24]
 80016d8:	4a0b      	ldr	r2, [pc, #44]	; (8001708 <RCC_GetClocksFreq+0x14c>)
 80016da:	69bb      	ldr	r3, [r7, #24]
 80016dc:	4413      	add	r3, r2
 80016de:	781b      	ldrb	r3, [r3, #0]
 80016e0:	b2db      	uxtb	r3, r3
 80016e2:	617b      	str	r3, [r7, #20]
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	685a      	ldr	r2, [r3, #4]
 80016e8:	697b      	ldr	r3, [r7, #20]
 80016ea:	40da      	lsrs	r2, r3
 80016ec:	687b      	ldr	r3, [r7, #4]
 80016ee:	60da      	str	r2, [r3, #12]
 80016f0:	bf00      	nop
 80016f2:	3724      	adds	r7, #36	; 0x24
 80016f4:	46bd      	mov	sp, r7
 80016f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016fa:	4770      	bx	lr
 80016fc:	40023800 	.word	0x40023800
 8001700:	00f42400 	.word	0x00f42400
 8001704:	017d7840 	.word	0x017d7840
 8001708:	20000014 	.word	0x20000014

0800170c <RCC_AHB1PeriphClockCmd>:
 800170c:	b480      	push	{r7}
 800170e:	b083      	sub	sp, #12
 8001710:	af00      	add	r7, sp, #0
 8001712:	6078      	str	r0, [r7, #4]
 8001714:	460b      	mov	r3, r1
 8001716:	70fb      	strb	r3, [r7, #3]
 8001718:	78fb      	ldrb	r3, [r7, #3]
 800171a:	2b00      	cmp	r3, #0
 800171c:	d006      	beq.n	800172c <RCC_AHB1PeriphClockCmd+0x20>
 800171e:	4b0a      	ldr	r3, [pc, #40]	; (8001748 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001720:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001722:	4909      	ldr	r1, [pc, #36]	; (8001748 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001724:	687b      	ldr	r3, [r7, #4]
 8001726:	4313      	orrs	r3, r2
 8001728:	630b      	str	r3, [r1, #48]	; 0x30
 800172a:	e006      	b.n	800173a <RCC_AHB1PeriphClockCmd+0x2e>
 800172c:	4b06      	ldr	r3, [pc, #24]	; (8001748 <RCC_AHB1PeriphClockCmd+0x3c>)
 800172e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001730:	687b      	ldr	r3, [r7, #4]
 8001732:	43db      	mvns	r3, r3
 8001734:	4904      	ldr	r1, [pc, #16]	; (8001748 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001736:	4013      	ands	r3, r2
 8001738:	630b      	str	r3, [r1, #48]	; 0x30
 800173a:	bf00      	nop
 800173c:	370c      	adds	r7, #12
 800173e:	46bd      	mov	sp, r7
 8001740:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001744:	4770      	bx	lr
 8001746:	bf00      	nop
 8001748:	40023800 	.word	0x40023800

0800174c <RCC_APB1PeriphClockCmd>:
 800174c:	b480      	push	{r7}
 800174e:	b083      	sub	sp, #12
 8001750:	af00      	add	r7, sp, #0
 8001752:	6078      	str	r0, [r7, #4]
 8001754:	460b      	mov	r3, r1
 8001756:	70fb      	strb	r3, [r7, #3]
 8001758:	78fb      	ldrb	r3, [r7, #3]
 800175a:	2b00      	cmp	r3, #0
 800175c:	d006      	beq.n	800176c <RCC_APB1PeriphClockCmd+0x20>
 800175e:	4b0a      	ldr	r3, [pc, #40]	; (8001788 <RCC_APB1PeriphClockCmd+0x3c>)
 8001760:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001762:	4909      	ldr	r1, [pc, #36]	; (8001788 <RCC_APB1PeriphClockCmd+0x3c>)
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	4313      	orrs	r3, r2
 8001768:	640b      	str	r3, [r1, #64]	; 0x40
 800176a:	e006      	b.n	800177a <RCC_APB1PeriphClockCmd+0x2e>
 800176c:	4b06      	ldr	r3, [pc, #24]	; (8001788 <RCC_APB1PeriphClockCmd+0x3c>)
 800176e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001770:	687b      	ldr	r3, [r7, #4]
 8001772:	43db      	mvns	r3, r3
 8001774:	4904      	ldr	r1, [pc, #16]	; (8001788 <RCC_APB1PeriphClockCmd+0x3c>)
 8001776:	4013      	ands	r3, r2
 8001778:	640b      	str	r3, [r1, #64]	; 0x40
 800177a:	bf00      	nop
 800177c:	370c      	adds	r7, #12
 800177e:	46bd      	mov	sp, r7
 8001780:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001784:	4770      	bx	lr
 8001786:	bf00      	nop
 8001788:	40023800 	.word	0x40023800

0800178c <NVIC_SetPriority>:
 800178c:	b480      	push	{r7}
 800178e:	b083      	sub	sp, #12
 8001790:	af00      	add	r7, sp, #0
 8001792:	4603      	mov	r3, r0
 8001794:	6039      	str	r1, [r7, #0]
 8001796:	71fb      	strb	r3, [r7, #7]
 8001798:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800179c:	2b00      	cmp	r3, #0
 800179e:	da0b      	bge.n	80017b8 <NVIC_SetPriority+0x2c>
 80017a0:	683b      	ldr	r3, [r7, #0]
 80017a2:	b2da      	uxtb	r2, r3
 80017a4:	490c      	ldr	r1, [pc, #48]	; (80017d8 <NVIC_SetPriority+0x4c>)
 80017a6:	79fb      	ldrb	r3, [r7, #7]
 80017a8:	f003 030f 	and.w	r3, r3, #15
 80017ac:	3b04      	subs	r3, #4
 80017ae:	0112      	lsls	r2, r2, #4
 80017b0:	b2d2      	uxtb	r2, r2
 80017b2:	440b      	add	r3, r1
 80017b4:	761a      	strb	r2, [r3, #24]
 80017b6:	e009      	b.n	80017cc <NVIC_SetPriority+0x40>
 80017b8:	683b      	ldr	r3, [r7, #0]
 80017ba:	b2da      	uxtb	r2, r3
 80017bc:	4907      	ldr	r1, [pc, #28]	; (80017dc <NVIC_SetPriority+0x50>)
 80017be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017c2:	0112      	lsls	r2, r2, #4
 80017c4:	b2d2      	uxtb	r2, r2
 80017c6:	440b      	add	r3, r1
 80017c8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80017cc:	bf00      	nop
 80017ce:	370c      	adds	r7, #12
 80017d0:	46bd      	mov	sp, r7
 80017d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017d6:	4770      	bx	lr
 80017d8:	e000ed00 	.word	0xe000ed00
 80017dc:	e000e100 	.word	0xe000e100

080017e0 <SysTick_Config>:
 80017e0:	b580      	push	{r7, lr}
 80017e2:	b082      	sub	sp, #8
 80017e4:	af00      	add	r7, sp, #0
 80017e6:	6078      	str	r0, [r7, #4]
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	3b01      	subs	r3, #1
 80017ec:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80017f0:	d301      	bcc.n	80017f6 <SysTick_Config+0x16>
 80017f2:	2301      	movs	r3, #1
 80017f4:	e00f      	b.n	8001816 <SysTick_Config+0x36>
 80017f6:	4a0a      	ldr	r2, [pc, #40]	; (8001820 <SysTick_Config+0x40>)
 80017f8:	687b      	ldr	r3, [r7, #4]
 80017fa:	3b01      	subs	r3, #1
 80017fc:	6053      	str	r3, [r2, #4]
 80017fe:	210f      	movs	r1, #15
 8001800:	f04f 30ff 	mov.w	r0, #4294967295
 8001804:	f7ff ffc2 	bl	800178c <NVIC_SetPriority>
 8001808:	4b05      	ldr	r3, [pc, #20]	; (8001820 <SysTick_Config+0x40>)
 800180a:	2200      	movs	r2, #0
 800180c:	609a      	str	r2, [r3, #8]
 800180e:	4b04      	ldr	r3, [pc, #16]	; (8001820 <SysTick_Config+0x40>)
 8001810:	2207      	movs	r2, #7
 8001812:	601a      	str	r2, [r3, #0]
 8001814:	2300      	movs	r3, #0
 8001816:	4618      	mov	r0, r3
 8001818:	3708      	adds	r7, #8
 800181a:	46bd      	mov	sp, r7
 800181c:	bd80      	pop	{r7, pc}
 800181e:	bf00      	nop
 8001820:	e000e010 	.word	0xe000e010

08001824 <TimerInit>:
 8001824:	b580      	push	{r7, lr}
 8001826:	b084      	sub	sp, #16
 8001828:	af00      	add	r7, sp, #0
 800182a:	463b      	mov	r3, r7
 800182c:	4618      	mov	r0, r3
 800182e:	f7ff fec5 	bl	80015bc <RCC_GetClocksFreq>
 8001832:	683b      	ldr	r3, [r7, #0]
 8001834:	4a0a      	ldr	r2, [pc, #40]	; (8001860 <TimerInit+0x3c>)
 8001836:	fba2 2303 	umull	r2, r3, r2, r3
 800183a:	099b      	lsrs	r3, r3, #6
 800183c:	4618      	mov	r0, r3
 800183e:	f7ff ffcf 	bl	80017e0 <SysTick_Config>
 8001842:	2101      	movs	r1, #1
 8001844:	f04f 30ff 	mov.w	r0, #4294967295
 8001848:	f7ff ffa0 	bl	800178c <NVIC_SetPriority>
 800184c:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8001850:	2100      	movs	r1, #0
 8001852:	4804      	ldr	r0, [pc, #16]	; (8001864 <TimerInit+0x40>)
 8001854:	f7fe fe0f 	bl	8000476 <memsetl>
 8001858:	bf00      	nop
 800185a:	3710      	adds	r7, #16
 800185c:	46bd      	mov	sp, r7
 800185e:	bd80      	pop	{r7, pc}
 8001860:	10624dd3 	.word	0x10624dd3
 8001864:	200001b0 	.word	0x200001b0

08001868 <TimerStart>:
 8001868:	b590      	push	{r4, r7, lr}
 800186a:	b087      	sub	sp, #28
 800186c:	af00      	add	r7, sp, #0
 800186e:	60f8      	str	r0, [r7, #12]
 8001870:	60b9      	str	r1, [r7, #8]
 8001872:	603b      	str	r3, [r7, #0]
 8001874:	4613      	mov	r3, r2
 8001876:	71fb      	strb	r3, [r7, #7]
 8001878:	2300      	movs	r3, #0
 800187a:	75fb      	strb	r3, [r7, #23]
 800187c:	e04c      	b.n	8001918 <TimerStart+0xb0>
 800187e:	7dfa      	ldrb	r2, [r7, #23]
 8001880:	4929      	ldr	r1, [pc, #164]	; (8001928 <TimerStart+0xc0>)
 8001882:	4613      	mov	r3, r2
 8001884:	005b      	lsls	r3, r3, #1
 8001886:	4413      	add	r3, r2
 8001888:	00db      	lsls	r3, r3, #3
 800188a:	440b      	add	r3, r1
 800188c:	3310      	adds	r3, #16
 800188e:	681b      	ldr	r3, [r3, #0]
 8001890:	2b00      	cmp	r3, #0
 8001892:	d13e      	bne.n	8001912 <TimerStart+0xaa>
 8001894:	7dfa      	ldrb	r2, [r7, #23]
 8001896:	4924      	ldr	r1, [pc, #144]	; (8001928 <TimerStart+0xc0>)
 8001898:	4613      	mov	r3, r2
 800189a:	005b      	lsls	r3, r3, #1
 800189c:	4413      	add	r3, r2
 800189e:	00db      	lsls	r3, r3, #3
 80018a0:	440b      	add	r3, r1
 80018a2:	68fa      	ldr	r2, [r7, #12]
 80018a4:	601a      	str	r2, [r3, #0]
 80018a6:	7dfa      	ldrb	r2, [r7, #23]
 80018a8:	491f      	ldr	r1, [pc, #124]	; (8001928 <TimerStart+0xc0>)
 80018aa:	4613      	mov	r3, r2
 80018ac:	005b      	lsls	r3, r3, #1
 80018ae:	4413      	add	r3, r2
 80018b0:	00db      	lsls	r3, r3, #3
 80018b2:	440b      	add	r3, r1
 80018b4:	3310      	adds	r3, #16
 80018b6:	683a      	ldr	r2, [r7, #0]
 80018b8:	601a      	str	r2, [r3, #0]
 80018ba:	7dfa      	ldrb	r2, [r7, #23]
 80018bc:	491a      	ldr	r1, [pc, #104]	; (8001928 <TimerStart+0xc0>)
 80018be:	4613      	mov	r3, r2
 80018c0:	005b      	lsls	r3, r3, #1
 80018c2:	4413      	add	r3, r2
 80018c4:	00db      	lsls	r3, r3, #3
 80018c6:	440b      	add	r3, r1
 80018c8:	330c      	adds	r3, #12
 80018ca:	79fa      	ldrb	r2, [r7, #7]
 80018cc:	701a      	strb	r2, [r3, #0]
 80018ce:	7dfa      	ldrb	r2, [r7, #23]
 80018d0:	4915      	ldr	r1, [pc, #84]	; (8001928 <TimerStart+0xc0>)
 80018d2:	4613      	mov	r3, r2
 80018d4:	005b      	lsls	r3, r3, #1
 80018d6:	4413      	add	r3, r2
 80018d8:	00db      	lsls	r3, r3, #3
 80018da:	440b      	add	r3, r1
 80018dc:	3314      	adds	r3, #20
 80018de:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80018e0:	601a      	str	r2, [r3, #0]
 80018e2:	7dfc      	ldrb	r4, [r7, #23]
 80018e4:	f000 f872 	bl	80019cc <GetMilSecTick>
 80018e8:	4601      	mov	r1, r0
 80018ea:	4a0f      	ldr	r2, [pc, #60]	; (8001928 <TimerStart+0xc0>)
 80018ec:	4623      	mov	r3, r4
 80018ee:	005b      	lsls	r3, r3, #1
 80018f0:	4423      	add	r3, r4
 80018f2:	00db      	lsls	r3, r3, #3
 80018f4:	4413      	add	r3, r2
 80018f6:	3304      	adds	r3, #4
 80018f8:	6019      	str	r1, [r3, #0]
 80018fa:	7dfa      	ldrb	r2, [r7, #23]
 80018fc:	490a      	ldr	r1, [pc, #40]	; (8001928 <TimerStart+0xc0>)
 80018fe:	4613      	mov	r3, r2
 8001900:	005b      	lsls	r3, r3, #1
 8001902:	4413      	add	r3, r2
 8001904:	00db      	lsls	r3, r3, #3
 8001906:	440b      	add	r3, r1
 8001908:	3308      	adds	r3, #8
 800190a:	68ba      	ldr	r2, [r7, #8]
 800190c:	601a      	str	r2, [r3, #0]
 800190e:	7dfb      	ldrb	r3, [r7, #23]
 8001910:	e006      	b.n	8001920 <TimerStart+0xb8>
 8001912:	7dfb      	ldrb	r3, [r7, #23]
 8001914:	3301      	adds	r3, #1
 8001916:	75fb      	strb	r3, [r7, #23]
 8001918:	7dfb      	ldrb	r3, [r7, #23]
 800191a:	2b0f      	cmp	r3, #15
 800191c:	d9af      	bls.n	800187e <TimerStart+0x16>
 800191e:	23ff      	movs	r3, #255	; 0xff
 8001920:	4618      	mov	r0, r3
 8001922:	371c      	adds	r7, #28
 8001924:	46bd      	mov	sp, r7
 8001926:	bd90      	pop	{r4, r7, pc}
 8001928:	200001b0 	.word	0x200001b0

0800192c <TimerStop>:
 800192c:	b480      	push	{r7}
 800192e:	b083      	sub	sp, #12
 8001930:	af00      	add	r7, sp, #0
 8001932:	4603      	mov	r3, r0
 8001934:	71fb      	strb	r3, [r7, #7]
 8001936:	79fb      	ldrb	r3, [r7, #7]
 8001938:	2b0f      	cmp	r3, #15
 800193a:	d80a      	bhi.n	8001952 <TimerStop+0x26>
 800193c:	79fa      	ldrb	r2, [r7, #7]
 800193e:	4922      	ldr	r1, [pc, #136]	; (80019c8 <TimerStop+0x9c>)
 8001940:	4613      	mov	r3, r2
 8001942:	005b      	lsls	r3, r3, #1
 8001944:	4413      	add	r3, r2
 8001946:	00db      	lsls	r3, r3, #3
 8001948:	440b      	add	r3, r1
 800194a:	3310      	adds	r3, #16
 800194c:	681b      	ldr	r3, [r3, #0]
 800194e:	2b00      	cmp	r3, #0
 8001950:	d101      	bne.n	8001956 <TimerStop+0x2a>
 8001952:	2300      	movs	r3, #0
 8001954:	e031      	b.n	80019ba <TimerStop+0x8e>
 8001956:	79fa      	ldrb	r2, [r7, #7]
 8001958:	491b      	ldr	r1, [pc, #108]	; (80019c8 <TimerStop+0x9c>)
 800195a:	4613      	mov	r3, r2
 800195c:	005b      	lsls	r3, r3, #1
 800195e:	4413      	add	r3, r2
 8001960:	00db      	lsls	r3, r3, #3
 8001962:	440b      	add	r3, r1
 8001964:	2200      	movs	r2, #0
 8001966:	601a      	str	r2, [r3, #0]
 8001968:	79fa      	ldrb	r2, [r7, #7]
 800196a:	4917      	ldr	r1, [pc, #92]	; (80019c8 <TimerStop+0x9c>)
 800196c:	4613      	mov	r3, r2
 800196e:	005b      	lsls	r3, r3, #1
 8001970:	4413      	add	r3, r2
 8001972:	00db      	lsls	r3, r3, #3
 8001974:	440b      	add	r3, r1
 8001976:	3310      	adds	r3, #16
 8001978:	2200      	movs	r2, #0
 800197a:	601a      	str	r2, [r3, #0]
 800197c:	79fa      	ldrb	r2, [r7, #7]
 800197e:	4912      	ldr	r1, [pc, #72]	; (80019c8 <TimerStop+0x9c>)
 8001980:	4613      	mov	r3, r2
 8001982:	005b      	lsls	r3, r3, #1
 8001984:	4413      	add	r3, r2
 8001986:	00db      	lsls	r3, r3, #3
 8001988:	440b      	add	r3, r1
 800198a:	330c      	adds	r3, #12
 800198c:	2200      	movs	r2, #0
 800198e:	701a      	strb	r2, [r3, #0]
 8001990:	79fa      	ldrb	r2, [r7, #7]
 8001992:	490d      	ldr	r1, [pc, #52]	; (80019c8 <TimerStop+0x9c>)
 8001994:	4613      	mov	r3, r2
 8001996:	005b      	lsls	r3, r3, #1
 8001998:	4413      	add	r3, r2
 800199a:	00db      	lsls	r3, r3, #3
 800199c:	440b      	add	r3, r1
 800199e:	3308      	adds	r3, #8
 80019a0:	2200      	movs	r2, #0
 80019a2:	601a      	str	r2, [r3, #0]
 80019a4:	79fa      	ldrb	r2, [r7, #7]
 80019a6:	4908      	ldr	r1, [pc, #32]	; (80019c8 <TimerStop+0x9c>)
 80019a8:	4613      	mov	r3, r2
 80019aa:	005b      	lsls	r3, r3, #1
 80019ac:	4413      	add	r3, r2
 80019ae:	00db      	lsls	r3, r3, #3
 80019b0:	440b      	add	r3, r1
 80019b2:	3304      	adds	r3, #4
 80019b4:	2200      	movs	r2, #0
 80019b6:	601a      	str	r2, [r3, #0]
 80019b8:	2301      	movs	r3, #1
 80019ba:	4618      	mov	r0, r3
 80019bc:	370c      	adds	r7, #12
 80019be:	46bd      	mov	sp, r7
 80019c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019c4:	4770      	bx	lr
 80019c6:	bf00      	nop
 80019c8:	200001b0 	.word	0x200001b0

080019cc <GetMilSecTick>:
 80019cc:	b480      	push	{r7}
 80019ce:	af00      	add	r7, sp, #0
 80019d0:	4b03      	ldr	r3, [pc, #12]	; (80019e0 <GetMilSecTick+0x14>)
 80019d2:	681b      	ldr	r3, [r3, #0]
 80019d4:	4618      	mov	r0, r3
 80019d6:	46bd      	mov	sp, r7
 80019d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019dc:	4770      	bx	lr
 80019de:	bf00      	nop
 80019e0:	20000330 	.word	0x20000330

080019e4 <processTimerScheduler>:
 80019e4:	b580      	push	{r7, lr}
 80019e6:	b084      	sub	sp, #16
 80019e8:	af00      	add	r7, sp, #0
 80019ea:	2300      	movs	r3, #0
 80019ec:	73fb      	strb	r3, [r7, #15]
 80019ee:	e068      	b.n	8001ac2 <processTimerScheduler+0xde>
 80019f0:	7bfa      	ldrb	r2, [r7, #15]
 80019f2:	4937      	ldr	r1, [pc, #220]	; (8001ad0 <processTimerScheduler+0xec>)
 80019f4:	4613      	mov	r3, r2
 80019f6:	005b      	lsls	r3, r3, #1
 80019f8:	4413      	add	r3, r2
 80019fa:	00db      	lsls	r3, r3, #3
 80019fc:	440b      	add	r3, r1
 80019fe:	3310      	adds	r3, #16
 8001a00:	681b      	ldr	r3, [r3, #0]
 8001a02:	2b00      	cmp	r3, #0
 8001a04:	d05a      	beq.n	8001abc <processTimerScheduler+0xd8>
 8001a06:	7bfb      	ldrb	r3, [r7, #15]
 8001a08:	4618      	mov	r0, r3
 8001a0a:	f000 f863 	bl	8001ad4 <TimeExpired>
 8001a0e:	4603      	mov	r3, r0
 8001a10:	2b00      	cmp	r3, #0
 8001a12:	d053      	beq.n	8001abc <processTimerScheduler+0xd8>
 8001a14:	7bfa      	ldrb	r2, [r7, #15]
 8001a16:	492e      	ldr	r1, [pc, #184]	; (8001ad0 <processTimerScheduler+0xec>)
 8001a18:	4613      	mov	r3, r2
 8001a1a:	005b      	lsls	r3, r3, #1
 8001a1c:	4413      	add	r3, r2
 8001a1e:	00db      	lsls	r3, r3, #3
 8001a20:	440b      	add	r3, r1
 8001a22:	3310      	adds	r3, #16
 8001a24:	681b      	ldr	r3, [r3, #0]
 8001a26:	60bb      	str	r3, [r7, #8]
 8001a28:	7bfa      	ldrb	r2, [r7, #15]
 8001a2a:	4929      	ldr	r1, [pc, #164]	; (8001ad0 <processTimerScheduler+0xec>)
 8001a2c:	4613      	mov	r3, r2
 8001a2e:	005b      	lsls	r3, r3, #1
 8001a30:	4413      	add	r3, r2
 8001a32:	00db      	lsls	r3, r3, #3
 8001a34:	440b      	add	r3, r1
 8001a36:	3314      	adds	r3, #20
 8001a38:	681b      	ldr	r3, [r3, #0]
 8001a3a:	607b      	str	r3, [r7, #4]
 8001a3c:	7bfa      	ldrb	r2, [r7, #15]
 8001a3e:	4924      	ldr	r1, [pc, #144]	; (8001ad0 <processTimerScheduler+0xec>)
 8001a40:	4613      	mov	r3, r2
 8001a42:	005b      	lsls	r3, r3, #1
 8001a44:	4413      	add	r3, r2
 8001a46:	00db      	lsls	r3, r3, #3
 8001a48:	440b      	add	r3, r1
 8001a4a:	330c      	adds	r3, #12
 8001a4c:	781b      	ldrb	r3, [r3, #0]
 8001a4e:	b2db      	uxtb	r3, r3
 8001a50:	2bff      	cmp	r3, #255	; 0xff
 8001a52:	d020      	beq.n	8001a96 <processTimerScheduler+0xb2>
 8001a54:	7bfa      	ldrb	r2, [r7, #15]
 8001a56:	491e      	ldr	r1, [pc, #120]	; (8001ad0 <processTimerScheduler+0xec>)
 8001a58:	4613      	mov	r3, r2
 8001a5a:	005b      	lsls	r3, r3, #1
 8001a5c:	4413      	add	r3, r2
 8001a5e:	00db      	lsls	r3, r3, #3
 8001a60:	440b      	add	r3, r1
 8001a62:	330c      	adds	r3, #12
 8001a64:	781b      	ldrb	r3, [r3, #0]
 8001a66:	b2db      	uxtb	r3, r3
 8001a68:	2b00      	cmp	r3, #0
 8001a6a:	d014      	beq.n	8001a96 <processTimerScheduler+0xb2>
 8001a6c:	7bfa      	ldrb	r2, [r7, #15]
 8001a6e:	4918      	ldr	r1, [pc, #96]	; (8001ad0 <processTimerScheduler+0xec>)
 8001a70:	4613      	mov	r3, r2
 8001a72:	005b      	lsls	r3, r3, #1
 8001a74:	4413      	add	r3, r2
 8001a76:	00db      	lsls	r3, r3, #3
 8001a78:	440b      	add	r3, r1
 8001a7a:	330c      	adds	r3, #12
 8001a7c:	781b      	ldrb	r3, [r3, #0]
 8001a7e:	b2db      	uxtb	r3, r3
 8001a80:	3b01      	subs	r3, #1
 8001a82:	b2d8      	uxtb	r0, r3
 8001a84:	4912      	ldr	r1, [pc, #72]	; (8001ad0 <processTimerScheduler+0xec>)
 8001a86:	4613      	mov	r3, r2
 8001a88:	005b      	lsls	r3, r3, #1
 8001a8a:	4413      	add	r3, r2
 8001a8c:	00db      	lsls	r3, r3, #3
 8001a8e:	440b      	add	r3, r1
 8001a90:	330c      	adds	r3, #12
 8001a92:	4602      	mov	r2, r0
 8001a94:	701a      	strb	r2, [r3, #0]
 8001a96:	7bfa      	ldrb	r2, [r7, #15]
 8001a98:	490d      	ldr	r1, [pc, #52]	; (8001ad0 <processTimerScheduler+0xec>)
 8001a9a:	4613      	mov	r3, r2
 8001a9c:	005b      	lsls	r3, r3, #1
 8001a9e:	4413      	add	r3, r2
 8001aa0:	00db      	lsls	r3, r3, #3
 8001aa2:	440b      	add	r3, r1
 8001aa4:	330c      	adds	r3, #12
 8001aa6:	781b      	ldrb	r3, [r3, #0]
 8001aa8:	b2db      	uxtb	r3, r3
 8001aaa:	2b00      	cmp	r3, #0
 8001aac:	d103      	bne.n	8001ab6 <processTimerScheduler+0xd2>
 8001aae:	7bfb      	ldrb	r3, [r7, #15]
 8001ab0:	4618      	mov	r0, r3
 8001ab2:	f7ff ff3b 	bl	800192c <TimerStop>
 8001ab6:	68bb      	ldr	r3, [r7, #8]
 8001ab8:	6878      	ldr	r0, [r7, #4]
 8001aba:	4798      	blx	r3
 8001abc:	7bfb      	ldrb	r3, [r7, #15]
 8001abe:	3301      	adds	r3, #1
 8001ac0:	73fb      	strb	r3, [r7, #15]
 8001ac2:	7bfb      	ldrb	r3, [r7, #15]
 8001ac4:	2b0f      	cmp	r3, #15
 8001ac6:	d993      	bls.n	80019f0 <processTimerScheduler+0xc>
 8001ac8:	bf00      	nop
 8001aca:	3710      	adds	r7, #16
 8001acc:	46bd      	mov	sp, r7
 8001ace:	bd80      	pop	{r7, pc}
 8001ad0:	200001b0 	.word	0x200001b0

08001ad4 <TimeExpired>:
 8001ad4:	b580      	push	{r7, lr}
 8001ad6:	b084      	sub	sp, #16
 8001ad8:	af00      	add	r7, sp, #0
 8001ada:	4603      	mov	r3, r0
 8001adc:	71fb      	strb	r3, [r7, #7]
 8001ade:	2300      	movs	r3, #0
 8001ae0:	60fb      	str	r3, [r7, #12]
 8001ae2:	b672      	cpsid	i
 8001ae4:	f7ff ff72 	bl	80019cc <GetMilSecTick>
 8001ae8:	60b8      	str	r0, [r7, #8]
 8001aea:	79fb      	ldrb	r3, [r7, #7]
 8001aec:	2b0f      	cmp	r3, #15
 8001aee:	d80a      	bhi.n	8001b06 <TimeExpired+0x32>
 8001af0:	79fa      	ldrb	r2, [r7, #7]
 8001af2:	492a      	ldr	r1, [pc, #168]	; (8001b9c <TimeExpired+0xc8>)
 8001af4:	4613      	mov	r3, r2
 8001af6:	005b      	lsls	r3, r3, #1
 8001af8:	4413      	add	r3, r2
 8001afa:	00db      	lsls	r3, r3, #3
 8001afc:	440b      	add	r3, r1
 8001afe:	3310      	adds	r3, #16
 8001b00:	681b      	ldr	r3, [r3, #0]
 8001b02:	2b00      	cmp	r3, #0
 8001b04:	d102      	bne.n	8001b0c <TimeExpired+0x38>
 8001b06:	b662      	cpsie	i
 8001b08:	2300      	movs	r3, #0
 8001b0a:	e042      	b.n	8001b92 <TimeExpired+0xbe>
 8001b0c:	79fa      	ldrb	r2, [r7, #7]
 8001b0e:	4923      	ldr	r1, [pc, #140]	; (8001b9c <TimeExpired+0xc8>)
 8001b10:	4613      	mov	r3, r2
 8001b12:	005b      	lsls	r3, r3, #1
 8001b14:	4413      	add	r3, r2
 8001b16:	00db      	lsls	r3, r3, #3
 8001b18:	440b      	add	r3, r1
 8001b1a:	3304      	adds	r3, #4
 8001b1c:	681b      	ldr	r3, [r3, #0]
 8001b1e:	68ba      	ldr	r2, [r7, #8]
 8001b20:	429a      	cmp	r2, r3
 8001b22:	d30c      	bcc.n	8001b3e <TimeExpired+0x6a>
 8001b24:	79fa      	ldrb	r2, [r7, #7]
 8001b26:	491d      	ldr	r1, [pc, #116]	; (8001b9c <TimeExpired+0xc8>)
 8001b28:	4613      	mov	r3, r2
 8001b2a:	005b      	lsls	r3, r3, #1
 8001b2c:	4413      	add	r3, r2
 8001b2e:	00db      	lsls	r3, r3, #3
 8001b30:	440b      	add	r3, r1
 8001b32:	3304      	adds	r3, #4
 8001b34:	681b      	ldr	r3, [r3, #0]
 8001b36:	68ba      	ldr	r2, [r7, #8]
 8001b38:	1ad3      	subs	r3, r2, r3
 8001b3a:	60fb      	str	r3, [r7, #12]
 8001b3c:	e00e      	b.n	8001b5c <TimeExpired+0x88>
 8001b3e:	79fa      	ldrb	r2, [r7, #7]
 8001b40:	4916      	ldr	r1, [pc, #88]	; (8001b9c <TimeExpired+0xc8>)
 8001b42:	4613      	mov	r3, r2
 8001b44:	005b      	lsls	r3, r3, #1
 8001b46:	4413      	add	r3, r2
 8001b48:	00db      	lsls	r3, r3, #3
 8001b4a:	440b      	add	r3, r1
 8001b4c:	3304      	adds	r3, #4
 8001b4e:	681a      	ldr	r2, [r3, #0]
 8001b50:	68bb      	ldr	r3, [r7, #8]
 8001b52:	1ad3      	subs	r3, r2, r3
 8001b54:	60fb      	str	r3, [r7, #12]
 8001b56:	68fb      	ldr	r3, [r7, #12]
 8001b58:	43db      	mvns	r3, r3
 8001b5a:	60fb      	str	r3, [r7, #12]
 8001b5c:	79fa      	ldrb	r2, [r7, #7]
 8001b5e:	490f      	ldr	r1, [pc, #60]	; (8001b9c <TimeExpired+0xc8>)
 8001b60:	4613      	mov	r3, r2
 8001b62:	005b      	lsls	r3, r3, #1
 8001b64:	4413      	add	r3, r2
 8001b66:	00db      	lsls	r3, r3, #3
 8001b68:	440b      	add	r3, r1
 8001b6a:	3308      	adds	r3, #8
 8001b6c:	681b      	ldr	r3, [r3, #0]
 8001b6e:	68fa      	ldr	r2, [r7, #12]
 8001b70:	429a      	cmp	r2, r3
 8001b72:	d202      	bcs.n	8001b7a <TimeExpired+0xa6>
 8001b74:	b662      	cpsie	i
 8001b76:	2300      	movs	r3, #0
 8001b78:	e00b      	b.n	8001b92 <TimeExpired+0xbe>
 8001b7a:	79fa      	ldrb	r2, [r7, #7]
 8001b7c:	4907      	ldr	r1, [pc, #28]	; (8001b9c <TimeExpired+0xc8>)
 8001b7e:	4613      	mov	r3, r2
 8001b80:	005b      	lsls	r3, r3, #1
 8001b82:	4413      	add	r3, r2
 8001b84:	00db      	lsls	r3, r3, #3
 8001b86:	440b      	add	r3, r1
 8001b88:	3304      	adds	r3, #4
 8001b8a:	68ba      	ldr	r2, [r7, #8]
 8001b8c:	601a      	str	r2, [r3, #0]
 8001b8e:	b662      	cpsie	i
 8001b90:	2301      	movs	r3, #1
 8001b92:	4618      	mov	r0, r3
 8001b94:	3710      	adds	r7, #16
 8001b96:	46bd      	mov	sp, r7
 8001b98:	bd80      	pop	{r7, pc}
 8001b9a:	bf00      	nop
 8001b9c:	200001b0 	.word	0x200001b0

08001ba0 <SysTick_Handler>:
 8001ba0:	b480      	push	{r7}
 8001ba2:	af00      	add	r7, sp, #0
 8001ba4:	4b04      	ldr	r3, [pc, #16]	; (8001bb8 <SysTick_Handler+0x18>)
 8001ba6:	681b      	ldr	r3, [r3, #0]
 8001ba8:	3301      	adds	r3, #1
 8001baa:	4a03      	ldr	r2, [pc, #12]	; (8001bb8 <SysTick_Handler+0x18>)
 8001bac:	6013      	str	r3, [r2, #0]
 8001bae:	bf00      	nop
 8001bb0:	46bd      	mov	sp, r7
 8001bb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bb6:	4770      	bx	lr
 8001bb8:	20000330 	.word	0x20000330

08001bbc <TemHumSensor_Init>:
 8001bbc:	b580      	push	{r7, lr}
 8001bbe:	af00      	add	r7, sp, #0
 8001bc0:	f000 f802 	bl	8001bc8 <i2c_config>
 8001bc4:	bf00      	nop
 8001bc6:	bd80      	pop	{r7, pc}

08001bc8 <i2c_config>:
 8001bc8:	b580      	push	{r7, lr}
 8001bca:	b086      	sub	sp, #24
 8001bcc:	af00      	add	r7, sp, #0
 8001bce:	2101      	movs	r1, #1
 8001bd0:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8001bd4:	f7ff fdba 	bl	800174c <RCC_APB1PeriphClockCmd>
 8001bd8:	4b1d      	ldr	r3, [pc, #116]	; (8001c50 <i2c_config+0x88>)
 8001bda:	60bb      	str	r3, [r7, #8]
 8001bdc:	2300      	movs	r3, #0
 8001bde:	81bb      	strh	r3, [r7, #12]
 8001be0:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 8001be4:	81fb      	strh	r3, [r7, #14]
 8001be6:	2300      	movs	r3, #0
 8001be8:	823b      	strh	r3, [r7, #16]
 8001bea:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001bee:	827b      	strh	r3, [r7, #18]
 8001bf0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001bf4:	82bb      	strh	r3, [r7, #20]
 8001bf6:	f107 0308 	add.w	r3, r7, #8
 8001bfa:	4619      	mov	r1, r3
 8001bfc:	4815      	ldr	r0, [pc, #84]	; (8001c54 <i2c_config+0x8c>)
 8001bfe:	f7ff fafb 	bl	80011f8 <I2C_Init>
 8001c02:	2101      	movs	r1, #1
 8001c04:	4813      	ldr	r0, [pc, #76]	; (8001c54 <i2c_config+0x8c>)
 8001c06:	f7ff fbb9 	bl	800137c <I2C_Cmd>
 8001c0a:	2101      	movs	r1, #1
 8001c0c:	2002      	movs	r0, #2
 8001c0e:	f7ff fd7d 	bl	800170c <RCC_AHB1PeriphClockCmd>
 8001c12:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001c16:	603b      	str	r3, [r7, #0]
 8001c18:	2302      	movs	r3, #2
 8001c1a:	713b      	strb	r3, [r7, #4]
 8001c1c:	2302      	movs	r3, #2
 8001c1e:	717b      	strb	r3, [r7, #5]
 8001c20:	2301      	movs	r3, #1
 8001c22:	71bb      	strb	r3, [r7, #6]
 8001c24:	2300      	movs	r3, #0
 8001c26:	71fb      	strb	r3, [r7, #7]
 8001c28:	463b      	mov	r3, r7
 8001c2a:	4619      	mov	r1, r3
 8001c2c:	480a      	ldr	r0, [pc, #40]	; (8001c58 <i2c_config+0x90>)
 8001c2e:	f7ff f9f3 	bl	8001018 <GPIO_Init>
 8001c32:	2204      	movs	r2, #4
 8001c34:	2108      	movs	r1, #8
 8001c36:	4808      	ldr	r0, [pc, #32]	; (8001c58 <i2c_config+0x90>)
 8001c38:	f7ff fa94 	bl	8001164 <GPIO_PinAFConfig>
 8001c3c:	2204      	movs	r2, #4
 8001c3e:	2109      	movs	r1, #9
 8001c40:	4805      	ldr	r0, [pc, #20]	; (8001c58 <i2c_config+0x90>)
 8001c42:	f7ff fa8f 	bl	8001164 <GPIO_PinAFConfig>
 8001c46:	bf00      	nop
 8001c48:	3718      	adds	r7, #24
 8001c4a:	46bd      	mov	sp, r7
 8001c4c:	bd80      	pop	{r7, pc}
 8001c4e:	bf00      	nop
 8001c50:	00061a80 	.word	0x00061a80
 8001c54:	40005400 	.word	0x40005400
 8001c58:	40020400 	.word	0x40020400

08001c5c <USART2_IRQHandler>:
 8001c5c:	b580      	push	{r7, lr}
 8001c5e:	b082      	sub	sp, #8
 8001c60:	af00      	add	r7, sp, #0
 8001c62:	b672      	cpsid	i
 8001c64:	f240 5125 	movw	r1, #1317	; 0x525
 8001c68:	480e      	ldr	r0, [pc, #56]	; (8001ca4 <USART2_IRQHandler+0x48>)
 8001c6a:	f001 fced 	bl	8003648 <USART_GetITStatus>
 8001c6e:	4603      	mov	r3, r0
 8001c70:	2b01      	cmp	r3, #1
 8001c72:	d112      	bne.n	8001c9a <USART2_IRQHandler+0x3e>
 8001c74:	4b0c      	ldr	r3, [pc, #48]	; (8001ca8 <USART2_IRQHandler+0x4c>)
 8001c76:	681b      	ldr	r3, [r3, #0]
 8001c78:	607b      	str	r3, [r7, #4]
 8001c7a:	480a      	ldr	r0, [pc, #40]	; (8001ca4 <USART2_IRQHandler+0x48>)
 8001c7c:	f001 fcd4 	bl	8003628 <USART_ReceiveData>
 8001c80:	4603      	mov	r3, r0
 8001c82:	b2db      	uxtb	r3, r3
 8001c84:	70fb      	strb	r3, [r7, #3]
 8001c86:	1cfb      	adds	r3, r7, #3
 8001c88:	4619      	mov	r1, r3
 8001c8a:	6878      	ldr	r0, [r7, #4]
 8001c8c:	f7fe fb5e 	bl	800034c <bufEnDat>
 8001c90:	f240 5125 	movw	r1, #1317	; 0x525
 8001c94:	4803      	ldr	r0, [pc, #12]	; (8001ca4 <USART2_IRQHandler+0x48>)
 8001c96:	f001 fd32 	bl	80036fe <USART_ClearITPendingBit>
 8001c9a:	b662      	cpsie	i
 8001c9c:	bf00      	nop
 8001c9e:	3708      	adds	r7, #8
 8001ca0:	46bd      	mov	sp, r7
 8001ca2:	bd80      	pop	{r7, pc}
 8001ca4:	40004400 	.word	0x40004400
 8001ca8:	20000334 	.word	0x20000334

08001cac <delayMicroseconds>:
 8001cac:	b480      	push	{r7}
 8001cae:	b083      	sub	sp, #12
 8001cb0:	af00      	add	r7, sp, #0
 8001cb2:	6078      	str	r0, [r7, #4]
 8001cb4:	bf00      	nop
 8001cb6:	370c      	adds	r7, #12
 8001cb8:	46bd      	mov	sp, r7
 8001cba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cbe:	4770      	bx	lr

08001cc0 <ucg_gpio_init>:
 8001cc0:	b580      	push	{r7, lr}
 8001cc2:	b082      	sub	sp, #8
 8001cc4:	af00      	add	r7, sp, #0
 8001cc6:	2101      	movs	r1, #1
 8001cc8:	2007      	movs	r0, #7
 8001cca:	f7ff fd1f 	bl	800170c <RCC_AHB1PeriphClockCmd>
 8001cce:	2301      	movs	r3, #1
 8001cd0:	713b      	strb	r3, [r7, #4]
 8001cd2:	2303      	movs	r3, #3
 8001cd4:	717b      	strb	r3, [r7, #5]
 8001cd6:	2300      	movs	r3, #0
 8001cd8:	71bb      	strb	r3, [r7, #6]
 8001cda:	2300      	movs	r3, #0
 8001cdc:	71fb      	strb	r3, [r7, #7]
 8001cde:	f44f 7368 	mov.w	r3, #928	; 0x3a0
 8001ce2:	603b      	str	r3, [r7, #0]
 8001ce4:	463b      	mov	r3, r7
 8001ce6:	4619      	mov	r1, r3
 8001ce8:	480a      	ldr	r0, [pc, #40]	; (8001d14 <ucg_gpio_init+0x54>)
 8001cea:	f7ff f995 	bl	8001018 <GPIO_Init>
 8001cee:	f44f 6388 	mov.w	r3, #1088	; 0x440
 8001cf2:	603b      	str	r3, [r7, #0]
 8001cf4:	463b      	mov	r3, r7
 8001cf6:	4619      	mov	r1, r3
 8001cf8:	4807      	ldr	r0, [pc, #28]	; (8001d18 <ucg_gpio_init+0x58>)
 8001cfa:	f7ff f98d 	bl	8001018 <GPIO_Init>
 8001cfe:	2380      	movs	r3, #128	; 0x80
 8001d00:	603b      	str	r3, [r7, #0]
 8001d02:	463b      	mov	r3, r7
 8001d04:	4619      	mov	r1, r3
 8001d06:	4805      	ldr	r0, [pc, #20]	; (8001d1c <ucg_gpio_init+0x5c>)
 8001d08:	f7ff f986 	bl	8001018 <GPIO_Init>
 8001d0c:	bf00      	nop
 8001d0e:	3708      	adds	r7, #8
 8001d10:	46bd      	mov	sp, r7
 8001d12:	bd80      	pop	{r7, pc}
 8001d14:	40020000 	.word	0x40020000
 8001d18:	40020400 	.word	0x40020400
 8001d1c:	40020800 	.word	0x40020800

08001d20 <ucg_com_arduino_send_generic_SW_SPI>:
 8001d20:	b580      	push	{r7, lr}
 8001d22:	b084      	sub	sp, #16
 8001d24:	af00      	add	r7, sp, #0
 8001d26:	6078      	str	r0, [r7, #4]
 8001d28:	460b      	mov	r3, r1
 8001d2a:	70fb      	strb	r3, [r7, #3]
 8001d2c:	2308      	movs	r3, #8
 8001d2e:	73fb      	strb	r3, [r7, #15]
 8001d30:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8001d34:	2b00      	cmp	r3, #0
 8001d36:	da05      	bge.n	8001d44 <ucg_com_arduino_send_generic_SW_SPI+0x24>
 8001d38:	2201      	movs	r2, #1
 8001d3a:	2180      	movs	r1, #128	; 0x80
 8001d3c:	4814      	ldr	r0, [pc, #80]	; (8001d90 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8001d3e:	f7ff f9f9 	bl	8001134 <GPIO_WriteBit>
 8001d42:	e004      	b.n	8001d4e <ucg_com_arduino_send_generic_SW_SPI+0x2e>
 8001d44:	2200      	movs	r2, #0
 8001d46:	2180      	movs	r1, #128	; 0x80
 8001d48:	4811      	ldr	r0, [pc, #68]	; (8001d90 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8001d4a:	f7ff f9f3 	bl	8001134 <GPIO_WriteBit>
 8001d4e:	2001      	movs	r0, #1
 8001d50:	f7ff ffac 	bl	8001cac <delayMicroseconds>
 8001d54:	2201      	movs	r2, #1
 8001d56:	2120      	movs	r1, #32
 8001d58:	480d      	ldr	r0, [pc, #52]	; (8001d90 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8001d5a:	f7ff f9eb 	bl	8001134 <GPIO_WriteBit>
 8001d5e:	2001      	movs	r0, #1
 8001d60:	f7ff ffa4 	bl	8001cac <delayMicroseconds>
 8001d64:	7bfb      	ldrb	r3, [r7, #15]
 8001d66:	3b01      	subs	r3, #1
 8001d68:	73fb      	strb	r3, [r7, #15]
 8001d6a:	2200      	movs	r2, #0
 8001d6c:	2120      	movs	r1, #32
 8001d6e:	4808      	ldr	r0, [pc, #32]	; (8001d90 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8001d70:	f7ff f9e0 	bl	8001134 <GPIO_WriteBit>
 8001d74:	2001      	movs	r0, #1
 8001d76:	f7ff ff99 	bl	8001cac <delayMicroseconds>
 8001d7a:	78fb      	ldrb	r3, [r7, #3]
 8001d7c:	005b      	lsls	r3, r3, #1
 8001d7e:	70fb      	strb	r3, [r7, #3]
 8001d80:	7bfb      	ldrb	r3, [r7, #15]
 8001d82:	2b00      	cmp	r3, #0
 8001d84:	d1d4      	bne.n	8001d30 <ucg_com_arduino_send_generic_SW_SPI+0x10>
 8001d86:	bf00      	nop
 8001d88:	3710      	adds	r7, #16
 8001d8a:	46bd      	mov	sp, r7
 8001d8c:	bd80      	pop	{r7, pc}
 8001d8e:	bf00      	nop
 8001d90:	40020000 	.word	0x40020000

08001d94 <ucg_com_arduino_generic_SW_SPI>:
 8001d94:	b580      	push	{r7, lr}
 8001d96:	b084      	sub	sp, #16
 8001d98:	af00      	add	r7, sp, #0
 8001d9a:	60f8      	str	r0, [r7, #12]
 8001d9c:	607b      	str	r3, [r7, #4]
 8001d9e:	460b      	mov	r3, r1
 8001da0:	817b      	strh	r3, [r7, #10]
 8001da2:	4613      	mov	r3, r2
 8001da4:	813b      	strh	r3, [r7, #8]
 8001da6:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001daa:	3b0a      	subs	r3, #10
 8001dac:	2b0b      	cmp	r3, #11
 8001dae:	f200 80dc 	bhi.w	8001f6a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001db2:	a201      	add	r2, pc, #4	; (adr r2, 8001db8 <ucg_com_arduino_generic_SW_SPI+0x24>)
 8001db4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001db8:	08001de9 	.word	0x08001de9
 8001dbc:	08001f6b 	.word	0x08001f6b
 8001dc0:	08001e3b 	.word	0x08001e3b
 8001dc4:	08001e45 	.word	0x08001e45
 8001dc8:	08001e55 	.word	0x08001e55
 8001dcc:	08001e65 	.word	0x08001e65
 8001dd0:	08001e77 	.word	0x08001e77
 8001dd4:	08001e97 	.word	0x08001e97
 8001dd8:	08001ebf 	.word	0x08001ebf
 8001ddc:	08001ef5 	.word	0x08001ef5
 8001de0:	08001f13 	.word	0x08001f13
 8001de4:	08001f63 	.word	0x08001f63
 8001de8:	f7ff ff6a 	bl	8001cc0 <ucg_gpio_init>
 8001dec:	2201      	movs	r2, #1
 8001dee:	2180      	movs	r1, #128	; 0x80
 8001df0:	4860      	ldr	r0, [pc, #384]	; (8001f74 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001df2:	f7ff f99f 	bl	8001134 <GPIO_WriteBit>
 8001df6:	2201      	movs	r2, #1
 8001df8:	2140      	movs	r1, #64	; 0x40
 8001dfa:	485f      	ldr	r0, [pc, #380]	; (8001f78 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8001dfc:	f7ff f99a 	bl	8001134 <GPIO_WriteBit>
 8001e00:	2201      	movs	r2, #1
 8001e02:	2180      	movs	r1, #128	; 0x80
 8001e04:	485d      	ldr	r0, [pc, #372]	; (8001f7c <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 8001e06:	f7ff f995 	bl	8001134 <GPIO_WriteBit>
 8001e0a:	2201      	movs	r2, #1
 8001e0c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001e10:	4858      	ldr	r0, [pc, #352]	; (8001f74 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001e12:	f7ff f98f 	bl	8001134 <GPIO_WriteBit>
 8001e16:	2200      	movs	r2, #0
 8001e18:	2120      	movs	r1, #32
 8001e1a:	4856      	ldr	r0, [pc, #344]	; (8001f74 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001e1c:	f7ff f98a 	bl	8001134 <GPIO_WriteBit>
 8001e20:	2201      	movs	r2, #1
 8001e22:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001e26:	4854      	ldr	r0, [pc, #336]	; (8001f78 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8001e28:	f7ff f984 	bl	8001134 <GPIO_WriteBit>
 8001e2c:	2201      	movs	r2, #1
 8001e2e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001e32:	4850      	ldr	r0, [pc, #320]	; (8001f74 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001e34:	f7ff f97e 	bl	8001134 <GPIO_WriteBit>
 8001e38:	e097      	b.n	8001f6a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001e3a:	893b      	ldrh	r3, [r7, #8]
 8001e3c:	4618      	mov	r0, r3
 8001e3e:	f7ff ff35 	bl	8001cac <delayMicroseconds>
 8001e42:	e092      	b.n	8001f6a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001e44:	893b      	ldrh	r3, [r7, #8]
 8001e46:	b2db      	uxtb	r3, r3
 8001e48:	461a      	mov	r2, r3
 8001e4a:	2180      	movs	r1, #128	; 0x80
 8001e4c:	484b      	ldr	r0, [pc, #300]	; (8001f7c <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 8001e4e:	f7ff f971 	bl	8001134 <GPIO_WriteBit>
 8001e52:	e08a      	b.n	8001f6a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001e54:	893b      	ldrh	r3, [r7, #8]
 8001e56:	b2db      	uxtb	r3, r3
 8001e58:	461a      	mov	r2, r3
 8001e5a:	2140      	movs	r1, #64	; 0x40
 8001e5c:	4846      	ldr	r0, [pc, #280]	; (8001f78 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8001e5e:	f7ff f969 	bl	8001134 <GPIO_WriteBit>
 8001e62:	e082      	b.n	8001f6a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001e64:	893b      	ldrh	r3, [r7, #8]
 8001e66:	b2db      	uxtb	r3, r3
 8001e68:	461a      	mov	r2, r3
 8001e6a:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001e6e:	4841      	ldr	r0, [pc, #260]	; (8001f74 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001e70:	f7ff f960 	bl	8001134 <GPIO_WriteBit>
 8001e74:	e079      	b.n	8001f6a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001e76:	893b      	ldrh	r3, [r7, #8]
 8001e78:	b2db      	uxtb	r3, r3
 8001e7a:	4619      	mov	r1, r3
 8001e7c:	68f8      	ldr	r0, [r7, #12]
 8001e7e:	f7ff ff4f 	bl	8001d20 <ucg_com_arduino_send_generic_SW_SPI>
 8001e82:	e072      	b.n	8001f6a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	781b      	ldrb	r3, [r3, #0]
 8001e88:	4619      	mov	r1, r3
 8001e8a:	68f8      	ldr	r0, [r7, #12]
 8001e8c:	f7ff ff48 	bl	8001d20 <ucg_com_arduino_send_generic_SW_SPI>
 8001e90:	893b      	ldrh	r3, [r7, #8]
 8001e92:	3b01      	subs	r3, #1
 8001e94:	813b      	strh	r3, [r7, #8]
 8001e96:	893b      	ldrh	r3, [r7, #8]
 8001e98:	2b00      	cmp	r3, #0
 8001e9a:	d1f3      	bne.n	8001e84 <ucg_com_arduino_generic_SW_SPI+0xf0>
 8001e9c:	e065      	b.n	8001f6a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	781b      	ldrb	r3, [r3, #0]
 8001ea2:	4619      	mov	r1, r3
 8001ea4:	68f8      	ldr	r0, [r7, #12]
 8001ea6:	f7ff ff3b 	bl	8001d20 <ucg_com_arduino_send_generic_SW_SPI>
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	3301      	adds	r3, #1
 8001eae:	781b      	ldrb	r3, [r3, #0]
 8001eb0:	4619      	mov	r1, r3
 8001eb2:	68f8      	ldr	r0, [r7, #12]
 8001eb4:	f7ff ff34 	bl	8001d20 <ucg_com_arduino_send_generic_SW_SPI>
 8001eb8:	893b      	ldrh	r3, [r7, #8]
 8001eba:	3b01      	subs	r3, #1
 8001ebc:	813b      	strh	r3, [r7, #8]
 8001ebe:	893b      	ldrh	r3, [r7, #8]
 8001ec0:	2b00      	cmp	r3, #0
 8001ec2:	d1ec      	bne.n	8001e9e <ucg_com_arduino_generic_SW_SPI+0x10a>
 8001ec4:	e051      	b.n	8001f6a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	781b      	ldrb	r3, [r3, #0]
 8001eca:	4619      	mov	r1, r3
 8001ecc:	68f8      	ldr	r0, [r7, #12]
 8001ece:	f7ff ff27 	bl	8001d20 <ucg_com_arduino_send_generic_SW_SPI>
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	3301      	adds	r3, #1
 8001ed6:	781b      	ldrb	r3, [r3, #0]
 8001ed8:	4619      	mov	r1, r3
 8001eda:	68f8      	ldr	r0, [r7, #12]
 8001edc:	f7ff ff20 	bl	8001d20 <ucg_com_arduino_send_generic_SW_SPI>
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	3302      	adds	r3, #2
 8001ee4:	781b      	ldrb	r3, [r3, #0]
 8001ee6:	4619      	mov	r1, r3
 8001ee8:	68f8      	ldr	r0, [r7, #12]
 8001eea:	f7ff ff19 	bl	8001d20 <ucg_com_arduino_send_generic_SW_SPI>
 8001eee:	893b      	ldrh	r3, [r7, #8]
 8001ef0:	3b01      	subs	r3, #1
 8001ef2:	813b      	strh	r3, [r7, #8]
 8001ef4:	893b      	ldrh	r3, [r7, #8]
 8001ef6:	2b00      	cmp	r3, #0
 8001ef8:	d1e5      	bne.n	8001ec6 <ucg_com_arduino_generic_SW_SPI+0x132>
 8001efa:	e036      	b.n	8001f6a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	1c5a      	adds	r2, r3, #1
 8001f00:	607a      	str	r2, [r7, #4]
 8001f02:	781b      	ldrb	r3, [r3, #0]
 8001f04:	4619      	mov	r1, r3
 8001f06:	68f8      	ldr	r0, [r7, #12]
 8001f08:	f7ff ff0a 	bl	8001d20 <ucg_com_arduino_send_generic_SW_SPI>
 8001f0c:	893b      	ldrh	r3, [r7, #8]
 8001f0e:	3b01      	subs	r3, #1
 8001f10:	813b      	strh	r3, [r7, #8]
 8001f12:	893b      	ldrh	r3, [r7, #8]
 8001f14:	2b00      	cmp	r3, #0
 8001f16:	d1f1      	bne.n	8001efc <ucg_com_arduino_generic_SW_SPI+0x168>
 8001f18:	e027      	b.n	8001f6a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8001f1a:	687b      	ldr	r3, [r7, #4]
 8001f1c:	781b      	ldrb	r3, [r3, #0]
 8001f1e:	2b00      	cmp	r3, #0
 8001f20:	d010      	beq.n	8001f44 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8001f22:	687b      	ldr	r3, [r7, #4]
 8001f24:	781b      	ldrb	r3, [r3, #0]
 8001f26:	2b01      	cmp	r3, #1
 8001f28:	d106      	bne.n	8001f38 <ucg_com_arduino_generic_SW_SPI+0x1a4>
 8001f2a:	2200      	movs	r2, #0
 8001f2c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001f30:	4810      	ldr	r0, [pc, #64]	; (8001f74 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001f32:	f7ff f8ff 	bl	8001134 <GPIO_WriteBit>
 8001f36:	e005      	b.n	8001f44 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8001f38:	2201      	movs	r2, #1
 8001f3a:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001f3e:	480d      	ldr	r0, [pc, #52]	; (8001f74 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8001f40:	f7ff f8f8 	bl	8001134 <GPIO_WriteBit>
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	3301      	adds	r3, #1
 8001f48:	607b      	str	r3, [r7, #4]
 8001f4a:	687b      	ldr	r3, [r7, #4]
 8001f4c:	781b      	ldrb	r3, [r3, #0]
 8001f4e:	4619      	mov	r1, r3
 8001f50:	68f8      	ldr	r0, [r7, #12]
 8001f52:	f7ff fee5 	bl	8001d20 <ucg_com_arduino_send_generic_SW_SPI>
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	3301      	adds	r3, #1
 8001f5a:	607b      	str	r3, [r7, #4]
 8001f5c:	893b      	ldrh	r3, [r7, #8]
 8001f5e:	3b01      	subs	r3, #1
 8001f60:	813b      	strh	r3, [r7, #8]
 8001f62:	893b      	ldrh	r3, [r7, #8]
 8001f64:	2b00      	cmp	r3, #0
 8001f66:	d1d8      	bne.n	8001f1a <ucg_com_arduino_generic_SW_SPI+0x186>
 8001f68:	bf00      	nop
 8001f6a:	2301      	movs	r3, #1
 8001f6c:	4618      	mov	r0, r3
 8001f6e:	3710      	adds	r7, #16
 8001f70:	46bd      	mov	sp, r7
 8001f72:	bd80      	pop	{r7, pc}
 8001f74:	40020000 	.word	0x40020000
 8001f78:	40020400 	.word	0x40020400
 8001f7c:	40020800 	.word	0x40020800

08001f80 <Ucglib4WireSWSPI_begin>:
 8001f80:	b580      	push	{r7, lr}
 8001f82:	b082      	sub	sp, #8
 8001f84:	af00      	add	r7, sp, #0
 8001f86:	6078      	str	r0, [r7, #4]
 8001f88:	460b      	mov	r3, r1
 8001f8a:	70fb      	strb	r3, [r7, #3]
 8001f8c:	4b07      	ldr	r3, [pc, #28]	; (8001fac <Ucglib4WireSWSPI_begin+0x2c>)
 8001f8e:	4a08      	ldr	r2, [pc, #32]	; (8001fb0 <Ucglib4WireSWSPI_begin+0x30>)
 8001f90:	4908      	ldr	r1, [pc, #32]	; (8001fb4 <Ucglib4WireSWSPI_begin+0x34>)
 8001f92:	6878      	ldr	r0, [r7, #4]
 8001f94:	f001 f9a2 	bl	80032dc <ucg_Init>
 8001f98:	78fb      	ldrb	r3, [r7, #3]
 8001f9a:	4619      	mov	r1, r3
 8001f9c:	6878      	ldr	r0, [r7, #4]
 8001f9e:	f000 ff86 	bl	8002eae <ucg_SetFontMode>
 8001fa2:	bf00      	nop
 8001fa4:	3708      	adds	r7, #8
 8001fa6:	46bd      	mov	sp, r7
 8001fa8:	bd80      	pop	{r7, pc}
 8001faa:	bf00      	nop
 8001fac:	08001d95 	.word	0x08001d95
 8001fb0:	080025ed 	.word	0x080025ed
 8001fb4:	08002715 	.word	0x08002715

08001fb8 <ucg_DrawBox>:
 8001fb8:	b580      	push	{r7, lr}
 8001fba:	b084      	sub	sp, #16
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	60f8      	str	r0, [r7, #12]
 8001fc0:	4608      	mov	r0, r1
 8001fc2:	4611      	mov	r1, r2
 8001fc4:	461a      	mov	r2, r3
 8001fc6:	4603      	mov	r3, r0
 8001fc8:	817b      	strh	r3, [r7, #10]
 8001fca:	460b      	mov	r3, r1
 8001fcc:	813b      	strh	r3, [r7, #8]
 8001fce:	4613      	mov	r3, r2
 8001fd0:	80fb      	strh	r3, [r7, #6]
 8001fd2:	e014      	b.n	8001ffe <ucg_DrawBox+0x46>
 8001fd4:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001fd8:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8001fdc:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8001fe0:	68f8      	ldr	r0, [r7, #12]
 8001fe2:	f001 f9ed 	bl	80033c0 <ucg_DrawHLine>
 8001fe6:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8001fea:	b29b      	uxth	r3, r3
 8001fec:	3b01      	subs	r3, #1
 8001fee:	b29b      	uxth	r3, r3
 8001ff0:	833b      	strh	r3, [r7, #24]
 8001ff2:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8001ff6:	b29b      	uxth	r3, r3
 8001ff8:	3301      	adds	r3, #1
 8001ffa:	b29b      	uxth	r3, r3
 8001ffc:	813b      	strh	r3, [r7, #8]
 8001ffe:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8002002:	2b00      	cmp	r3, #0
 8002004:	dce6      	bgt.n	8001fd4 <ucg_DrawBox+0x1c>
 8002006:	bf00      	nop
 8002008:	3710      	adds	r7, #16
 800200a:	46bd      	mov	sp, r7
 800200c:	bd80      	pop	{r7, pc}

0800200e <ucg_ClearScreen>:
 800200e:	b580      	push	{r7, lr}
 8002010:	b084      	sub	sp, #16
 8002012:	af02      	add	r7, sp, #8
 8002014:	6078      	str	r0, [r7, #4]
 8002016:	2300      	movs	r3, #0
 8002018:	9300      	str	r3, [sp, #0]
 800201a:	2300      	movs	r3, #0
 800201c:	2200      	movs	r2, #0
 800201e:	2100      	movs	r1, #0
 8002020:	6878      	ldr	r0, [r7, #4]
 8002022:	f001 f9ec 	bl	80033fe <ucg_SetColor>
 8002026:	6878      	ldr	r0, [r7, #4]
 8002028:	f000 fb3b 	bl	80026a2 <ucg_SetMaxClipRange>
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8002038:	9300      	str	r3, [sp, #0]
 800203a:	4613      	mov	r3, r2
 800203c:	2200      	movs	r2, #0
 800203e:	2100      	movs	r1, #0
 8002040:	6878      	ldr	r0, [r7, #4]
 8002042:	f7ff ffb9 	bl	8001fb8 <ucg_DrawBox>
 8002046:	23ff      	movs	r3, #255	; 0xff
 8002048:	9300      	str	r3, [sp, #0]
 800204a:	23ff      	movs	r3, #255	; 0xff
 800204c:	22ff      	movs	r2, #255	; 0xff
 800204e:	2100      	movs	r1, #0
 8002050:	6878      	ldr	r0, [r7, #4]
 8002052:	f001 f9d4 	bl	80033fe <ucg_SetColor>
 8002056:	bf00      	nop
 8002058:	3708      	adds	r7, #8
 800205a:	46bd      	mov	sp, r7
 800205c:	bd80      	pop	{r7, pc}

0800205e <ucg_ccs_init>:
 800205e:	b480      	push	{r7}
 8002060:	b083      	sub	sp, #12
 8002062:	af00      	add	r7, sp, #0
 8002064:	6078      	str	r0, [r7, #4]
 8002066:	4608      	mov	r0, r1
 8002068:	4611      	mov	r1, r2
 800206a:	461a      	mov	r2, r3
 800206c:	4603      	mov	r3, r0
 800206e:	70fb      	strb	r3, [r7, #3]
 8002070:	460b      	mov	r3, r1
 8002072:	70bb      	strb	r3, [r7, #2]
 8002074:	4613      	mov	r3, r2
 8002076:	803b      	strh	r3, [r7, #0]
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	78fa      	ldrb	r2, [r7, #3]
 800207c:	705a      	strb	r2, [r3, #1]
 800207e:	78bb      	ldrb	r3, [r7, #2]
 8002080:	b29a      	uxth	r2, r3
 8002082:	78fb      	ldrb	r3, [r7, #3]
 8002084:	b29b      	uxth	r3, r3
 8002086:	1ad3      	subs	r3, r2, r3
 8002088:	b29b      	uxth	r3, r3
 800208a:	b21a      	sxth	r2, r3
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	809a      	strh	r2, [r3, #4]
 8002090:	883b      	ldrh	r3, [r7, #0]
 8002092:	3b01      	subs	r3, #1
 8002094:	b29b      	uxth	r3, r3
 8002096:	b21a      	sxth	r2, r3
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	811a      	strh	r2, [r3, #8]
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	2201      	movs	r2, #1
 80020a0:	805a      	strh	r2, [r3, #2]
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80020a8:	461a      	mov	r2, r3
 80020aa:	687b      	ldr	r3, [r7, #4]
 80020ac:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80020b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80020b4:	b21a      	sxth	r2, r3
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	80da      	strh	r2, [r3, #6]
 80020ba:	687b      	ldr	r3, [r7, #4]
 80020bc:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80020c0:	2b00      	cmp	r3, #0
 80020c2:	da0c      	bge.n	80020de <ucg_ccs_init+0x80>
 80020c4:	687b      	ldr	r3, [r7, #4]
 80020c6:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80020ca:	b29b      	uxth	r3, r3
 80020cc:	425b      	negs	r3, r3
 80020ce:	b29b      	uxth	r3, r3
 80020d0:	b21a      	sxth	r2, r3
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	809a      	strh	r2, [r3, #4]
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80020dc:	805a      	strh	r2, [r3, #2]
 80020de:	687b      	ldr	r3, [r7, #4]
 80020e0:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80020e4:	687a      	ldr	r2, [r7, #4]
 80020e6:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80020ea:	fb93 f1f2 	sdiv	r1, r3, r2
 80020ee:	fb02 f201 	mul.w	r2, r2, r1
 80020f2:	1a9b      	subs	r3, r3, r2
 80020f4:	b21a      	sxth	r2, r3
 80020f6:	687b      	ldr	r3, [r7, #4]
 80020f8:	815a      	strh	r2, [r3, #10]
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002100:	0fda      	lsrs	r2, r3, #31
 8002102:	4413      	add	r3, r2
 8002104:	105b      	asrs	r3, r3, #1
 8002106:	b21a      	sxth	r2, r3
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	819a      	strh	r2, [r3, #12]
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	78fa      	ldrb	r2, [r7, #3]
 8002110:	701a      	strb	r2, [r3, #0]
 8002112:	bf00      	nop
 8002114:	370c      	adds	r7, #12
 8002116:	46bd      	mov	sp, r7
 8002118:	f85d 7b04 	ldr.w	r7, [sp], #4
 800211c:	4770      	bx	lr

0800211e <ucg_ccs_step>:
 800211e:	b480      	push	{r7}
 8002120:	b083      	sub	sp, #12
 8002122:	af00      	add	r7, sp, #0
 8002124:	6078      	str	r0, [r7, #4]
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	781a      	ldrb	r2, [r3, #0]
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8002130:	b2db      	uxtb	r3, r3
 8002132:	4413      	add	r3, r2
 8002134:	b2da      	uxtb	r2, r3
 8002136:	687b      	ldr	r3, [r7, #4]
 8002138:	701a      	strb	r2, [r3, #0]
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8002140:	b29a      	uxth	r2, r3
 8002142:	687b      	ldr	r3, [r7, #4]
 8002144:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8002148:	b29b      	uxth	r3, r3
 800214a:	4413      	add	r3, r2
 800214c:	b29b      	uxth	r3, r3
 800214e:	b21a      	sxth	r2, r3
 8002150:	687b      	ldr	r3, [r7, #4]
 8002152:	819a      	strh	r2, [r3, #12]
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002160:	429a      	cmp	r2, r3
 8002162:	db16      	blt.n	8002192 <ucg_ccs_step+0x74>
 8002164:	687b      	ldr	r3, [r7, #4]
 8002166:	781a      	ldrb	r2, [r3, #0]
 8002168:	687b      	ldr	r3, [r7, #4]
 800216a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800216e:	b2db      	uxtb	r3, r3
 8002170:	4413      	add	r3, r2
 8002172:	b2da      	uxtb	r2, r3
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	701a      	strb	r2, [r3, #0]
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 800217e:	b29a      	uxth	r2, r3
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002186:	b29b      	uxth	r3, r3
 8002188:	1ad3      	subs	r3, r2, r3
 800218a:	b29b      	uxth	r3, r3
 800218c:	b21a      	sxth	r2, r3
 800218e:	687b      	ldr	r3, [r7, #4]
 8002190:	819a      	strh	r2, [r3, #12]
 8002192:	bf00      	nop
 8002194:	370c      	adds	r7, #12
 8002196:	46bd      	mov	sp, r7
 8002198:	f85d 7b04 	ldr.w	r7, [sp], #4
 800219c:	4770      	bx	lr

0800219e <ucg_ccs_seek>:
 800219e:	b480      	push	{r7}
 80021a0:	b085      	sub	sp, #20
 80021a2:	af00      	add	r7, sp, #0
 80021a4:	6078      	str	r0, [r7, #4]
 80021a6:	460b      	mov	r3, r1
 80021a8:	807b      	strh	r3, [r7, #2]
 80021aa:	687b      	ldr	r3, [r7, #4]
 80021ac:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80021b0:	b2da      	uxtb	r2, r3
 80021b2:	687b      	ldr	r3, [r7, #4]
 80021b4:	701a      	strb	r2, [r3, #0]
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	781a      	ldrb	r2, [r3, #0]
 80021ba:	887b      	ldrh	r3, [r7, #2]
 80021bc:	b2db      	uxtb	r3, r3
 80021be:	fb12 f303 	smulbb	r3, r2, r3
 80021c2:	b2da      	uxtb	r2, r3
 80021c4:	687b      	ldr	r3, [r7, #4]
 80021c6:	701a      	strb	r2, [r3, #0]
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 80021ce:	b29a      	uxth	r2, r3
 80021d0:	887b      	ldrh	r3, [r7, #2]
 80021d2:	fb12 f303 	smulbb	r3, r2, r3
 80021d6:	b29a      	uxth	r2, r3
 80021d8:	687b      	ldr	r3, [r7, #4]
 80021da:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80021de:	0fd9      	lsrs	r1, r3, #31
 80021e0:	440b      	add	r3, r1
 80021e2:	105b      	asrs	r3, r3, #1
 80021e4:	b21b      	sxth	r3, r3
 80021e6:	b29b      	uxth	r3, r3
 80021e8:	4413      	add	r3, r2
 80021ea:	b29b      	uxth	r3, r3
 80021ec:	81fb      	strh	r3, [r7, #14]
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80021f4:	2b00      	cmp	r3, #0
 80021f6:	db0e      	blt.n	8002216 <ucg_ccs_seek+0x78>
 80021f8:	687b      	ldr	r3, [r7, #4]
 80021fa:	781a      	ldrb	r2, [r3, #0]
 80021fc:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002200:	6879      	ldr	r1, [r7, #4]
 8002202:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8002206:	fb93 f3f1 	sdiv	r3, r3, r1
 800220a:	b2db      	uxtb	r3, r3
 800220c:	4413      	add	r3, r2
 800220e:	b2da      	uxtb	r2, r3
 8002210:	687b      	ldr	r3, [r7, #4]
 8002212:	701a      	strb	r2, [r3, #0]
 8002214:	e00d      	b.n	8002232 <ucg_ccs_seek+0x94>
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	781a      	ldrb	r2, [r3, #0]
 800221a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800221e:	6879      	ldr	r1, [r7, #4]
 8002220:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8002224:	fb93 f3f1 	sdiv	r3, r3, r1
 8002228:	b2db      	uxtb	r3, r3
 800222a:	1ad3      	subs	r3, r2, r3
 800222c:	b2da      	uxtb	r2, r3
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	701a      	strb	r2, [r3, #0]
 8002232:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002236:	687a      	ldr	r2, [r7, #4]
 8002238:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 800223c:	fb93 f1f2 	sdiv	r1, r3, r2
 8002240:	fb02 f201 	mul.w	r2, r2, r1
 8002244:	1a9b      	subs	r3, r3, r2
 8002246:	b21a      	sxth	r2, r3
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	819a      	strh	r2, [r3, #12]
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	781a      	ldrb	r2, [r3, #0]
 8002250:	687b      	ldr	r3, [r7, #4]
 8002252:	785b      	ldrb	r3, [r3, #1]
 8002254:	4413      	add	r3, r2
 8002256:	b2da      	uxtb	r2, r3
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	701a      	strb	r2, [r3, #0]
 800225c:	bf00      	nop
 800225e:	3714      	adds	r7, #20
 8002260:	46bd      	mov	sp, r7
 8002262:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002266:	4770      	bx	lr

08002268 <ucg_dev_default_cb>:
 8002268:	b580      	push	{r7, lr}
 800226a:	b084      	sub	sp, #16
 800226c:	af00      	add	r7, sp, #0
 800226e:	60f8      	str	r0, [r7, #12]
 8002270:	460b      	mov	r3, r1
 8002272:	607a      	str	r2, [r7, #4]
 8002274:	817b      	strh	r3, [r7, #10]
 8002276:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800227a:	2b0c      	cmp	r3, #12
 800227c:	d00a      	beq.n	8002294 <ucg_dev_default_cb+0x2c>
 800227e:	2b17      	cmp	r3, #23
 8002280:	d10f      	bne.n	80022a2 <ucg_dev_default_cb+0x3a>
 8002282:	68fb      	ldr	r3, [r7, #12]
 8002284:	68db      	ldr	r3, [r3, #12]
 8002286:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800228a:	687a      	ldr	r2, [r7, #4]
 800228c:	68f8      	ldr	r0, [r7, #12]
 800228e:	4798      	blx	r3
 8002290:	4603      	mov	r3, r0
 8002292:	e007      	b.n	80022a4 <ucg_dev_default_cb+0x3c>
 8002294:	68fb      	ldr	r3, [r7, #12]
 8002296:	687a      	ldr	r2, [r7, #4]
 8002298:	3370      	adds	r3, #112	; 0x70
 800229a:	6810      	ldr	r0, [r2, #0]
 800229c:	6851      	ldr	r1, [r2, #4]
 800229e:	c303      	stmia	r3!, {r0, r1}
 80022a0:	bf00      	nop
 80022a2:	2301      	movs	r3, #1
 80022a4:	4618      	mov	r0, r3
 80022a6:	3710      	adds	r7, #16
 80022a8:	46bd      	mov	sp, r7
 80022aa:	bd80      	pop	{r7, pc}

080022ac <ucg_ext_none>:
 80022ac:	b480      	push	{r7}
 80022ae:	b085      	sub	sp, #20
 80022b0:	af00      	add	r7, sp, #0
 80022b2:	60f8      	str	r0, [r7, #12]
 80022b4:	460b      	mov	r3, r1
 80022b6:	607a      	str	r2, [r7, #4]
 80022b8:	817b      	strh	r3, [r7, #10]
 80022ba:	2301      	movs	r3, #1
 80022bc:	4618      	mov	r0, r3
 80022be:	3714      	adds	r7, #20
 80022c0:	46bd      	mov	sp, r7
 80022c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022c6:	4770      	bx	lr

080022c8 <ucg_handle_st7735_l90fx>:
 80022c8:	b590      	push	{r4, r7, lr}
 80022ca:	b085      	sub	sp, #20
 80022cc:	af00      	add	r7, sp, #0
 80022ce:	6078      	str	r0, [r7, #4]
 80022d0:	6878      	ldr	r0, [r7, #4]
 80022d2:	f001 facf 	bl	8003874 <ucg_clip_l90fx>
 80022d6:	4603      	mov	r3, r0
 80022d8:	2b00      	cmp	r3, #0
 80022da:	d053      	beq.n	8002384 <ucg_handle_st7735_l90fx+0xbc>
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 80022e2:	2b01      	cmp	r3, #1
 80022e4:	d008      	beq.n	80022f8 <ucg_handle_st7735_l90fx+0x30>
 80022e6:	2b02      	cmp	r3, #2
 80022e8:	d00b      	beq.n	8002302 <ucg_handle_st7735_l90fx+0x3a>
 80022ea:	2b00      	cmp	r3, #0
 80022ec:	d11b      	bne.n	8002326 <ucg_handle_st7735_l90fx+0x5e>
 80022ee:	4928      	ldr	r1, [pc, #160]	; (8002390 <ucg_handle_st7735_l90fx+0xc8>)
 80022f0:	6878      	ldr	r0, [r7, #4]
 80022f2:	f001 fded 	bl	8003ed0 <ucg_com_SendCmdSeq>
 80022f6:	e028      	b.n	800234a <ucg_handle_st7735_l90fx+0x82>
 80022f8:	4926      	ldr	r1, [pc, #152]	; (8002394 <ucg_handle_st7735_l90fx+0xcc>)
 80022fa:	6878      	ldr	r0, [r7, #4]
 80022fc:	f001 fde8 	bl	8003ed0 <ucg_com_SendCmdSeq>
 8002300:	e023      	b.n	800234a <ucg_handle_st7735_l90fx+0x82>
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002306:	81fb      	strh	r3, [r7, #14]
 8002308:	89fb      	ldrh	r3, [r7, #14]
 800230a:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 800230e:	b29b      	uxth	r3, r3
 8002310:	b21a      	sxth	r2, r3
 8002312:	687b      	ldr	r3, [r7, #4]
 8002314:	849a      	strh	r2, [r3, #36]	; 0x24
 8002316:	4920      	ldr	r1, [pc, #128]	; (8002398 <ucg_handle_st7735_l90fx+0xd0>)
 8002318:	6878      	ldr	r0, [r7, #4]
 800231a:	f001 fdd9 	bl	8003ed0 <ucg_com_SendCmdSeq>
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	89fa      	ldrh	r2, [r7, #14]
 8002322:	849a      	strh	r2, [r3, #36]	; 0x24
 8002324:	e011      	b.n	800234a <ucg_handle_st7735_l90fx+0x82>
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800232a:	81fb      	strh	r3, [r7, #14]
 800232c:	89fb      	ldrh	r3, [r7, #14]
 800232e:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002332:	b29b      	uxth	r3, r3
 8002334:	b21a      	sxth	r2, r3
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	84da      	strh	r2, [r3, #38]	; 0x26
 800233a:	4918      	ldr	r1, [pc, #96]	; (800239c <ucg_handle_st7735_l90fx+0xd4>)
 800233c:	6878      	ldr	r0, [r7, #4]
 800233e:	f001 fdc7 	bl	8003ed0 <ucg_com_SendCmdSeq>
 8002342:	687b      	ldr	r3, [r7, #4]
 8002344:	89fa      	ldrh	r2, [r7, #14]
 8002346:	84da      	strh	r2, [r3, #38]	; 0x26
 8002348:	bf00      	nop
 800234a:	687b      	ldr	r3, [r7, #4]
 800234c:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8002350:	723b      	strb	r3, [r7, #8]
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8002358:	727b      	strb	r3, [r7, #9]
 800235a:	687b      	ldr	r3, [r7, #4]
 800235c:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 8002360:	72bb      	strb	r3, [r7, #10]
 8002362:	687b      	ldr	r3, [r7, #4]
 8002364:	69dc      	ldr	r4, [r3, #28]
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 800236c:	b29a      	uxth	r2, r3
 800236e:	f107 0308 	add.w	r3, r7, #8
 8002372:	2113      	movs	r1, #19
 8002374:	6878      	ldr	r0, [r7, #4]
 8002376:	47a0      	blx	r4
 8002378:	2101      	movs	r1, #1
 800237a:	6878      	ldr	r0, [r7, #4]
 800237c:	f001 fcf4 	bl	8003d68 <ucg_com_SetCSLineStatus>
 8002380:	2301      	movs	r3, #1
 8002382:	e000      	b.n	8002386 <ucg_handle_st7735_l90fx+0xbe>
 8002384:	2300      	movs	r3, #0
 8002386:	4618      	mov	r0, r3
 8002388:	3714      	adds	r7, #20
 800238a:	46bd      	mov	sp, r7
 800238c:	bd90      	pop	{r4, r7, pc}
 800238e:	bf00      	nop
 8002390:	08004b14 	.word	0x08004b14
 8002394:	08004b34 	.word	0x08004b34
 8002398:	08004b58 	.word	0x08004b58
 800239c:	08004b7c 	.word	0x08004b7c

080023a0 <ucg_handle_st7735_l90se>:
 80023a0:	b590      	push	{r4, r7, lr}
 80023a2:	b087      	sub	sp, #28
 80023a4:	af00      	add	r7, sp, #0
 80023a6:	6078      	str	r0, [r7, #4]
 80023a8:	2300      	movs	r3, #0
 80023aa:	75fb      	strb	r3, [r7, #23]
 80023ac:	e01a      	b.n	80023e4 <ucg_handle_st7735_l90se+0x44>
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	f103 0146 	add.w	r1, r3, #70	; 0x46
 80023b4:	7dfa      	ldrb	r2, [r7, #23]
 80023b6:	4613      	mov	r3, r2
 80023b8:	00db      	lsls	r3, r3, #3
 80023ba:	1a9b      	subs	r3, r3, r2
 80023bc:	005b      	lsls	r3, r3, #1
 80023be:	18c8      	adds	r0, r1, r3
 80023c0:	7dfb      	ldrb	r3, [r7, #23]
 80023c2:	687a      	ldr	r2, [r7, #4]
 80023c4:	4413      	add	r3, r2
 80023c6:	f893 103a 	ldrb.w	r1, [r3, #58]	; 0x3a
 80023ca:	7dfb      	ldrb	r3, [r7, #23]
 80023cc:	687a      	ldr	r2, [r7, #4]
 80023ce:	4413      	add	r3, r2
 80023d0:	f893 203d 	ldrb.w	r2, [r3, #61]	; 0x3d
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 80023da:	f7ff fe40 	bl	800205e <ucg_ccs_init>
 80023de:	7dfb      	ldrb	r3, [r7, #23]
 80023e0:	3301      	adds	r3, #1
 80023e2:	75fb      	strb	r3, [r7, #23]
 80023e4:	7dfb      	ldrb	r3, [r7, #23]
 80023e6:	2b02      	cmp	r3, #2
 80023e8:	d9e1      	bls.n	80023ae <ucg_handle_st7735_l90se+0xe>
 80023ea:	6878      	ldr	r0, [r7, #4]
 80023ec:	f001 fbc2 	bl	8003b74 <ucg_clip_l90se>
 80023f0:	4603      	mov	r3, r0
 80023f2:	2b00      	cmp	r3, #0
 80023f4:	d071      	beq.n	80024da <ucg_handle_st7735_l90se+0x13a>
 80023f6:	687b      	ldr	r3, [r7, #4]
 80023f8:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 80023fc:	2b01      	cmp	r3, #1
 80023fe:	d008      	beq.n	8002412 <ucg_handle_st7735_l90se+0x72>
 8002400:	2b02      	cmp	r3, #2
 8002402:	d00b      	beq.n	800241c <ucg_handle_st7735_l90se+0x7c>
 8002404:	2b00      	cmp	r3, #0
 8002406:	d11b      	bne.n	8002440 <ucg_handle_st7735_l90se+0xa0>
 8002408:	4936      	ldr	r1, [pc, #216]	; (80024e4 <ucg_handle_st7735_l90se+0x144>)
 800240a:	6878      	ldr	r0, [r7, #4]
 800240c:	f001 fd60 	bl	8003ed0 <ucg_com_SendCmdSeq>
 8002410:	e028      	b.n	8002464 <ucg_handle_st7735_l90se+0xc4>
 8002412:	4935      	ldr	r1, [pc, #212]	; (80024e8 <ucg_handle_st7735_l90se+0x148>)
 8002414:	6878      	ldr	r0, [r7, #4]
 8002416:	f001 fd5b 	bl	8003ed0 <ucg_com_SendCmdSeq>
 800241a:	e023      	b.n	8002464 <ucg_handle_st7735_l90se+0xc4>
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002420:	827b      	strh	r3, [r7, #18]
 8002422:	8a7b      	ldrh	r3, [r7, #18]
 8002424:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 8002428:	b29b      	uxth	r3, r3
 800242a:	b21a      	sxth	r2, r3
 800242c:	687b      	ldr	r3, [r7, #4]
 800242e:	849a      	strh	r2, [r3, #36]	; 0x24
 8002430:	492e      	ldr	r1, [pc, #184]	; (80024ec <ucg_handle_st7735_l90se+0x14c>)
 8002432:	6878      	ldr	r0, [r7, #4]
 8002434:	f001 fd4c 	bl	8003ed0 <ucg_com_SendCmdSeq>
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	8a7a      	ldrh	r2, [r7, #18]
 800243c:	849a      	strh	r2, [r3, #36]	; 0x24
 800243e:	e011      	b.n	8002464 <ucg_handle_st7735_l90se+0xc4>
 8002440:	687b      	ldr	r3, [r7, #4]
 8002442:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002444:	827b      	strh	r3, [r7, #18]
 8002446:	8a7b      	ldrh	r3, [r7, #18]
 8002448:	f1c3 037f 	rsb	r3, r3, #127	; 0x7f
 800244c:	b29b      	uxth	r3, r3
 800244e:	b21a      	sxth	r2, r3
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	84da      	strh	r2, [r3, #38]	; 0x26
 8002454:	4926      	ldr	r1, [pc, #152]	; (80024f0 <ucg_handle_st7735_l90se+0x150>)
 8002456:	6878      	ldr	r0, [r7, #4]
 8002458:	f001 fd3a 	bl	8003ed0 <ucg_com_SendCmdSeq>
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	8a7a      	ldrh	r2, [r7, #18]
 8002460:	84da      	strh	r2, [r3, #38]	; 0x26
 8002462:	bf00      	nop
 8002464:	2300      	movs	r3, #0
 8002466:	82bb      	strh	r3, [r7, #20]
 8002468:	e02a      	b.n	80024c0 <ucg_handle_st7735_l90se+0x120>
 800246a:	687b      	ldr	r3, [r7, #4]
 800246c:	f893 3046 	ldrb.w	r3, [r3, #70]	; 0x46
 8002470:	733b      	strb	r3, [r7, #12]
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8002478:	737b      	strb	r3, [r7, #13]
 800247a:	687b      	ldr	r3, [r7, #4]
 800247c:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 8002480:	73bb      	strb	r3, [r7, #14]
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	69dc      	ldr	r4, [r3, #28]
 8002486:	f107 030c 	add.w	r3, r7, #12
 800248a:	2201      	movs	r2, #1
 800248c:	2113      	movs	r1, #19
 800248e:	6878      	ldr	r0, [r7, #4]
 8002490:	47a0      	blx	r4
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	3346      	adds	r3, #70	; 0x46
 8002496:	4618      	mov	r0, r3
 8002498:	f7ff fe41 	bl	800211e <ucg_ccs_step>
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	3346      	adds	r3, #70	; 0x46
 80024a0:	330e      	adds	r3, #14
 80024a2:	4618      	mov	r0, r3
 80024a4:	f7ff fe3b 	bl	800211e <ucg_ccs_step>
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	3346      	adds	r3, #70	; 0x46
 80024ac:	331c      	adds	r3, #28
 80024ae:	4618      	mov	r0, r3
 80024b0:	f7ff fe35 	bl	800211e <ucg_ccs_step>
 80024b4:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 80024b8:	b29b      	uxth	r3, r3
 80024ba:	3301      	adds	r3, #1
 80024bc:	b29b      	uxth	r3, r3
 80024be:	82bb      	strh	r3, [r7, #20]
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 80024c6:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 80024ca:	429a      	cmp	r2, r3
 80024cc:	dbcd      	blt.n	800246a <ucg_handle_st7735_l90se+0xca>
 80024ce:	2101      	movs	r1, #1
 80024d0:	6878      	ldr	r0, [r7, #4]
 80024d2:	f001 fc49 	bl	8003d68 <ucg_com_SetCSLineStatus>
 80024d6:	2301      	movs	r3, #1
 80024d8:	e000      	b.n	80024dc <ucg_handle_st7735_l90se+0x13c>
 80024da:	2300      	movs	r3, #0
 80024dc:	4618      	mov	r0, r3
 80024de:	371c      	adds	r7, #28
 80024e0:	46bd      	mov	sp, r7
 80024e2:	bd90      	pop	{r4, r7, pc}
 80024e4:	08004b14 	.word	0x08004b14
 80024e8:	08004b34 	.word	0x08004b34
 80024ec:	08004b58 	.word	0x08004b58
 80024f0:	08004b7c 	.word	0x08004b7c

080024f4 <ucg_dev_ic_st7735_18>:
 80024f4:	b590      	push	{r4, r7, lr}
 80024f6:	b087      	sub	sp, #28
 80024f8:	af00      	add	r7, sp, #0
 80024fa:	60f8      	str	r0, [r7, #12]
 80024fc:	460b      	mov	r3, r1
 80024fe:	607a      	str	r2, [r7, #4]
 8002500:	817b      	strh	r3, [r7, #10]
 8002502:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002506:	3b0a      	subs	r3, #10
 8002508:	2b0b      	cmp	r3, #11
 800250a:	d85f      	bhi.n	80025cc <ucg_dev_ic_st7735_18+0xd8>
 800250c:	a201      	add	r2, pc, #4	; (adr r2, 8002514 <ucg_dev_ic_st7735_18+0x20>)
 800250e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002512:	bf00      	nop
 8002514:	08002545 	.word	0x08002545
 8002518:	0800255f 	.word	0x0800255f
 800251c:	080025cd 	.word	0x080025cd
 8002520:	080025cd 	.word	0x080025cd
 8002524:	080025cd 	.word	0x080025cd
 8002528:	0800256b 	.word	0x0800256b
 800252c:	080025cd 	.word	0x080025cd
 8002530:	080025cd 	.word	0x080025cd
 8002534:	080025cd 	.word	0x080025cd
 8002538:	080025cd 	.word	0x080025cd
 800253c:	0800257b 	.word	0x0800257b
 8002540:	080025c3 	.word	0x080025c3
 8002544:	68fb      	ldr	r3, [r7, #12]
 8002546:	2202      	movs	r2, #2
 8002548:	841a      	strh	r2, [r3, #32]
 800254a:	68fb      	ldr	r3, [r7, #12]
 800254c:	2201      	movs	r2, #1
 800254e:	845a      	strh	r2, [r3, #34]	; 0x22
 8002550:	2242      	movs	r2, #66	; 0x42
 8002552:	2164      	movs	r1, #100	; 0x64
 8002554:	68f8      	ldr	r0, [r7, #12]
 8002556:	f001 fb56 	bl	8003c06 <ucg_com_PowerUp>
 800255a:	4603      	mov	r3, r0
 800255c:	e03e      	b.n	80025dc <ucg_dev_ic_st7735_18+0xe8>
 800255e:	4921      	ldr	r1, [pc, #132]	; (80025e4 <ucg_dev_ic_st7735_18+0xf0>)
 8002560:	68f8      	ldr	r0, [r7, #12]
 8002562:	f001 fcb5 	bl	8003ed0 <ucg_com_SendCmdSeq>
 8002566:	2301      	movs	r3, #1
 8002568:	e038      	b.n	80025dc <ucg_dev_ic_st7735_18+0xe8>
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	2280      	movs	r2, #128	; 0x80
 800256e:	801a      	strh	r2, [r3, #0]
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	2280      	movs	r2, #128	; 0x80
 8002574:	805a      	strh	r2, [r3, #2]
 8002576:	2301      	movs	r3, #1
 8002578:	e030      	b.n	80025dc <ucg_dev_ic_st7735_18+0xe8>
 800257a:	68f8      	ldr	r0, [r7, #12]
 800257c:	f001 f960 	bl	8003840 <ucg_clip_is_pixel_visible>
 8002580:	4603      	mov	r3, r0
 8002582:	2b00      	cmp	r3, #0
 8002584:	d01b      	beq.n	80025be <ucg_dev_ic_st7735_18+0xca>
 8002586:	4918      	ldr	r1, [pc, #96]	; (80025e8 <ucg_dev_ic_st7735_18+0xf4>)
 8002588:	68f8      	ldr	r0, [r7, #12]
 800258a:	f001 fca1 	bl	8003ed0 <ucg_com_SendCmdSeq>
 800258e:	68fb      	ldr	r3, [r7, #12]
 8002590:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8002594:	753b      	strb	r3, [r7, #20]
 8002596:	68fb      	ldr	r3, [r7, #12]
 8002598:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800259c:	757b      	strb	r3, [r7, #21]
 800259e:	68fb      	ldr	r3, [r7, #12]
 80025a0:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 80025a4:	75bb      	strb	r3, [r7, #22]
 80025a6:	68fb      	ldr	r3, [r7, #12]
 80025a8:	69dc      	ldr	r4, [r3, #28]
 80025aa:	f107 0314 	add.w	r3, r7, #20
 80025ae:	2201      	movs	r2, #1
 80025b0:	2113      	movs	r1, #19
 80025b2:	68f8      	ldr	r0, [r7, #12]
 80025b4:	47a0      	blx	r4
 80025b6:	2101      	movs	r1, #1
 80025b8:	68f8      	ldr	r0, [r7, #12]
 80025ba:	f001 fbd5 	bl	8003d68 <ucg_com_SetCSLineStatus>
 80025be:	2301      	movs	r3, #1
 80025c0:	e00c      	b.n	80025dc <ucg_dev_ic_st7735_18+0xe8>
 80025c2:	68f8      	ldr	r0, [r7, #12]
 80025c4:	f7ff fe80 	bl	80022c8 <ucg_handle_st7735_l90fx>
 80025c8:	2301      	movs	r3, #1
 80025ca:	e007      	b.n	80025dc <ucg_dev_ic_st7735_18+0xe8>
 80025cc:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80025d0:	687a      	ldr	r2, [r7, #4]
 80025d2:	4619      	mov	r1, r3
 80025d4:	68f8      	ldr	r0, [r7, #12]
 80025d6:	f7ff fe47 	bl	8002268 <ucg_dev_default_cb>
 80025da:	4603      	mov	r3, r0
 80025dc:	4618      	mov	r0, r3
 80025de:	371c      	adds	r7, #28
 80025e0:	46bd      	mov	sp, r7
 80025e2:	bd90      	pop	{r4, r7, pc}
 80025e4:	08004ba0 	.word	0x08004ba0
 80025e8:	08004af4 	.word	0x08004af4

080025ec <ucg_ext_st7735_18>:
 80025ec:	b580      	push	{r7, lr}
 80025ee:	b084      	sub	sp, #16
 80025f0:	af00      	add	r7, sp, #0
 80025f2:	60f8      	str	r0, [r7, #12]
 80025f4:	460b      	mov	r3, r1
 80025f6:	607a      	str	r2, [r7, #4]
 80025f8:	817b      	strh	r3, [r7, #10]
 80025fa:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80025fe:	2b17      	cmp	r3, #23
 8002600:	d103      	bne.n	800260a <ucg_ext_st7735_18+0x1e>
 8002602:	68f8      	ldr	r0, [r7, #12]
 8002604:	f7ff fecc 	bl	80023a0 <ucg_handle_st7735_l90se>
 8002608:	bf00      	nop
 800260a:	2301      	movs	r3, #1
 800260c:	4618      	mov	r0, r3
 800260e:	3710      	adds	r7, #16
 8002610:	46bd      	mov	sp, r7
 8002612:	bd80      	pop	{r7, pc}

08002614 <ucg_PowerDown>:
 8002614:	b580      	push	{r7, lr}
 8002616:	b082      	sub	sp, #8
 8002618:	af00      	add	r7, sp, #0
 800261a:	6078      	str	r0, [r7, #4]
 800261c:	687b      	ldr	r3, [r7, #4]
 800261e:	781b      	ldrb	r3, [r3, #0]
 8002620:	f003 0301 	and.w	r3, r3, #1
 8002624:	b2db      	uxtb	r3, r3
 8002626:	2b00      	cmp	r3, #0
 8002628:	d00a      	beq.n	8002640 <ucg_PowerDown+0x2c>
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	689b      	ldr	r3, [r3, #8]
 800262e:	2200      	movs	r2, #0
 8002630:	210b      	movs	r1, #11
 8002632:	6878      	ldr	r0, [r7, #4]
 8002634:	4798      	blx	r3
 8002636:	687a      	ldr	r2, [r7, #4]
 8002638:	7813      	ldrb	r3, [r2, #0]
 800263a:	f36f 0300 	bfc	r3, #0, #1
 800263e:	7013      	strb	r3, [r2, #0]
 8002640:	bf00      	nop
 8002642:	3708      	adds	r7, #8
 8002644:	46bd      	mov	sp, r7
 8002646:	bd80      	pop	{r7, pc}

08002648 <ucg_PowerUp>:
 8002648:	b580      	push	{r7, lr}
 800264a:	b084      	sub	sp, #16
 800264c:	af00      	add	r7, sp, #0
 800264e:	6078      	str	r0, [r7, #4]
 8002650:	6878      	ldr	r0, [r7, #4]
 8002652:	f7ff ffdf 	bl	8002614 <ucg_PowerDown>
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	689b      	ldr	r3, [r3, #8]
 800265a:	2200      	movs	r2, #0
 800265c:	210a      	movs	r1, #10
 800265e:	6878      	ldr	r0, [r7, #4]
 8002660:	4798      	blx	r3
 8002662:	4603      	mov	r3, r0
 8002664:	81fb      	strh	r3, [r7, #14]
 8002666:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800266a:	2b00      	cmp	r3, #0
 800266c:	d004      	beq.n	8002678 <ucg_PowerUp+0x30>
 800266e:	687a      	ldr	r2, [r7, #4]
 8002670:	7813      	ldrb	r3, [r2, #0]
 8002672:	f043 0301 	orr.w	r3, r3, #1
 8002676:	7013      	strb	r3, [r2, #0]
 8002678:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800267c:	4618      	mov	r0, r3
 800267e:	3710      	adds	r7, #16
 8002680:	46bd      	mov	sp, r7
 8002682:	bd80      	pop	{r7, pc}

08002684 <ucg_SetClipBox>:
 8002684:	b580      	push	{r7, lr}
 8002686:	b082      	sub	sp, #8
 8002688:	af00      	add	r7, sp, #0
 800268a:	6078      	str	r0, [r7, #4]
 800268c:	6039      	str	r1, [r7, #0]
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	689b      	ldr	r3, [r3, #8]
 8002692:	683a      	ldr	r2, [r7, #0]
 8002694:	210c      	movs	r1, #12
 8002696:	6878      	ldr	r0, [r7, #4]
 8002698:	4798      	blx	r3
 800269a:	bf00      	nop
 800269c:	3708      	adds	r7, #8
 800269e:	46bd      	mov	sp, r7
 80026a0:	bd80      	pop	{r7, pc}

080026a2 <ucg_SetMaxClipRange>:
 80026a2:	b580      	push	{r7, lr}
 80026a4:	b084      	sub	sp, #16
 80026a6:	af00      	add	r7, sp, #0
 80026a8:	6078      	str	r0, [r7, #4]
 80026aa:	687a      	ldr	r2, [r7, #4]
 80026ac:	f107 030c 	add.w	r3, r7, #12
 80026b0:	3202      	adds	r2, #2
 80026b2:	6810      	ldr	r0, [r2, #0]
 80026b4:	6018      	str	r0, [r3, #0]
 80026b6:	2300      	movs	r3, #0
 80026b8:	813b      	strh	r3, [r7, #8]
 80026ba:	2300      	movs	r3, #0
 80026bc:	817b      	strh	r3, [r7, #10]
 80026be:	f107 0308 	add.w	r3, r7, #8
 80026c2:	4619      	mov	r1, r3
 80026c4:	6878      	ldr	r0, [r7, #4]
 80026c6:	f7ff ffdd 	bl	8002684 <ucg_SetClipBox>
 80026ca:	bf00      	nop
 80026cc:	3710      	adds	r7, #16
 80026ce:	46bd      	mov	sp, r7
 80026d0:	bd80      	pop	{r7, pc}

080026d2 <ucg_GetDimension>:
 80026d2:	b580      	push	{r7, lr}
 80026d4:	b082      	sub	sp, #8
 80026d6:	af00      	add	r7, sp, #0
 80026d8:	6078      	str	r0, [r7, #4]
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	689b      	ldr	r3, [r3, #8]
 80026de:	687a      	ldr	r2, [r7, #4]
 80026e0:	3202      	adds	r2, #2
 80026e2:	210f      	movs	r1, #15
 80026e4:	6878      	ldr	r0, [r7, #4]
 80026e6:	4798      	blx	r3
 80026e8:	6878      	ldr	r0, [r7, #4]
 80026ea:	f7ff ffda 	bl	80026a2 <ucg_SetMaxClipRange>
 80026ee:	bf00      	nop
 80026f0:	3708      	adds	r7, #8
 80026f2:	46bd      	mov	sp, r7
 80026f4:	bd80      	pop	{r7, pc}

080026f6 <ucg_DrawL90FXWithArg>:
 80026f6:	b580      	push	{r7, lr}
 80026f8:	b082      	sub	sp, #8
 80026fa:	af00      	add	r7, sp, #0
 80026fc:	6078      	str	r0, [r7, #4]
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	689b      	ldr	r3, [r3, #8]
 8002702:	687a      	ldr	r2, [r7, #4]
 8002704:	3224      	adds	r2, #36	; 0x24
 8002706:	2115      	movs	r1, #21
 8002708:	6878      	ldr	r0, [r7, #4]
 800270a:	4798      	blx	r3
 800270c:	bf00      	nop
 800270e:	3708      	adds	r7, #8
 8002710:	46bd      	mov	sp, r7
 8002712:	bd80      	pop	{r7, pc}

08002714 <ucg_dev_st7735_18x128x128>:
 8002714:	b580      	push	{r7, lr}
 8002716:	b084      	sub	sp, #16
 8002718:	af00      	add	r7, sp, #0
 800271a:	60f8      	str	r0, [r7, #12]
 800271c:	460b      	mov	r3, r1
 800271e:	607a      	str	r2, [r7, #4]
 8002720:	817b      	strh	r3, [r7, #10]
 8002722:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002726:	2b0b      	cmp	r3, #11
 8002728:	d015      	beq.n	8002756 <ucg_dev_st7735_18x128x128+0x42>
 800272a:	2b0f      	cmp	r3, #15
 800272c:	d01c      	beq.n	8002768 <ucg_dev_st7735_18x128x128+0x54>
 800272e:	2b0a      	cmp	r3, #10
 8002730:	d122      	bne.n	8002778 <ucg_dev_st7735_18x128x128+0x64>
 8002732:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002736:	687a      	ldr	r2, [r7, #4]
 8002738:	4619      	mov	r1, r3
 800273a:	68f8      	ldr	r0, [r7, #12]
 800273c:	f7ff feda 	bl	80024f4 <ucg_dev_ic_st7735_18>
 8002740:	4603      	mov	r3, r0
 8002742:	2b00      	cmp	r3, #0
 8002744:	d101      	bne.n	800274a <ucg_dev_st7735_18x128x128+0x36>
 8002746:	2300      	movs	r3, #0
 8002748:	e01e      	b.n	8002788 <ucg_dev_st7735_18x128x128+0x74>
 800274a:	4911      	ldr	r1, [pc, #68]	; (8002790 <ucg_dev_st7735_18x128x128+0x7c>)
 800274c:	68f8      	ldr	r0, [r7, #12]
 800274e:	f001 fbbf 	bl	8003ed0 <ucg_com_SendCmdSeq>
 8002752:	2301      	movs	r3, #1
 8002754:	e018      	b.n	8002788 <ucg_dev_st7735_18x128x128+0x74>
 8002756:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800275a:	687a      	ldr	r2, [r7, #4]
 800275c:	4619      	mov	r1, r3
 800275e:	68f8      	ldr	r0, [r7, #12]
 8002760:	f7ff fec8 	bl	80024f4 <ucg_dev_ic_st7735_18>
 8002764:	4603      	mov	r3, r0
 8002766:	e00f      	b.n	8002788 <ucg_dev_st7735_18x128x128+0x74>
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	2280      	movs	r2, #128	; 0x80
 800276c:	801a      	strh	r2, [r3, #0]
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	2280      	movs	r2, #128	; 0x80
 8002772:	805a      	strh	r2, [r3, #2]
 8002774:	2301      	movs	r3, #1
 8002776:	e007      	b.n	8002788 <ucg_dev_st7735_18x128x128+0x74>
 8002778:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800277c:	687a      	ldr	r2, [r7, #4]
 800277e:	4619      	mov	r1, r3
 8002780:	68f8      	ldr	r0, [r7, #12]
 8002782:	f7ff feb7 	bl	80024f4 <ucg_dev_ic_st7735_18>
 8002786:	4603      	mov	r3, r0
 8002788:	4618      	mov	r0, r3
 800278a:	3710      	adds	r7, #16
 800278c:	46bd      	mov	sp, r7
 800278e:	bd80      	pop	{r7, pc}
 8002790:	08004ba8 	.word	0x08004ba8

08002794 <ucg_font_get_byte>:
 8002794:	b480      	push	{r7}
 8002796:	b083      	sub	sp, #12
 8002798:	af00      	add	r7, sp, #0
 800279a:	6078      	str	r0, [r7, #4]
 800279c:	460b      	mov	r3, r1
 800279e:	70fb      	strb	r3, [r7, #3]
 80027a0:	78fb      	ldrb	r3, [r7, #3]
 80027a2:	687a      	ldr	r2, [r7, #4]
 80027a4:	4413      	add	r3, r2
 80027a6:	607b      	str	r3, [r7, #4]
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	781b      	ldrb	r3, [r3, #0]
 80027ac:	4618      	mov	r0, r3
 80027ae:	370c      	adds	r7, #12
 80027b0:	46bd      	mov	sp, r7
 80027b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027b6:	4770      	bx	lr

080027b8 <ucg_font_get_word>:
 80027b8:	b480      	push	{r7}
 80027ba:	b085      	sub	sp, #20
 80027bc:	af00      	add	r7, sp, #0
 80027be:	6078      	str	r0, [r7, #4]
 80027c0:	460b      	mov	r3, r1
 80027c2:	70fb      	strb	r3, [r7, #3]
 80027c4:	78fb      	ldrb	r3, [r7, #3]
 80027c6:	687a      	ldr	r2, [r7, #4]
 80027c8:	4413      	add	r3, r2
 80027ca:	607b      	str	r3, [r7, #4]
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	781b      	ldrb	r3, [r3, #0]
 80027d0:	81fb      	strh	r3, [r7, #14]
 80027d2:	687b      	ldr	r3, [r7, #4]
 80027d4:	3301      	adds	r3, #1
 80027d6:	607b      	str	r3, [r7, #4]
 80027d8:	89fb      	ldrh	r3, [r7, #14]
 80027da:	021b      	lsls	r3, r3, #8
 80027dc:	81fb      	strh	r3, [r7, #14]
 80027de:	687b      	ldr	r3, [r7, #4]
 80027e0:	781b      	ldrb	r3, [r3, #0]
 80027e2:	b29a      	uxth	r2, r3
 80027e4:	89fb      	ldrh	r3, [r7, #14]
 80027e6:	4413      	add	r3, r2
 80027e8:	81fb      	strh	r3, [r7, #14]
 80027ea:	89fb      	ldrh	r3, [r7, #14]
 80027ec:	4618      	mov	r0, r3
 80027ee:	3714      	adds	r7, #20
 80027f0:	46bd      	mov	sp, r7
 80027f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027f6:	4770      	bx	lr

080027f8 <ucg_read_font_info>:
 80027f8:	b580      	push	{r7, lr}
 80027fa:	b082      	sub	sp, #8
 80027fc:	af00      	add	r7, sp, #0
 80027fe:	6078      	str	r0, [r7, #4]
 8002800:	6039      	str	r1, [r7, #0]
 8002802:	2100      	movs	r1, #0
 8002804:	6838      	ldr	r0, [r7, #0]
 8002806:	f7ff ffc5 	bl	8002794 <ucg_font_get_byte>
 800280a:	4603      	mov	r3, r0
 800280c:	461a      	mov	r2, r3
 800280e:	687b      	ldr	r3, [r7, #4]
 8002810:	701a      	strb	r2, [r3, #0]
 8002812:	2101      	movs	r1, #1
 8002814:	6838      	ldr	r0, [r7, #0]
 8002816:	f7ff ffbd 	bl	8002794 <ucg_font_get_byte>
 800281a:	4603      	mov	r3, r0
 800281c:	461a      	mov	r2, r3
 800281e:	687b      	ldr	r3, [r7, #4]
 8002820:	705a      	strb	r2, [r3, #1]
 8002822:	2102      	movs	r1, #2
 8002824:	6838      	ldr	r0, [r7, #0]
 8002826:	f7ff ffb5 	bl	8002794 <ucg_font_get_byte>
 800282a:	4603      	mov	r3, r0
 800282c:	461a      	mov	r2, r3
 800282e:	687b      	ldr	r3, [r7, #4]
 8002830:	709a      	strb	r2, [r3, #2]
 8002832:	2103      	movs	r1, #3
 8002834:	6838      	ldr	r0, [r7, #0]
 8002836:	f7ff ffad 	bl	8002794 <ucg_font_get_byte>
 800283a:	4603      	mov	r3, r0
 800283c:	461a      	mov	r2, r3
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	70da      	strb	r2, [r3, #3]
 8002842:	2104      	movs	r1, #4
 8002844:	6838      	ldr	r0, [r7, #0]
 8002846:	f7ff ffa5 	bl	8002794 <ucg_font_get_byte>
 800284a:	4603      	mov	r3, r0
 800284c:	461a      	mov	r2, r3
 800284e:	687b      	ldr	r3, [r7, #4]
 8002850:	711a      	strb	r2, [r3, #4]
 8002852:	2105      	movs	r1, #5
 8002854:	6838      	ldr	r0, [r7, #0]
 8002856:	f7ff ff9d 	bl	8002794 <ucg_font_get_byte>
 800285a:	4603      	mov	r3, r0
 800285c:	461a      	mov	r2, r3
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	715a      	strb	r2, [r3, #5]
 8002862:	2106      	movs	r1, #6
 8002864:	6838      	ldr	r0, [r7, #0]
 8002866:	f7ff ff95 	bl	8002794 <ucg_font_get_byte>
 800286a:	4603      	mov	r3, r0
 800286c:	461a      	mov	r2, r3
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	719a      	strb	r2, [r3, #6]
 8002872:	2107      	movs	r1, #7
 8002874:	6838      	ldr	r0, [r7, #0]
 8002876:	f7ff ff8d 	bl	8002794 <ucg_font_get_byte>
 800287a:	4603      	mov	r3, r0
 800287c:	461a      	mov	r2, r3
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	71da      	strb	r2, [r3, #7]
 8002882:	2108      	movs	r1, #8
 8002884:	6838      	ldr	r0, [r7, #0]
 8002886:	f7ff ff85 	bl	8002794 <ucg_font_get_byte>
 800288a:	4603      	mov	r3, r0
 800288c:	461a      	mov	r2, r3
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	721a      	strb	r2, [r3, #8]
 8002892:	2109      	movs	r1, #9
 8002894:	6838      	ldr	r0, [r7, #0]
 8002896:	f7ff ff7d 	bl	8002794 <ucg_font_get_byte>
 800289a:	4603      	mov	r3, r0
 800289c:	b25a      	sxtb	r2, r3
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	725a      	strb	r2, [r3, #9]
 80028a2:	210a      	movs	r1, #10
 80028a4:	6838      	ldr	r0, [r7, #0]
 80028a6:	f7ff ff75 	bl	8002794 <ucg_font_get_byte>
 80028aa:	4603      	mov	r3, r0
 80028ac:	b25a      	sxtb	r2, r3
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	729a      	strb	r2, [r3, #10]
 80028b2:	210b      	movs	r1, #11
 80028b4:	6838      	ldr	r0, [r7, #0]
 80028b6:	f7ff ff6d 	bl	8002794 <ucg_font_get_byte>
 80028ba:	4603      	mov	r3, r0
 80028bc:	b25a      	sxtb	r2, r3
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	72da      	strb	r2, [r3, #11]
 80028c2:	210c      	movs	r1, #12
 80028c4:	6838      	ldr	r0, [r7, #0]
 80028c6:	f7ff ff65 	bl	8002794 <ucg_font_get_byte>
 80028ca:	4603      	mov	r3, r0
 80028cc:	b25a      	sxtb	r2, r3
 80028ce:	687b      	ldr	r3, [r7, #4]
 80028d0:	731a      	strb	r2, [r3, #12]
 80028d2:	210d      	movs	r1, #13
 80028d4:	6838      	ldr	r0, [r7, #0]
 80028d6:	f7ff ff5d 	bl	8002794 <ucg_font_get_byte>
 80028da:	4603      	mov	r3, r0
 80028dc:	b25a      	sxtb	r2, r3
 80028de:	687b      	ldr	r3, [r7, #4]
 80028e0:	735a      	strb	r2, [r3, #13]
 80028e2:	210e      	movs	r1, #14
 80028e4:	6838      	ldr	r0, [r7, #0]
 80028e6:	f7ff ff55 	bl	8002794 <ucg_font_get_byte>
 80028ea:	4603      	mov	r3, r0
 80028ec:	b25a      	sxtb	r2, r3
 80028ee:	687b      	ldr	r3, [r7, #4]
 80028f0:	739a      	strb	r2, [r3, #14]
 80028f2:	210f      	movs	r1, #15
 80028f4:	6838      	ldr	r0, [r7, #0]
 80028f6:	f7ff ff4d 	bl	8002794 <ucg_font_get_byte>
 80028fa:	4603      	mov	r3, r0
 80028fc:	b25a      	sxtb	r2, r3
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	73da      	strb	r2, [r3, #15]
 8002902:	2110      	movs	r1, #16
 8002904:	6838      	ldr	r0, [r7, #0]
 8002906:	f7ff ff45 	bl	8002794 <ucg_font_get_byte>
 800290a:	4603      	mov	r3, r0
 800290c:	b25a      	sxtb	r2, r3
 800290e:	687b      	ldr	r3, [r7, #4]
 8002910:	741a      	strb	r2, [r3, #16]
 8002912:	2111      	movs	r1, #17
 8002914:	6838      	ldr	r0, [r7, #0]
 8002916:	f7ff ff4f 	bl	80027b8 <ucg_font_get_word>
 800291a:	4603      	mov	r3, r0
 800291c:	461a      	mov	r2, r3
 800291e:	687b      	ldr	r3, [r7, #4]
 8002920:	825a      	strh	r2, [r3, #18]
 8002922:	2113      	movs	r1, #19
 8002924:	6838      	ldr	r0, [r7, #0]
 8002926:	f7ff ff47 	bl	80027b8 <ucg_font_get_word>
 800292a:	4603      	mov	r3, r0
 800292c:	461a      	mov	r2, r3
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	829a      	strh	r2, [r3, #20]
 8002932:	bf00      	nop
 8002934:	3708      	adds	r7, #8
 8002936:	46bd      	mov	sp, r7
 8002938:	bd80      	pop	{r7, pc}

0800293a <ucg_font_decode_get_unsigned_bits>:
 800293a:	b480      	push	{r7}
 800293c:	b085      	sub	sp, #20
 800293e:	af00      	add	r7, sp, #0
 8002940:	6078      	str	r0, [r7, #4]
 8002942:	460b      	mov	r3, r1
 8002944:	70fb      	strb	r3, [r7, #3]
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	7b1b      	ldrb	r3, [r3, #12]
 800294a:	737b      	strb	r3, [r7, #13]
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	681b      	ldr	r3, [r3, #0]
 8002950:	781b      	ldrb	r3, [r3, #0]
 8002952:	73fb      	strb	r3, [r7, #15]
 8002954:	7bfa      	ldrb	r2, [r7, #15]
 8002956:	7b7b      	ldrb	r3, [r7, #13]
 8002958:	fa42 f303 	asr.w	r3, r2, r3
 800295c:	73fb      	strb	r3, [r7, #15]
 800295e:	7b7b      	ldrb	r3, [r7, #13]
 8002960:	73bb      	strb	r3, [r7, #14]
 8002962:	7bba      	ldrb	r2, [r7, #14]
 8002964:	78fb      	ldrb	r3, [r7, #3]
 8002966:	4413      	add	r3, r2
 8002968:	73bb      	strb	r3, [r7, #14]
 800296a:	7bbb      	ldrb	r3, [r7, #14]
 800296c:	2b07      	cmp	r3, #7
 800296e:	d91a      	bls.n	80029a6 <ucg_font_decode_get_unsigned_bits+0x6c>
 8002970:	2308      	movs	r3, #8
 8002972:	733b      	strb	r3, [r7, #12]
 8002974:	7b3a      	ldrb	r2, [r7, #12]
 8002976:	7b7b      	ldrb	r3, [r7, #13]
 8002978:	1ad3      	subs	r3, r2, r3
 800297a:	733b      	strb	r3, [r7, #12]
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	1c5a      	adds	r2, r3, #1
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	601a      	str	r2, [r3, #0]
 8002986:	687b      	ldr	r3, [r7, #4]
 8002988:	681b      	ldr	r3, [r3, #0]
 800298a:	781b      	ldrb	r3, [r3, #0]
 800298c:	461a      	mov	r2, r3
 800298e:	7b3b      	ldrb	r3, [r7, #12]
 8002990:	fa02 f303 	lsl.w	r3, r2, r3
 8002994:	b25a      	sxtb	r2, r3
 8002996:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800299a:	4313      	orrs	r3, r2
 800299c:	b25b      	sxtb	r3, r3
 800299e:	73fb      	strb	r3, [r7, #15]
 80029a0:	7bbb      	ldrb	r3, [r7, #14]
 80029a2:	3b08      	subs	r3, #8
 80029a4:	73bb      	strb	r3, [r7, #14]
 80029a6:	78fb      	ldrb	r3, [r7, #3]
 80029a8:	f04f 32ff 	mov.w	r2, #4294967295
 80029ac:	fa02 f303 	lsl.w	r3, r2, r3
 80029b0:	b2db      	uxtb	r3, r3
 80029b2:	43db      	mvns	r3, r3
 80029b4:	b2da      	uxtb	r2, r3
 80029b6:	7bfb      	ldrb	r3, [r7, #15]
 80029b8:	4013      	ands	r3, r2
 80029ba:	73fb      	strb	r3, [r7, #15]
 80029bc:	687b      	ldr	r3, [r7, #4]
 80029be:	7bba      	ldrb	r2, [r7, #14]
 80029c0:	731a      	strb	r2, [r3, #12]
 80029c2:	7bfb      	ldrb	r3, [r7, #15]
 80029c4:	4618      	mov	r0, r3
 80029c6:	3714      	adds	r7, #20
 80029c8:	46bd      	mov	sp, r7
 80029ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ce:	4770      	bx	lr

080029d0 <ucg_font_decode_get_signed_bits>:
 80029d0:	b580      	push	{r7, lr}
 80029d2:	b084      	sub	sp, #16
 80029d4:	af00      	add	r7, sp, #0
 80029d6:	6078      	str	r0, [r7, #4]
 80029d8:	460b      	mov	r3, r1
 80029da:	70fb      	strb	r3, [r7, #3]
 80029dc:	78fb      	ldrb	r3, [r7, #3]
 80029de:	4619      	mov	r1, r3
 80029e0:	6878      	ldr	r0, [r7, #4]
 80029e2:	f7ff ffaa 	bl	800293a <ucg_font_decode_get_unsigned_bits>
 80029e6:	4603      	mov	r3, r0
 80029e8:	73fb      	strb	r3, [r7, #15]
 80029ea:	2301      	movs	r3, #1
 80029ec:	73bb      	strb	r3, [r7, #14]
 80029ee:	78fb      	ldrb	r3, [r7, #3]
 80029f0:	3b01      	subs	r3, #1
 80029f2:	70fb      	strb	r3, [r7, #3]
 80029f4:	f997 200e 	ldrsb.w	r2, [r7, #14]
 80029f8:	78fb      	ldrb	r3, [r7, #3]
 80029fa:	fa02 f303 	lsl.w	r3, r2, r3
 80029fe:	73bb      	strb	r3, [r7, #14]
 8002a00:	7bfa      	ldrb	r2, [r7, #15]
 8002a02:	7bbb      	ldrb	r3, [r7, #14]
 8002a04:	1ad3      	subs	r3, r2, r3
 8002a06:	b2db      	uxtb	r3, r3
 8002a08:	73fb      	strb	r3, [r7, #15]
 8002a0a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002a0e:	4618      	mov	r0, r3
 8002a10:	3710      	adds	r7, #16
 8002a12:	46bd      	mov	sp, r7
 8002a14:	bd80      	pop	{r7, pc}

08002a16 <ucg_add_vector_y>:
 8002a16:	b490      	push	{r4, r7}
 8002a18:	b082      	sub	sp, #8
 8002a1a:	af00      	add	r7, sp, #0
 8002a1c:	4604      	mov	r4, r0
 8002a1e:	4608      	mov	r0, r1
 8002a20:	4611      	mov	r1, r2
 8002a22:	461a      	mov	r2, r3
 8002a24:	4623      	mov	r3, r4
 8002a26:	80fb      	strh	r3, [r7, #6]
 8002a28:	4603      	mov	r3, r0
 8002a2a:	717b      	strb	r3, [r7, #5]
 8002a2c:	460b      	mov	r3, r1
 8002a2e:	713b      	strb	r3, [r7, #4]
 8002a30:	4613      	mov	r3, r2
 8002a32:	70fb      	strb	r3, [r7, #3]
 8002a34:	78fb      	ldrb	r3, [r7, #3]
 8002a36:	2b01      	cmp	r3, #1
 8002a38:	d00b      	beq.n	8002a52 <ucg_add_vector_y+0x3c>
 8002a3a:	2b02      	cmp	r3, #2
 8002a3c:	d011      	beq.n	8002a62 <ucg_add_vector_y+0x4c>
 8002a3e:	2b00      	cmp	r3, #0
 8002a40:	d117      	bne.n	8002a72 <ucg_add_vector_y+0x5c>
 8002a42:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8002a46:	b29a      	uxth	r2, r3
 8002a48:	88fb      	ldrh	r3, [r7, #6]
 8002a4a:	4413      	add	r3, r2
 8002a4c:	b29b      	uxth	r3, r3
 8002a4e:	80fb      	strh	r3, [r7, #6]
 8002a50:	e017      	b.n	8002a82 <ucg_add_vector_y+0x6c>
 8002a52:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002a56:	b29a      	uxth	r2, r3
 8002a58:	88fb      	ldrh	r3, [r7, #6]
 8002a5a:	4413      	add	r3, r2
 8002a5c:	b29b      	uxth	r3, r3
 8002a5e:	80fb      	strh	r3, [r7, #6]
 8002a60:	e00f      	b.n	8002a82 <ucg_add_vector_y+0x6c>
 8002a62:	88fa      	ldrh	r2, [r7, #6]
 8002a64:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8002a68:	b29b      	uxth	r3, r3
 8002a6a:	1ad3      	subs	r3, r2, r3
 8002a6c:	b29b      	uxth	r3, r3
 8002a6e:	80fb      	strh	r3, [r7, #6]
 8002a70:	e007      	b.n	8002a82 <ucg_add_vector_y+0x6c>
 8002a72:	88fa      	ldrh	r2, [r7, #6]
 8002a74:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002a78:	b29b      	uxth	r3, r3
 8002a7a:	1ad3      	subs	r3, r2, r3
 8002a7c:	b29b      	uxth	r3, r3
 8002a7e:	80fb      	strh	r3, [r7, #6]
 8002a80:	bf00      	nop
 8002a82:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002a86:	4618      	mov	r0, r3
 8002a88:	3708      	adds	r7, #8
 8002a8a:	46bd      	mov	sp, r7
 8002a8c:	bc90      	pop	{r4, r7}
 8002a8e:	4770      	bx	lr

08002a90 <ucg_add_vector_x>:
 8002a90:	b490      	push	{r4, r7}
 8002a92:	b082      	sub	sp, #8
 8002a94:	af00      	add	r7, sp, #0
 8002a96:	4604      	mov	r4, r0
 8002a98:	4608      	mov	r0, r1
 8002a9a:	4611      	mov	r1, r2
 8002a9c:	461a      	mov	r2, r3
 8002a9e:	4623      	mov	r3, r4
 8002aa0:	80fb      	strh	r3, [r7, #6]
 8002aa2:	4603      	mov	r3, r0
 8002aa4:	717b      	strb	r3, [r7, #5]
 8002aa6:	460b      	mov	r3, r1
 8002aa8:	713b      	strb	r3, [r7, #4]
 8002aaa:	4613      	mov	r3, r2
 8002aac:	70fb      	strb	r3, [r7, #3]
 8002aae:	78fb      	ldrb	r3, [r7, #3]
 8002ab0:	2b01      	cmp	r3, #1
 8002ab2:	d00b      	beq.n	8002acc <ucg_add_vector_x+0x3c>
 8002ab4:	2b02      	cmp	r3, #2
 8002ab6:	d011      	beq.n	8002adc <ucg_add_vector_x+0x4c>
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	d117      	bne.n	8002aec <ucg_add_vector_x+0x5c>
 8002abc:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002ac0:	b29a      	uxth	r2, r3
 8002ac2:	88fb      	ldrh	r3, [r7, #6]
 8002ac4:	4413      	add	r3, r2
 8002ac6:	b29b      	uxth	r3, r3
 8002ac8:	80fb      	strh	r3, [r7, #6]
 8002aca:	e017      	b.n	8002afc <ucg_add_vector_x+0x6c>
 8002acc:	88fa      	ldrh	r2, [r7, #6]
 8002ace:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8002ad2:	b29b      	uxth	r3, r3
 8002ad4:	1ad3      	subs	r3, r2, r3
 8002ad6:	b29b      	uxth	r3, r3
 8002ad8:	80fb      	strh	r3, [r7, #6]
 8002ada:	e00f      	b.n	8002afc <ucg_add_vector_x+0x6c>
 8002adc:	88fa      	ldrh	r2, [r7, #6]
 8002ade:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8002ae2:	b29b      	uxth	r3, r3
 8002ae4:	1ad3      	subs	r3, r2, r3
 8002ae6:	b29b      	uxth	r3, r3
 8002ae8:	80fb      	strh	r3, [r7, #6]
 8002aea:	e007      	b.n	8002afc <ucg_add_vector_x+0x6c>
 8002aec:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8002af0:	b29a      	uxth	r2, r3
 8002af2:	88fb      	ldrh	r3, [r7, #6]
 8002af4:	4413      	add	r3, r2
 8002af6:	b29b      	uxth	r3, r3
 8002af8:	80fb      	strh	r3, [r7, #6]
 8002afa:	bf00      	nop
 8002afc:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002b00:	4618      	mov	r0, r3
 8002b02:	3708      	adds	r7, #8
 8002b04:	46bd      	mov	sp, r7
 8002b06:	bc90      	pop	{r4, r7}
 8002b08:	4770      	bx	lr

08002b0a <ucg_font_decode_len>:
 8002b0a:	b590      	push	{r4, r7, lr}
 8002b0c:	b089      	sub	sp, #36	; 0x24
 8002b0e:	af02      	add	r7, sp, #8
 8002b10:	6078      	str	r0, [r7, #4]
 8002b12:	460b      	mov	r3, r1
 8002b14:	70fb      	strb	r3, [r7, #3]
 8002b16:	4613      	mov	r3, r2
 8002b18:	70bb      	strb	r3, [r7, #2]
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	3380      	adds	r3, #128	; 0x80
 8002b1e:	613b      	str	r3, [r7, #16]
 8002b20:	78fb      	ldrb	r3, [r7, #3]
 8002b22:	75fb      	strb	r3, [r7, #23]
 8002b24:	693b      	ldr	r3, [r7, #16]
 8002b26:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8002b2a:	757b      	strb	r3, [r7, #21]
 8002b2c:	693b      	ldr	r3, [r7, #16]
 8002b2e:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8002b32:	753b      	strb	r3, [r7, #20]
 8002b34:	693b      	ldr	r3, [r7, #16]
 8002b36:	f993 300a 	ldrsb.w	r3, [r3, #10]
 8002b3a:	73fb      	strb	r3, [r7, #15]
 8002b3c:	7bfa      	ldrb	r2, [r7, #15]
 8002b3e:	7d7b      	ldrb	r3, [r7, #21]
 8002b40:	1ad3      	subs	r3, r2, r3
 8002b42:	73fb      	strb	r3, [r7, #15]
 8002b44:	7bfb      	ldrb	r3, [r7, #15]
 8002b46:	75bb      	strb	r3, [r7, #22]
 8002b48:	7dfa      	ldrb	r2, [r7, #23]
 8002b4a:	7bfb      	ldrb	r3, [r7, #15]
 8002b4c:	429a      	cmp	r2, r3
 8002b4e:	d201      	bcs.n	8002b54 <ucg_font_decode_len+0x4a>
 8002b50:	7dfb      	ldrb	r3, [r7, #23]
 8002b52:	75bb      	strb	r3, [r7, #22]
 8002b54:	693b      	ldr	r3, [r7, #16]
 8002b56:	889b      	ldrh	r3, [r3, #4]
 8002b58:	81bb      	strh	r3, [r7, #12]
 8002b5a:	693b      	ldr	r3, [r7, #16]
 8002b5c:	88db      	ldrh	r3, [r3, #6]
 8002b5e:	817b      	strh	r3, [r7, #10]
 8002b60:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8002b64:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8002b68:	693b      	ldr	r3, [r7, #16]
 8002b6a:	7b9b      	ldrb	r3, [r3, #14]
 8002b6c:	f9b7 000c 	ldrsh.w	r0, [r7, #12]
 8002b70:	f7ff ff8e 	bl	8002a90 <ucg_add_vector_x>
 8002b74:	4603      	mov	r3, r0
 8002b76:	81bb      	strh	r3, [r7, #12]
 8002b78:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8002b7c:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8002b80:	693b      	ldr	r3, [r7, #16]
 8002b82:	7b9b      	ldrb	r3, [r3, #14]
 8002b84:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8002b88:	f7ff ff45 	bl	8002a16 <ucg_add_vector_y>
 8002b8c:	4603      	mov	r3, r0
 8002b8e:	817b      	strh	r3, [r7, #10]
 8002b90:	78bb      	ldrb	r3, [r7, #2]
 8002b92:	2b00      	cmp	r3, #0
 8002b94:	d011      	beq.n	8002bba <ucg_font_decode_len+0xb0>
 8002b96:	7dbb      	ldrb	r3, [r7, #22]
 8002b98:	b21c      	sxth	r4, r3
 8002b9a:	693b      	ldr	r3, [r7, #16]
 8002b9c:	7b9b      	ldrb	r3, [r3, #14]
 8002b9e:	b21b      	sxth	r3, r3
 8002ba0:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8002ba4:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8002ba8:	2200      	movs	r2, #0
 8002baa:	9201      	str	r2, [sp, #4]
 8002bac:	9300      	str	r3, [sp, #0]
 8002bae:	4623      	mov	r3, r4
 8002bb0:	4602      	mov	r2, r0
 8002bb2:	6878      	ldr	r0, [r7, #4]
 8002bb4:	f000 fbc0 	bl	8003338 <ucg_Draw90Line>
 8002bb8:	e014      	b.n	8002be4 <ucg_font_decode_len+0xda>
 8002bba:	693b      	ldr	r3, [r7, #16]
 8002bbc:	7b5b      	ldrb	r3, [r3, #13]
 8002bbe:	2b00      	cmp	r3, #0
 8002bc0:	d110      	bne.n	8002be4 <ucg_font_decode_len+0xda>
 8002bc2:	7dbb      	ldrb	r3, [r7, #22]
 8002bc4:	b21c      	sxth	r4, r3
 8002bc6:	693b      	ldr	r3, [r7, #16]
 8002bc8:	7b9b      	ldrb	r3, [r3, #14]
 8002bca:	b21b      	sxth	r3, r3
 8002bcc:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8002bd0:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8002bd4:	2201      	movs	r2, #1
 8002bd6:	9201      	str	r2, [sp, #4]
 8002bd8:	9300      	str	r3, [sp, #0]
 8002bda:	4623      	mov	r3, r4
 8002bdc:	4602      	mov	r2, r0
 8002bde:	6878      	ldr	r0, [r7, #4]
 8002be0:	f000 fbaa 	bl	8003338 <ucg_Draw90Line>
 8002be4:	7dfa      	ldrb	r2, [r7, #23]
 8002be6:	7bfb      	ldrb	r3, [r7, #15]
 8002be8:	429a      	cmp	r2, r3
 8002bea:	d309      	bcc.n	8002c00 <ucg_font_decode_len+0xf6>
 8002bec:	7dfa      	ldrb	r2, [r7, #23]
 8002bee:	7bfb      	ldrb	r3, [r7, #15]
 8002bf0:	1ad3      	subs	r3, r2, r3
 8002bf2:	75fb      	strb	r3, [r7, #23]
 8002bf4:	2300      	movs	r3, #0
 8002bf6:	757b      	strb	r3, [r7, #21]
 8002bf8:	7d3b      	ldrb	r3, [r7, #20]
 8002bfa:	3301      	adds	r3, #1
 8002bfc:	753b      	strb	r3, [r7, #20]
 8002bfe:	e799      	b.n	8002b34 <ucg_font_decode_len+0x2a>
 8002c00:	bf00      	nop
 8002c02:	7d7a      	ldrb	r2, [r7, #21]
 8002c04:	7dfb      	ldrb	r3, [r7, #23]
 8002c06:	4413      	add	r3, r2
 8002c08:	757b      	strb	r3, [r7, #21]
 8002c0a:	f997 2015 	ldrsb.w	r2, [r7, #21]
 8002c0e:	693b      	ldr	r3, [r7, #16]
 8002c10:	721a      	strb	r2, [r3, #8]
 8002c12:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8002c16:	693b      	ldr	r3, [r7, #16]
 8002c18:	725a      	strb	r2, [r3, #9]
 8002c1a:	bf00      	nop
 8002c1c:	371c      	adds	r7, #28
 8002c1e:	46bd      	mov	sp, r7
 8002c20:	bd90      	pop	{r4, r7, pc}

08002c22 <ucg_font_setup_decode>:
 8002c22:	b580      	push	{r7, lr}
 8002c24:	b084      	sub	sp, #16
 8002c26:	af00      	add	r7, sp, #0
 8002c28:	6078      	str	r0, [r7, #4]
 8002c2a:	6039      	str	r1, [r7, #0]
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	3380      	adds	r3, #128	; 0x80
 8002c30:	60fb      	str	r3, [r7, #12]
 8002c32:	68fb      	ldr	r3, [r7, #12]
 8002c34:	683a      	ldr	r2, [r7, #0]
 8002c36:	601a      	str	r2, [r3, #0]
 8002c38:	68fb      	ldr	r3, [r7, #12]
 8002c3a:	2200      	movs	r2, #0
 8002c3c:	731a      	strb	r2, [r3, #12]
 8002c3e:	68fb      	ldr	r3, [r7, #12]
 8002c40:	681b      	ldr	r3, [r3, #0]
 8002c42:	1c5a      	adds	r2, r3, #1
 8002c44:	68fb      	ldr	r3, [r7, #12]
 8002c46:	601a      	str	r2, [r3, #0]
 8002c48:	68fb      	ldr	r3, [r7, #12]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	1c5a      	adds	r2, r3, #1
 8002c4e:	68fb      	ldr	r3, [r7, #12]
 8002c50:	601a      	str	r2, [r3, #0]
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 8002c58:	4619      	mov	r1, r3
 8002c5a:	68f8      	ldr	r0, [r7, #12]
 8002c5c:	f7ff fe6d 	bl	800293a <ucg_font_decode_get_unsigned_bits>
 8002c60:	4603      	mov	r3, r0
 8002c62:	b25a      	sxtb	r2, r3
 8002c64:	68fb      	ldr	r3, [r7, #12]
 8002c66:	729a      	strb	r2, [r3, #10]
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	f893 3095 	ldrb.w	r3, [r3, #149]	; 0x95
 8002c6e:	4619      	mov	r1, r3
 8002c70:	68f8      	ldr	r0, [r7, #12]
 8002c72:	f7ff fe62 	bl	800293a <ucg_font_decode_get_unsigned_bits>
 8002c76:	4603      	mov	r3, r0
 8002c78:	b25a      	sxtb	r2, r3
 8002c7a:	68fb      	ldr	r3, [r7, #12]
 8002c7c:	72da      	strb	r2, [r3, #11]
 8002c7e:	bf00      	nop
 8002c80:	3710      	adds	r7, #16
 8002c82:	46bd      	mov	sp, r7
 8002c84:	bd80      	pop	{r7, pc}

08002c86 <ucg_font_decode_glyph>:
 8002c86:	b580      	push	{r7, lr}
 8002c88:	b084      	sub	sp, #16
 8002c8a:	af00      	add	r7, sp, #0
 8002c8c:	6078      	str	r0, [r7, #4]
 8002c8e:	6039      	str	r1, [r7, #0]
 8002c90:	6839      	ldr	r1, [r7, #0]
 8002c92:	6878      	ldr	r0, [r7, #4]
 8002c94:	f7ff ffc5 	bl	8002c22 <ucg_font_setup_decode>
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	f893 308b 	ldrb.w	r3, [r3, #139]	; 0x8b
 8002c9e:	73fb      	strb	r3, [r7, #15]
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	f893 3096 	ldrb.w	r3, [r3, #150]	; 0x96
 8002cac:	4619      	mov	r1, r3
 8002cae:	4610      	mov	r0, r2
 8002cb0:	f7ff fe8e 	bl	80029d0 <ucg_font_decode_get_signed_bits>
 8002cb4:	4603      	mov	r3, r0
 8002cb6:	73bb      	strb	r3, [r7, #14]
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002cbe:	687b      	ldr	r3, [r7, #4]
 8002cc0:	f893 3097 	ldrb.w	r3, [r3, #151]	; 0x97
 8002cc4:	4619      	mov	r1, r3
 8002cc6:	4610      	mov	r0, r2
 8002cc8:	f7ff fe82 	bl	80029d0 <ucg_font_decode_get_signed_bits>
 8002ccc:	4603      	mov	r3, r0
 8002cce:	737b      	strb	r3, [r7, #13]
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002cd6:	687b      	ldr	r3, [r7, #4]
 8002cd8:	f893 3098 	ldrb.w	r3, [r3, #152]	; 0x98
 8002cdc:	4619      	mov	r1, r3
 8002cde:	4610      	mov	r0, r2
 8002ce0:	f7ff fe76 	bl	80029d0 <ucg_font_decode_get_signed_bits>
 8002ce4:	4603      	mov	r3, r0
 8002ce6:	733b      	strb	r3, [r7, #12]
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	f993 308a 	ldrsb.w	r3, [r3, #138]	; 0x8a
 8002cee:	2b00      	cmp	r3, #0
 8002cf0:	dd69      	ble.n	8002dc6 <ucg_font_decode_glyph+0x140>
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	f9b3 0084 	ldrsh.w	r0, [r3, #132]	; 0x84
 8002cf8:	7bfa      	ldrb	r2, [r7, #15]
 8002cfa:	7b7b      	ldrb	r3, [r7, #13]
 8002cfc:	4413      	add	r3, r2
 8002cfe:	b2db      	uxtb	r3, r3
 8002d00:	425b      	negs	r3, r3
 8002d02:	b2db      	uxtb	r3, r3
 8002d04:	b25a      	sxtb	r2, r3
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 8002d0c:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8002d10:	f7ff febe 	bl	8002a90 <ucg_add_vector_x>
 8002d14:	4603      	mov	r3, r0
 8002d16:	461a      	mov	r2, r3
 8002d18:	687b      	ldr	r3, [r7, #4]
 8002d1a:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	f9b3 0086 	ldrsh.w	r0, [r3, #134]	; 0x86
 8002d24:	7bfa      	ldrb	r2, [r7, #15]
 8002d26:	7b7b      	ldrb	r3, [r7, #13]
 8002d28:	4413      	add	r3, r2
 8002d2a:	b2db      	uxtb	r3, r3
 8002d2c:	425b      	negs	r3, r3
 8002d2e:	b2db      	uxtb	r3, r3
 8002d30:	b25a      	sxtb	r2, r3
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	f893 308e 	ldrb.w	r3, [r3, #142]	; 0x8e
 8002d38:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8002d3c:	f7ff fe6b 	bl	8002a16 <ucg_add_vector_y>
 8002d40:	4603      	mov	r3, r0
 8002d42:	461a      	mov	r2, r3
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	2200      	movs	r2, #0
 8002d4e:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	2200      	movs	r2, #0
 8002d56:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	f893 3092 	ldrb.w	r3, [r3, #146]	; 0x92
 8002d66:	4619      	mov	r1, r3
 8002d68:	4610      	mov	r0, r2
 8002d6a:	f7ff fde6 	bl	800293a <ucg_font_decode_get_unsigned_bits>
 8002d6e:	4603      	mov	r3, r0
 8002d70:	72fb      	strb	r3, [r7, #11]
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	f103 0280 	add.w	r2, r3, #128	; 0x80
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 8002d7e:	4619      	mov	r1, r3
 8002d80:	4610      	mov	r0, r2
 8002d82:	f7ff fdda 	bl	800293a <ucg_font_decode_get_unsigned_bits>
 8002d86:	4603      	mov	r3, r0
 8002d88:	72bb      	strb	r3, [r7, #10]
 8002d8a:	7afb      	ldrb	r3, [r7, #11]
 8002d8c:	2200      	movs	r2, #0
 8002d8e:	4619      	mov	r1, r3
 8002d90:	6878      	ldr	r0, [r7, #4]
 8002d92:	f7ff feba 	bl	8002b0a <ucg_font_decode_len>
 8002d96:	7abb      	ldrb	r3, [r7, #10]
 8002d98:	2201      	movs	r2, #1
 8002d9a:	4619      	mov	r1, r3
 8002d9c:	6878      	ldr	r0, [r7, #4]
 8002d9e:	f7ff feb4 	bl	8002b0a <ucg_font_decode_len>
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	3380      	adds	r3, #128	; 0x80
 8002da6:	2101      	movs	r1, #1
 8002da8:	4618      	mov	r0, r3
 8002daa:	f7ff fdc6 	bl	800293a <ucg_font_decode_get_unsigned_bits>
 8002dae:	4603      	mov	r3, r0
 8002db0:	2b00      	cmp	r3, #0
 8002db2:	d1ea      	bne.n	8002d8a <ucg_font_decode_glyph+0x104>
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	f993 3089 	ldrsb.w	r3, [r3, #137]	; 0x89
 8002dba:	f997 200f 	ldrsb.w	r2, [r7, #15]
 8002dbe:	429a      	cmp	r2, r3
 8002dc0:	dd00      	ble.n	8002dc4 <ucg_font_decode_glyph+0x13e>
 8002dc2:	e7ca      	b.n	8002d5a <ucg_font_decode_glyph+0xd4>
 8002dc4:	bf00      	nop
 8002dc6:	f997 300c 	ldrsb.w	r3, [r7, #12]
 8002dca:	4618      	mov	r0, r3
 8002dcc:	3710      	adds	r7, #16
 8002dce:	46bd      	mov	sp, r7
 8002dd0:	bd80      	pop	{r7, pc}

08002dd2 <ucg_font_get_glyph_data>:
 8002dd2:	b480      	push	{r7}
 8002dd4:	b085      	sub	sp, #20
 8002dd6:	af00      	add	r7, sp, #0
 8002dd8:	6078      	str	r0, [r7, #4]
 8002dda:	460b      	mov	r3, r1
 8002ddc:	70fb      	strb	r3, [r7, #3]
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002de2:	60fb      	str	r3, [r7, #12]
 8002de4:	68fb      	ldr	r3, [r7, #12]
 8002de6:	3315      	adds	r3, #21
 8002de8:	60fb      	str	r3, [r7, #12]
 8002dea:	78fb      	ldrb	r3, [r7, #3]
 8002dec:	2b60      	cmp	r3, #96	; 0x60
 8002dee:	d907      	bls.n	8002e00 <ucg_font_get_glyph_data+0x2e>
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	f8b3 30a4 	ldrh.w	r3, [r3, #164]	; 0xa4
 8002df6:	461a      	mov	r2, r3
 8002df8:	68fb      	ldr	r3, [r7, #12]
 8002dfa:	4413      	add	r3, r2
 8002dfc:	60fb      	str	r3, [r7, #12]
 8002dfe:	e009      	b.n	8002e14 <ucg_font_get_glyph_data+0x42>
 8002e00:	78fb      	ldrb	r3, [r7, #3]
 8002e02:	2b40      	cmp	r3, #64	; 0x40
 8002e04:	d906      	bls.n	8002e14 <ucg_font_get_glyph_data+0x42>
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	f8b3 30a2 	ldrh.w	r3, [r3, #162]	; 0xa2
 8002e0c:	461a      	mov	r2, r3
 8002e0e:	68fb      	ldr	r3, [r7, #12]
 8002e10:	4413      	add	r3, r2
 8002e12:	60fb      	str	r3, [r7, #12]
 8002e14:	68fb      	ldr	r3, [r7, #12]
 8002e16:	3301      	adds	r3, #1
 8002e18:	781b      	ldrb	r3, [r3, #0]
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d00e      	beq.n	8002e3c <ucg_font_get_glyph_data+0x6a>
 8002e1e:	68fb      	ldr	r3, [r7, #12]
 8002e20:	781b      	ldrb	r3, [r3, #0]
 8002e22:	78fa      	ldrb	r2, [r7, #3]
 8002e24:	429a      	cmp	r2, r3
 8002e26:	d101      	bne.n	8002e2c <ucg_font_get_glyph_data+0x5a>
 8002e28:	68fb      	ldr	r3, [r7, #12]
 8002e2a:	e009      	b.n	8002e40 <ucg_font_get_glyph_data+0x6e>
 8002e2c:	68fb      	ldr	r3, [r7, #12]
 8002e2e:	3301      	adds	r3, #1
 8002e30:	781b      	ldrb	r3, [r3, #0]
 8002e32:	461a      	mov	r2, r3
 8002e34:	68fb      	ldr	r3, [r7, #12]
 8002e36:	4413      	add	r3, r2
 8002e38:	60fb      	str	r3, [r7, #12]
 8002e3a:	e7eb      	b.n	8002e14 <ucg_font_get_glyph_data+0x42>
 8002e3c:	bf00      	nop
 8002e3e:	2300      	movs	r3, #0
 8002e40:	4618      	mov	r0, r3
 8002e42:	3714      	adds	r7, #20
 8002e44:	46bd      	mov	sp, r7
 8002e46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e4a:	4770      	bx	lr

08002e4c <ucg_font_draw_glyph>:
 8002e4c:	b580      	push	{r7, lr}
 8002e4e:	b086      	sub	sp, #24
 8002e50:	af00      	add	r7, sp, #0
 8002e52:	60f8      	str	r0, [r7, #12]
 8002e54:	4608      	mov	r0, r1
 8002e56:	4611      	mov	r1, r2
 8002e58:	461a      	mov	r2, r3
 8002e5a:	4603      	mov	r3, r0
 8002e5c:	817b      	strh	r3, [r7, #10]
 8002e5e:	460b      	mov	r3, r1
 8002e60:	813b      	strh	r3, [r7, #8]
 8002e62:	4613      	mov	r3, r2
 8002e64:	71fb      	strb	r3, [r7, #7]
 8002e66:	2300      	movs	r3, #0
 8002e68:	82fb      	strh	r3, [r7, #22]
 8002e6a:	68fb      	ldr	r3, [r7, #12]
 8002e6c:	897a      	ldrh	r2, [r7, #10]
 8002e6e:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 8002e72:	68fb      	ldr	r3, [r7, #12]
 8002e74:	893a      	ldrh	r2, [r7, #8]
 8002e76:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 8002e7a:	68fb      	ldr	r3, [r7, #12]
 8002e7c:	79fa      	ldrb	r2, [r7, #7]
 8002e7e:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 8002e82:	f897 3020 	ldrb.w	r3, [r7, #32]
 8002e86:	4619      	mov	r1, r3
 8002e88:	68f8      	ldr	r0, [r7, #12]
 8002e8a:	f7ff ffa2 	bl	8002dd2 <ucg_font_get_glyph_data>
 8002e8e:	6138      	str	r0, [r7, #16]
 8002e90:	693b      	ldr	r3, [r7, #16]
 8002e92:	2b00      	cmp	r3, #0
 8002e94:	d005      	beq.n	8002ea2 <ucg_font_draw_glyph+0x56>
 8002e96:	6939      	ldr	r1, [r7, #16]
 8002e98:	68f8      	ldr	r0, [r7, #12]
 8002e9a:	f7ff fef4 	bl	8002c86 <ucg_font_decode_glyph>
 8002e9e:	4603      	mov	r3, r0
 8002ea0:	82fb      	strh	r3, [r7, #22]
 8002ea2:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8002ea6:	4618      	mov	r0, r3
 8002ea8:	3718      	adds	r7, #24
 8002eaa:	46bd      	mov	sp, r7
 8002eac:	bd80      	pop	{r7, pc}

08002eae <ucg_SetFontMode>:
 8002eae:	b480      	push	{r7}
 8002eb0:	b083      	sub	sp, #12
 8002eb2:	af00      	add	r7, sp, #0
 8002eb4:	6078      	str	r0, [r7, #4]
 8002eb6:	460b      	mov	r3, r1
 8002eb8:	70fb      	strb	r3, [r7, #3]
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	78fa      	ldrb	r2, [r7, #3]
 8002ebe:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 8002ec2:	bf00      	nop
 8002ec4:	370c      	adds	r7, #12
 8002ec6:	46bd      	mov	sp, r7
 8002ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ecc:	4770      	bx	lr
	...

08002ed0 <ucg_DrawGlyph>:
 8002ed0:	b580      	push	{r7, lr}
 8002ed2:	b086      	sub	sp, #24
 8002ed4:	af02      	add	r7, sp, #8
 8002ed6:	60f8      	str	r0, [r7, #12]
 8002ed8:	4608      	mov	r0, r1
 8002eda:	4611      	mov	r1, r2
 8002edc:	461a      	mov	r2, r3
 8002ede:	4603      	mov	r3, r0
 8002ee0:	817b      	strh	r3, [r7, #10]
 8002ee2:	460b      	mov	r3, r1
 8002ee4:	813b      	strh	r3, [r7, #8]
 8002ee6:	4613      	mov	r3, r2
 8002ee8:	71fb      	strb	r3, [r7, #7]
 8002eea:	79fb      	ldrb	r3, [r7, #7]
 8002eec:	2b03      	cmp	r3, #3
 8002eee:	d837      	bhi.n	8002f60 <ucg_DrawGlyph+0x90>
 8002ef0:	a201      	add	r2, pc, #4	; (adr r2, 8002ef8 <ucg_DrawGlyph+0x28>)
 8002ef2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002ef6:	bf00      	nop
 8002ef8:	08002f09 	.word	0x08002f09
 8002efc:	08002f1f 	.word	0x08002f1f
 8002f00:	08002f35 	.word	0x08002f35
 8002f04:	08002f4b 	.word	0x08002f4b
 8002f08:	68fb      	ldr	r3, [r7, #12]
 8002f0a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002f0c:	68f8      	ldr	r0, [r7, #12]
 8002f0e:	4798      	blx	r3
 8002f10:	4603      	mov	r3, r0
 8002f12:	b29a      	uxth	r2, r3
 8002f14:	893b      	ldrh	r3, [r7, #8]
 8002f16:	4413      	add	r3, r2
 8002f18:	b29b      	uxth	r3, r3
 8002f1a:	813b      	strh	r3, [r7, #8]
 8002f1c:	e020      	b.n	8002f60 <ucg_DrawGlyph+0x90>
 8002f1e:	68fb      	ldr	r3, [r7, #12]
 8002f20:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002f22:	68f8      	ldr	r0, [r7, #12]
 8002f24:	4798      	blx	r3
 8002f26:	4603      	mov	r3, r0
 8002f28:	897a      	ldrh	r2, [r7, #10]
 8002f2a:	b29b      	uxth	r3, r3
 8002f2c:	1ad3      	subs	r3, r2, r3
 8002f2e:	b29b      	uxth	r3, r3
 8002f30:	817b      	strh	r3, [r7, #10]
 8002f32:	e015      	b.n	8002f60 <ucg_DrawGlyph+0x90>
 8002f34:	68fb      	ldr	r3, [r7, #12]
 8002f36:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002f38:	68f8      	ldr	r0, [r7, #12]
 8002f3a:	4798      	blx	r3
 8002f3c:	4603      	mov	r3, r0
 8002f3e:	893a      	ldrh	r2, [r7, #8]
 8002f40:	b29b      	uxth	r3, r3
 8002f42:	1ad3      	subs	r3, r2, r3
 8002f44:	b29b      	uxth	r3, r3
 8002f46:	813b      	strh	r3, [r7, #8]
 8002f48:	e00a      	b.n	8002f60 <ucg_DrawGlyph+0x90>
 8002f4a:	68fb      	ldr	r3, [r7, #12]
 8002f4c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002f4e:	68f8      	ldr	r0, [r7, #12]
 8002f50:	4798      	blx	r3
 8002f52:	4603      	mov	r3, r0
 8002f54:	b29a      	uxth	r2, r3
 8002f56:	897b      	ldrh	r3, [r7, #10]
 8002f58:	4413      	add	r3, r2
 8002f5a:	b29b      	uxth	r3, r3
 8002f5c:	817b      	strh	r3, [r7, #10]
 8002f5e:	bf00      	nop
 8002f60:	79f8      	ldrb	r0, [r7, #7]
 8002f62:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8002f66:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8002f6a:	7e3b      	ldrb	r3, [r7, #24]
 8002f6c:	9300      	str	r3, [sp, #0]
 8002f6e:	4603      	mov	r3, r0
 8002f70:	68f8      	ldr	r0, [r7, #12]
 8002f72:	f7ff ff6b 	bl	8002e4c <ucg_font_draw_glyph>
 8002f76:	4603      	mov	r3, r0
 8002f78:	4618      	mov	r0, r3
 8002f7a:	3710      	adds	r7, #16
 8002f7c:	46bd      	mov	sp, r7
 8002f7e:	bd80      	pop	{r7, pc}

08002f80 <task_drawString>:
 8002f80:	b580      	push	{r7, lr}
 8002f82:	b086      	sub	sp, #24
 8002f84:	af02      	add	r7, sp, #8
 8002f86:	6078      	str	r0, [r7, #4]
 8002f88:	2300      	movs	r3, #0
 8002f8a:	81fb      	strh	r3, [r7, #14]
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	60bb      	str	r3, [r7, #8]
 8002f90:	4b45      	ldr	r3, [pc, #276]	; (80030a8 <task_drawString+0x128>)
 8002f92:	781b      	ldrb	r3, [r3, #0]
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	d002      	beq.n	8002f9e <task_drawString+0x1e>
 8002f98:	2b01      	cmp	r3, #1
 8002f9a:	d01e      	beq.n	8002fda <task_drawString+0x5a>
 8002f9c:	e07b      	b.n	8003096 <task_drawString+0x116>
 8002f9e:	4843      	ldr	r0, [pc, #268]	; (80030ac <task_drawString+0x12c>)
 8002fa0:	f7fd f989 	bl	80002b6 <bufNumItems>
 8002fa4:	4603      	mov	r3, r0
 8002fa6:	2b00      	cmp	r3, #0
 8002fa8:	d007      	beq.n	8002fba <task_drawString+0x3a>
 8002faa:	4941      	ldr	r1, [pc, #260]	; (80030b0 <task_drawString+0x130>)
 8002fac:	483f      	ldr	r0, [pc, #252]	; (80030ac <task_drawString+0x12c>)
 8002fae:	f7fd fa1d 	bl	80003ec <bufDeDat>
 8002fb2:	4b3d      	ldr	r3, [pc, #244]	; (80030a8 <task_drawString+0x128>)
 8002fb4:	2201      	movs	r2, #1
 8002fb6:	701a      	strb	r2, [r3, #0]
 8002fb8:	e071      	b.n	800309e <task_drawString+0x11e>
 8002fba:	4b3e      	ldr	r3, [pc, #248]	; (80030b4 <task_drawString+0x134>)
 8002fbc:	781b      	ldrb	r3, [r3, #0]
 8002fbe:	2bff      	cmp	r3, #255	; 0xff
 8002fc0:	d007      	beq.n	8002fd2 <task_drawString+0x52>
 8002fc2:	4b3c      	ldr	r3, [pc, #240]	; (80030b4 <task_drawString+0x134>)
 8002fc4:	781b      	ldrb	r3, [r3, #0]
 8002fc6:	4618      	mov	r0, r3
 8002fc8:	f7fe fcb0 	bl	800192c <TimerStop>
 8002fcc:	4b39      	ldr	r3, [pc, #228]	; (80030b4 <task_drawString+0x134>)
 8002fce:	22ff      	movs	r2, #255	; 0xff
 8002fd0:	701a      	strb	r2, [r3, #0]
 8002fd2:	4b35      	ldr	r3, [pc, #212]	; (80030a8 <task_drawString+0x128>)
 8002fd4:	2200      	movs	r2, #0
 8002fd6:	701a      	strb	r2, [r3, #0]
 8002fd8:	e061      	b.n	800309e <task_drawString+0x11e>
 8002fda:	4b35      	ldr	r3, [pc, #212]	; (80030b0 <task_drawString+0x130>)
 8002fdc:	689b      	ldr	r3, [r3, #8]
 8002fde:	781b      	ldrb	r3, [r3, #0]
 8002fe0:	2b00      	cmp	r3, #0
 8002fe2:	d054      	beq.n	800308e <task_drawString+0x10e>
 8002fe4:	4b32      	ldr	r3, [pc, #200]	; (80030b0 <task_drawString+0x130>)
 8002fe6:	f9b3 1000 	ldrsh.w	r1, [r3]
 8002fea:	4b31      	ldr	r3, [pc, #196]	; (80030b0 <task_drawString+0x130>)
 8002fec:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8002ff0:	4b2f      	ldr	r3, [pc, #188]	; (80030b0 <task_drawString+0x130>)
 8002ff2:	7918      	ldrb	r0, [r3, #4]
 8002ff4:	4b2e      	ldr	r3, [pc, #184]	; (80030b0 <task_drawString+0x130>)
 8002ff6:	689b      	ldr	r3, [r3, #8]
 8002ff8:	781b      	ldrb	r3, [r3, #0]
 8002ffa:	9300      	str	r3, [sp, #0]
 8002ffc:	4603      	mov	r3, r0
 8002ffe:	68b8      	ldr	r0, [r7, #8]
 8003000:	f7ff ff66 	bl	8002ed0 <ucg_DrawGlyph>
 8003004:	4603      	mov	r3, r0
 8003006:	81fb      	strh	r3, [r7, #14]
 8003008:	4b29      	ldr	r3, [pc, #164]	; (80030b0 <task_drawString+0x130>)
 800300a:	791b      	ldrb	r3, [r3, #4]
 800300c:	2b03      	cmp	r3, #3
 800300e:	d837      	bhi.n	8003080 <task_drawString+0x100>
 8003010:	a201      	add	r2, pc, #4	; (adr r2, 8003018 <task_drawString+0x98>)
 8003012:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003016:	bf00      	nop
 8003018:	08003029 	.word	0x08003029
 800301c:	0800303f 	.word	0x0800303f
 8003020:	08003055 	.word	0x08003055
 8003024:	0800306b 	.word	0x0800306b
 8003028:	4b21      	ldr	r3, [pc, #132]	; (80030b0 <task_drawString+0x130>)
 800302a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800302e:	b29a      	uxth	r2, r3
 8003030:	89fb      	ldrh	r3, [r7, #14]
 8003032:	4413      	add	r3, r2
 8003034:	b29b      	uxth	r3, r3
 8003036:	b21a      	sxth	r2, r3
 8003038:	4b1d      	ldr	r3, [pc, #116]	; (80030b0 <task_drawString+0x130>)
 800303a:	801a      	strh	r2, [r3, #0]
 800303c:	e021      	b.n	8003082 <task_drawString+0x102>
 800303e:	4b1c      	ldr	r3, [pc, #112]	; (80030b0 <task_drawString+0x130>)
 8003040:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003044:	b29a      	uxth	r2, r3
 8003046:	89fb      	ldrh	r3, [r7, #14]
 8003048:	4413      	add	r3, r2
 800304a:	b29b      	uxth	r3, r3
 800304c:	b21a      	sxth	r2, r3
 800304e:	4b18      	ldr	r3, [pc, #96]	; (80030b0 <task_drawString+0x130>)
 8003050:	805a      	strh	r2, [r3, #2]
 8003052:	e016      	b.n	8003082 <task_drawString+0x102>
 8003054:	4b16      	ldr	r3, [pc, #88]	; (80030b0 <task_drawString+0x130>)
 8003056:	f9b3 3000 	ldrsh.w	r3, [r3]
 800305a:	b29a      	uxth	r2, r3
 800305c:	89fb      	ldrh	r3, [r7, #14]
 800305e:	1ad3      	subs	r3, r2, r3
 8003060:	b29b      	uxth	r3, r3
 8003062:	b21a      	sxth	r2, r3
 8003064:	4b12      	ldr	r3, [pc, #72]	; (80030b0 <task_drawString+0x130>)
 8003066:	801a      	strh	r2, [r3, #0]
 8003068:	e00b      	b.n	8003082 <task_drawString+0x102>
 800306a:	4b11      	ldr	r3, [pc, #68]	; (80030b0 <task_drawString+0x130>)
 800306c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003070:	b29a      	uxth	r2, r3
 8003072:	89fb      	ldrh	r3, [r7, #14]
 8003074:	1ad3      	subs	r3, r2, r3
 8003076:	b29b      	uxth	r3, r3
 8003078:	b21a      	sxth	r2, r3
 800307a:	4b0d      	ldr	r3, [pc, #52]	; (80030b0 <task_drawString+0x130>)
 800307c:	805a      	strh	r2, [r3, #2]
 800307e:	e000      	b.n	8003082 <task_drawString+0x102>
 8003080:	bf00      	nop
 8003082:	4b0b      	ldr	r3, [pc, #44]	; (80030b0 <task_drawString+0x130>)
 8003084:	689b      	ldr	r3, [r3, #8]
 8003086:	3301      	adds	r3, #1
 8003088:	4a09      	ldr	r2, [pc, #36]	; (80030b0 <task_drawString+0x130>)
 800308a:	6093      	str	r3, [r2, #8]
 800308c:	e007      	b.n	800309e <task_drawString+0x11e>
 800308e:	4b06      	ldr	r3, [pc, #24]	; (80030a8 <task_drawString+0x128>)
 8003090:	2200      	movs	r2, #0
 8003092:	701a      	strb	r2, [r3, #0]
 8003094:	e003      	b.n	800309e <task_drawString+0x11e>
 8003096:	4b04      	ldr	r3, [pc, #16]	; (80030a8 <task_drawString+0x128>)
 8003098:	2200      	movs	r2, #0
 800309a:	701a      	strb	r2, [r3, #0]
 800309c:	bf00      	nop
 800309e:	bf00      	nop
 80030a0:	3710      	adds	r7, #16
 80030a2:	46bd      	mov	sp, r7
 80030a4:	bd80      	pop	{r7, pc}
 80030a6:	bf00      	nop
 80030a8:	2000134c 	.word	0x2000134c
 80030ac:	2000033c 	.word	0x2000033c
 80030b0:	20001498 	.word	0x20001498
 80030b4:	20000024 	.word	0x20000024

080030b8 <ucg_DrawString>:
 80030b8:	b580      	push	{r7, lr}
 80030ba:	b08a      	sub	sp, #40	; 0x28
 80030bc:	af02      	add	r7, sp, #8
 80030be:	60f8      	str	r0, [r7, #12]
 80030c0:	4608      	mov	r0, r1
 80030c2:	4611      	mov	r1, r2
 80030c4:	461a      	mov	r2, r3
 80030c6:	4603      	mov	r3, r0
 80030c8:	817b      	strh	r3, [r7, #10]
 80030ca:	460b      	mov	r3, r1
 80030cc:	813b      	strh	r3, [r7, #8]
 80030ce:	4613      	mov	r3, r2
 80030d0:	71fb      	strb	r3, [r7, #7]
 80030d2:	2300      	movs	r3, #0
 80030d4:	83fb      	strh	r3, [r7, #30]
 80030d6:	897b      	ldrh	r3, [r7, #10]
 80030d8:	823b      	strh	r3, [r7, #16]
 80030da:	893b      	ldrh	r3, [r7, #8]
 80030dc:	827b      	strh	r3, [r7, #18]
 80030de:	79fb      	ldrb	r3, [r7, #7]
 80030e0:	753b      	strb	r3, [r7, #20]
 80030e2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80030e4:	61bb      	str	r3, [r7, #24]
 80030e6:	f107 0310 	add.w	r3, r7, #16
 80030ea:	4619      	mov	r1, r3
 80030ec:	480c      	ldr	r0, [pc, #48]	; (8003120 <ucg_DrawString+0x68>)
 80030ee:	f7fd f92d 	bl	800034c <bufEnDat>
 80030f2:	4b0c      	ldr	r3, [pc, #48]	; (8003124 <ucg_DrawString+0x6c>)
 80030f4:	781b      	ldrb	r3, [r3, #0]
 80030f6:	2bff      	cmp	r3, #255	; 0xff
 80030f8:	d10b      	bne.n	8003112 <ucg_DrawString+0x5a>
 80030fa:	68fb      	ldr	r3, [r7, #12]
 80030fc:	9300      	str	r3, [sp, #0]
 80030fe:	4b0a      	ldr	r3, [pc, #40]	; (8003128 <ucg_DrawString+0x70>)
 8003100:	22ff      	movs	r2, #255	; 0xff
 8003102:	211e      	movs	r1, #30
 8003104:	4809      	ldr	r0, [pc, #36]	; (800312c <ucg_DrawString+0x74>)
 8003106:	f7fe fbaf 	bl	8001868 <TimerStart>
 800310a:	4603      	mov	r3, r0
 800310c:	461a      	mov	r2, r3
 800310e:	4b05      	ldr	r3, [pc, #20]	; (8003124 <ucg_DrawString+0x6c>)
 8003110:	701a      	strb	r2, [r3, #0]
 8003112:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 8003116:	4618      	mov	r0, r3
 8003118:	3720      	adds	r7, #32
 800311a:	46bd      	mov	sp, r7
 800311c:	bd80      	pop	{r7, pc}
 800311e:	bf00      	nop
 8003120:	2000033c 	.word	0x2000033c
 8003124:	20000024 	.word	0x20000024
 8003128:	08002f81 	.word	0x08002f81
 800312c:	08004ae4 	.word	0x08004ae4

08003130 <ucg_UpdateRefHeight>:
 8003130:	b480      	push	{r7}
 8003132:	b083      	sub	sp, #12
 8003134:	af00      	add	r7, sp, #0
 8003136:	6078      	str	r0, [r7, #4]
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800313c:	2b00      	cmp	r3, #0
 800313e:	d05d      	beq.n	80031fc <ucg_UpdateRefHeight+0xcc>
 8003140:	687b      	ldr	r3, [r7, #4]
 8003142:	f993 209d 	ldrsb.w	r2, [r3, #157]	; 0x9d
 8003146:	687b      	ldr	r3, [r7, #4]
 8003148:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	f993 209e 	ldrsb.w	r2, [r3, #158]	; 0x9e
 8003152:	687b      	ldr	r3, [r7, #4]
 8003154:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 800315e:	2b00      	cmp	r3, #0
 8003160:	d04d      	beq.n	80031fe <ucg_UpdateRefHeight+0xce>
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	f893 30ab 	ldrb.w	r3, [r3, #171]	; 0xab
 8003168:	2b01      	cmp	r3, #1
 800316a:	d11c      	bne.n	80031a6 <ucg_UpdateRefHeight+0x76>
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	f993 20ac 	ldrsb.w	r2, [r3, #172]	; 0xac
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	f993 309f 	ldrsb.w	r3, [r3, #159]	; 0x9f
 8003178:	429a      	cmp	r2, r3
 800317a:	da05      	bge.n	8003188 <ucg_UpdateRefHeight+0x58>
 800317c:	687b      	ldr	r3, [r7, #4]
 800317e:	f993 209f 	ldrsb.w	r2, [r3, #159]	; 0x9f
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	f993 30a0 	ldrsb.w	r3, [r3, #160]	; 0xa0
 8003194:	429a      	cmp	r2, r3
 8003196:	dd32      	ble.n	80031fe <ucg_UpdateRefHeight+0xce>
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	f993 20a0 	ldrsb.w	r2, [r3, #160]	; 0xa0
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 80031a4:	e02b      	b.n	80031fe <ucg_UpdateRefHeight+0xce>
 80031a6:	687b      	ldr	r3, [r7, #4]
 80031a8:	f993 30ac 	ldrsb.w	r3, [r3, #172]	; 0xac
 80031ac:	461a      	mov	r2, r3
 80031ae:	687b      	ldr	r3, [r7, #4]
 80031b0:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 80031b4:	4619      	mov	r1, r3
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 80031bc:	440b      	add	r3, r1
 80031be:	429a      	cmp	r2, r3
 80031c0:	da0d      	bge.n	80031de <ucg_UpdateRefHeight+0xae>
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	f993 309a 	ldrsb.w	r3, [r3, #154]	; 0x9a
 80031c8:	b2da      	uxtb	r2, r3
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 80031d0:	b2db      	uxtb	r3, r3
 80031d2:	4413      	add	r3, r2
 80031d4:	b2db      	uxtb	r3, r3
 80031d6:	b25a      	sxtb	r2, r3
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	f993 20ad 	ldrsb.w	r2, [r3, #173]	; 0xad
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	f993 309c 	ldrsb.w	r3, [r3, #156]	; 0x9c
 80031ea:	429a      	cmp	r2, r3
 80031ec:	dd07      	ble.n	80031fe <ucg_UpdateRefHeight+0xce>
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	f993 209c 	ldrsb.w	r2, [r3, #156]	; 0x9c
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 80031fa:	e000      	b.n	80031fe <ucg_UpdateRefHeight+0xce>
 80031fc:	bf00      	nop
 80031fe:	370c      	adds	r7, #12
 8003200:	46bd      	mov	sp, r7
 8003202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003206:	4770      	bx	lr

08003208 <ucg_font_calc_vref_font>:
 8003208:	b480      	push	{r7}
 800320a:	b083      	sub	sp, #12
 800320c:	af00      	add	r7, sp, #0
 800320e:	6078      	str	r0, [r7, #4]
 8003210:	2300      	movs	r3, #0
 8003212:	4618      	mov	r0, r3
 8003214:	370c      	adds	r7, #12
 8003216:	46bd      	mov	sp, r7
 8003218:	f85d 7b04 	ldr.w	r7, [sp], #4
 800321c:	4770      	bx	lr
	...

08003220 <ucg_SetFontPosBaseline>:
 8003220:	b480      	push	{r7}
 8003222:	b083      	sub	sp, #12
 8003224:	af00      	add	r7, sp, #0
 8003226:	6078      	str	r0, [r7, #4]
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	4a04      	ldr	r2, [pc, #16]	; (800323c <ucg_SetFontPosBaseline+0x1c>)
 800322c:	67da      	str	r2, [r3, #124]	; 0x7c
 800322e:	bf00      	nop
 8003230:	370c      	adds	r7, #12
 8003232:	46bd      	mov	sp, r7
 8003234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003238:	4770      	bx	lr
 800323a:	bf00      	nop
 800323c:	08003209 	.word	0x08003209

08003240 <ucg_SetFont>:
 8003240:	b580      	push	{r7, lr}
 8003242:	b082      	sub	sp, #8
 8003244:	af00      	add	r7, sp, #0
 8003246:	6078      	str	r0, [r7, #4]
 8003248:	6039      	str	r1, [r7, #0]
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800324e:	683a      	ldr	r2, [r7, #0]
 8003250:	429a      	cmp	r2, r3
 8003252:	d012      	beq.n	800327a <ucg_SetFont+0x3a>
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	683a      	ldr	r2, [r7, #0]
 8003258:	679a      	str	r2, [r3, #120]	; 0x78
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	3390      	adds	r3, #144	; 0x90
 800325e:	6839      	ldr	r1, [r7, #0]
 8003260:	4618      	mov	r0, r3
 8003262:	f7ff fac9 	bl	80027f8 <ucg_read_font_info>
 8003266:	6878      	ldr	r0, [r7, #4]
 8003268:	f7ff ff62 	bl	8003130 <ucg_UpdateRefHeight>
 800326c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003270:	220c      	movs	r2, #12
 8003272:	4904      	ldr	r1, [pc, #16]	; (8003284 <ucg_SetFont+0x44>)
 8003274:	4804      	ldr	r0, [pc, #16]	; (8003288 <ucg_SetFont+0x48>)
 8003276:	f7fd f803 	bl	8000280 <bufInit>
 800327a:	bf00      	nop
 800327c:	3708      	adds	r7, #8
 800327e:	46bd      	mov	sp, r7
 8003280:	bd80      	pop	{r7, pc}
 8003282:	bf00      	nop
 8003284:	2000033c 	.word	0x2000033c
 8003288:	2000034c 	.word	0x2000034c

0800328c <ucg_init_struct>:
 800328c:	b480      	push	{r7}
 800328e:	b083      	sub	sp, #12
 8003290:	af00      	add	r7, sp, #0
 8003292:	6078      	str	r0, [r7, #4]
 8003294:	687a      	ldr	r2, [r7, #4]
 8003296:	7813      	ldrb	r3, [r2, #0]
 8003298:	f36f 0300 	bfc	r3, #0, #1
 800329c:	7013      	strb	r3, [r2, #0]
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	2200      	movs	r2, #0
 80032a2:	611a      	str	r2, [r3, #16]
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	2201      	movs	r2, #1
 80032a8:	865a      	strh	r2, [r3, #50]	; 0x32
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	2200      	movs	r2, #0
 80032ae:	679a      	str	r2, [r3, #120]	; 0x78
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	2201      	movs	r2, #1
 80032b4:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	2200      	movs	r2, #0
 80032bc:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 80032c0:	687b      	ldr	r3, [r7, #4]
 80032c2:	2200      	movs	r2, #0
 80032c4:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 80032c8:	687b      	ldr	r3, [r7, #4]
 80032ca:	2200      	movs	r2, #0
 80032cc:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 80032d0:	bf00      	nop
 80032d2:	370c      	adds	r7, #12
 80032d4:	46bd      	mov	sp, r7
 80032d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032da:	4770      	bx	lr

080032dc <ucg_Init>:
 80032dc:	b580      	push	{r7, lr}
 80032de:	b086      	sub	sp, #24
 80032e0:	af00      	add	r7, sp, #0
 80032e2:	60f8      	str	r0, [r7, #12]
 80032e4:	60b9      	str	r1, [r7, #8]
 80032e6:	607a      	str	r2, [r7, #4]
 80032e8:	603b      	str	r3, [r7, #0]
 80032ea:	68f8      	ldr	r0, [r7, #12]
 80032ec:	f7ff ffce 	bl	800328c <ucg_init_struct>
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	2b00      	cmp	r3, #0
 80032f4:	d103      	bne.n	80032fe <ucg_Init+0x22>
 80032f6:	68fb      	ldr	r3, [r7, #12]
 80032f8:	4a0e      	ldr	r2, [pc, #56]	; (8003334 <ucg_Init+0x58>)
 80032fa:	60da      	str	r2, [r3, #12]
 80032fc:	e002      	b.n	8003304 <ucg_Init+0x28>
 80032fe:	68fb      	ldr	r3, [r7, #12]
 8003300:	687a      	ldr	r2, [r7, #4]
 8003302:	60da      	str	r2, [r3, #12]
 8003304:	68fb      	ldr	r3, [r7, #12]
 8003306:	68ba      	ldr	r2, [r7, #8]
 8003308:	609a      	str	r2, [r3, #8]
 800330a:	68fb      	ldr	r3, [r7, #12]
 800330c:	683a      	ldr	r2, [r7, #0]
 800330e:	61da      	str	r2, [r3, #28]
 8003310:	68f8      	ldr	r0, [r7, #12]
 8003312:	f7ff ff85 	bl	8003220 <ucg_SetFontPosBaseline>
 8003316:	68f8      	ldr	r0, [r7, #12]
 8003318:	f7ff f996 	bl	8002648 <ucg_PowerUp>
 800331c:	4603      	mov	r3, r0
 800331e:	82fb      	strh	r3, [r7, #22]
 8003320:	68f8      	ldr	r0, [r7, #12]
 8003322:	f7ff f9d6 	bl	80026d2 <ucg_GetDimension>
 8003326:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800332a:	4618      	mov	r0, r3
 800332c:	3718      	adds	r7, #24
 800332e:	46bd      	mov	sp, r7
 8003330:	bd80      	pop	{r7, pc}
 8003332:	bf00      	nop
 8003334:	080022ad 	.word	0x080022ad

08003338 <ucg_Draw90Line>:
 8003338:	b580      	push	{r7, lr}
 800333a:	b084      	sub	sp, #16
 800333c:	af00      	add	r7, sp, #0
 800333e:	60f8      	str	r0, [r7, #12]
 8003340:	4608      	mov	r0, r1
 8003342:	4611      	mov	r1, r2
 8003344:	461a      	mov	r2, r3
 8003346:	4603      	mov	r3, r0
 8003348:	817b      	strh	r3, [r7, #10]
 800334a:	460b      	mov	r3, r1
 800334c:	813b      	strh	r3, [r7, #8]
 800334e:	4613      	mov	r3, r2
 8003350:	80fb      	strh	r3, [r7, #6]
 8003352:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8003356:	68f9      	ldr	r1, [r7, #12]
 8003358:	4613      	mov	r3, r2
 800335a:	005b      	lsls	r3, r3, #1
 800335c:	4413      	add	r3, r2
 800335e:	440b      	add	r3, r1
 8003360:	333a      	adds	r3, #58	; 0x3a
 8003362:	781a      	ldrb	r2, [r3, #0]
 8003364:	68fb      	ldr	r3, [r7, #12]
 8003366:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800336a:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 800336e:	68f9      	ldr	r1, [r7, #12]
 8003370:	4613      	mov	r3, r2
 8003372:	005b      	lsls	r3, r3, #1
 8003374:	4413      	add	r3, r2
 8003376:	440b      	add	r3, r1
 8003378:	333b      	adds	r3, #59	; 0x3b
 800337a:	781a      	ldrb	r2, [r3, #0]
 800337c:	68fb      	ldr	r3, [r7, #12]
 800337e:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 8003382:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8003386:	68f9      	ldr	r1, [r7, #12]
 8003388:	4613      	mov	r3, r2
 800338a:	005b      	lsls	r3, r3, #1
 800338c:	4413      	add	r3, r2
 800338e:	440b      	add	r3, r1
 8003390:	333c      	adds	r3, #60	; 0x3c
 8003392:	781a      	ldrb	r2, [r3, #0]
 8003394:	68fb      	ldr	r3, [r7, #12]
 8003396:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800339a:	68fb      	ldr	r3, [r7, #12]
 800339c:	897a      	ldrh	r2, [r7, #10]
 800339e:	849a      	strh	r2, [r3, #36]	; 0x24
 80033a0:	68fb      	ldr	r3, [r7, #12]
 80033a2:	893a      	ldrh	r2, [r7, #8]
 80033a4:	84da      	strh	r2, [r3, #38]	; 0x26
 80033a6:	68fb      	ldr	r3, [r7, #12]
 80033a8:	88fa      	ldrh	r2, [r7, #6]
 80033aa:	859a      	strh	r2, [r3, #44]	; 0x2c
 80033ac:	68fb      	ldr	r3, [r7, #12]
 80033ae:	8b3a      	ldrh	r2, [r7, #24]
 80033b0:	85da      	strh	r2, [r3, #46]	; 0x2e
 80033b2:	68f8      	ldr	r0, [r7, #12]
 80033b4:	f7ff f99f 	bl	80026f6 <ucg_DrawL90FXWithArg>
 80033b8:	bf00      	nop
 80033ba:	3710      	adds	r7, #16
 80033bc:	46bd      	mov	sp, r7
 80033be:	bd80      	pop	{r7, pc}

080033c0 <ucg_DrawHLine>:
 80033c0:	b580      	push	{r7, lr}
 80033c2:	b086      	sub	sp, #24
 80033c4:	af02      	add	r7, sp, #8
 80033c6:	60f8      	str	r0, [r7, #12]
 80033c8:	4608      	mov	r0, r1
 80033ca:	4611      	mov	r1, r2
 80033cc:	461a      	mov	r2, r3
 80033ce:	4603      	mov	r3, r0
 80033d0:	817b      	strh	r3, [r7, #10]
 80033d2:	460b      	mov	r3, r1
 80033d4:	813b      	strh	r3, [r7, #8]
 80033d6:	4613      	mov	r3, r2
 80033d8:	80fb      	strh	r3, [r7, #6]
 80033da:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 80033de:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 80033e2:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80033e6:	2300      	movs	r3, #0
 80033e8:	9301      	str	r3, [sp, #4]
 80033ea:	2300      	movs	r3, #0
 80033ec:	9300      	str	r3, [sp, #0]
 80033ee:	4603      	mov	r3, r0
 80033f0:	68f8      	ldr	r0, [r7, #12]
 80033f2:	f7ff ffa1 	bl	8003338 <ucg_Draw90Line>
 80033f6:	bf00      	nop
 80033f8:	3710      	adds	r7, #16
 80033fa:	46bd      	mov	sp, r7
 80033fc:	bd80      	pop	{r7, pc}

080033fe <ucg_SetColor>:
 80033fe:	b480      	push	{r7}
 8003400:	b083      	sub	sp, #12
 8003402:	af00      	add	r7, sp, #0
 8003404:	6078      	str	r0, [r7, #4]
 8003406:	4608      	mov	r0, r1
 8003408:	4611      	mov	r1, r2
 800340a:	461a      	mov	r2, r3
 800340c:	4603      	mov	r3, r0
 800340e:	70fb      	strb	r3, [r7, #3]
 8003410:	460b      	mov	r3, r1
 8003412:	70bb      	strb	r3, [r7, #2]
 8003414:	4613      	mov	r3, r2
 8003416:	707b      	strb	r3, [r7, #1]
 8003418:	78fa      	ldrb	r2, [r7, #3]
 800341a:	6879      	ldr	r1, [r7, #4]
 800341c:	4613      	mov	r3, r2
 800341e:	005b      	lsls	r3, r3, #1
 8003420:	4413      	add	r3, r2
 8003422:	440b      	add	r3, r1
 8003424:	333a      	adds	r3, #58	; 0x3a
 8003426:	78ba      	ldrb	r2, [r7, #2]
 8003428:	701a      	strb	r2, [r3, #0]
 800342a:	78fa      	ldrb	r2, [r7, #3]
 800342c:	6879      	ldr	r1, [r7, #4]
 800342e:	4613      	mov	r3, r2
 8003430:	005b      	lsls	r3, r3, #1
 8003432:	4413      	add	r3, r2
 8003434:	440b      	add	r3, r1
 8003436:	333b      	adds	r3, #59	; 0x3b
 8003438:	787a      	ldrb	r2, [r7, #1]
 800343a:	701a      	strb	r2, [r3, #0]
 800343c:	78fa      	ldrb	r2, [r7, #3]
 800343e:	6879      	ldr	r1, [r7, #4]
 8003440:	4613      	mov	r3, r2
 8003442:	005b      	lsls	r3, r3, #1
 8003444:	4413      	add	r3, r2
 8003446:	440b      	add	r3, r1
 8003448:	333c      	adds	r3, #60	; 0x3c
 800344a:	7c3a      	ldrb	r2, [r7, #16]
 800344c:	701a      	strb	r2, [r3, #0]
 800344e:	bf00      	nop
 8003450:	370c      	adds	r7, #12
 8003452:	46bd      	mov	sp, r7
 8003454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003458:	4770      	bx	lr

0800345a <ucg_UndoRotate>:
 800345a:	b580      	push	{r7, lr}
 800345c:	b082      	sub	sp, #8
 800345e:	af00      	add	r7, sp, #0
 8003460:	6078      	str	r0, [r7, #4]
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	691b      	ldr	r3, [r3, #16]
 8003466:	2b00      	cmp	r3, #0
 8003468:	d006      	beq.n	8003478 <ucg_UndoRotate+0x1e>
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	691a      	ldr	r2, [r3, #16]
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	609a      	str	r2, [r3, #8]
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	2200      	movs	r2, #0
 8003476:	611a      	str	r2, [r3, #16]
 8003478:	6878      	ldr	r0, [r7, #4]
 800347a:	f7ff f92a 	bl	80026d2 <ucg_GetDimension>
 800347e:	6878      	ldr	r0, [r7, #4]
 8003480:	f7ff f90f 	bl	80026a2 <ucg_SetMaxClipRange>
 8003484:	bf00      	nop
 8003486:	3708      	adds	r7, #8
 8003488:	46bd      	mov	sp, r7
 800348a:	bd80      	pop	{r7, pc}

0800348c <ucg_rotate_180_xy>:
 800348c:	b480      	push	{r7}
 800348e:	b085      	sub	sp, #20
 8003490:	af00      	add	r7, sp, #0
 8003492:	6078      	str	r0, [r7, #4]
 8003494:	6039      	str	r1, [r7, #0]
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	8adb      	ldrh	r3, [r3, #22]
 800349a:	81fb      	strh	r3, [r7, #14]
 800349c:	89fa      	ldrh	r2, [r7, #14]
 800349e:	683b      	ldr	r3, [r7, #0]
 80034a0:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80034a4:	b29b      	uxth	r3, r3
 80034a6:	1ad3      	subs	r3, r2, r3
 80034a8:	b29b      	uxth	r3, r3
 80034aa:	81fb      	strh	r3, [r7, #14]
 80034ac:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80034b0:	b29b      	uxth	r3, r3
 80034b2:	3b01      	subs	r3, #1
 80034b4:	b29b      	uxth	r3, r3
 80034b6:	81fb      	strh	r3, [r7, #14]
 80034b8:	683b      	ldr	r3, [r7, #0]
 80034ba:	89fa      	ldrh	r2, [r7, #14]
 80034bc:	805a      	strh	r2, [r3, #2]
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	8a9b      	ldrh	r3, [r3, #20]
 80034c2:	81bb      	strh	r3, [r7, #12]
 80034c4:	89ba      	ldrh	r2, [r7, #12]
 80034c6:	683b      	ldr	r3, [r7, #0]
 80034c8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80034cc:	b29b      	uxth	r3, r3
 80034ce:	1ad3      	subs	r3, r2, r3
 80034d0:	b29b      	uxth	r3, r3
 80034d2:	81bb      	strh	r3, [r7, #12]
 80034d4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80034d8:	b29b      	uxth	r3, r3
 80034da:	3b01      	subs	r3, #1
 80034dc:	b29b      	uxth	r3, r3
 80034de:	81bb      	strh	r3, [r7, #12]
 80034e0:	683b      	ldr	r3, [r7, #0]
 80034e2:	89ba      	ldrh	r2, [r7, #12]
 80034e4:	801a      	strh	r2, [r3, #0]
 80034e6:	bf00      	nop
 80034e8:	3714      	adds	r7, #20
 80034ea:	46bd      	mov	sp, r7
 80034ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034f0:	4770      	bx	lr
	...

080034f4 <ucg_dev_rotate180>:
 80034f4:	b580      	push	{r7, lr}
 80034f6:	b084      	sub	sp, #16
 80034f8:	af00      	add	r7, sp, #0
 80034fa:	60f8      	str	r0, [r7, #12]
 80034fc:	460b      	mov	r3, r1
 80034fe:	607a      	str	r2, [r7, #4]
 8003500:	817b      	strh	r3, [r7, #10]
 8003502:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003506:	3b0c      	subs	r3, #12
 8003508:	2b0b      	cmp	r3, #11
 800350a:	d866      	bhi.n	80035da <ucg_dev_rotate180+0xe6>
 800350c:	a201      	add	r2, pc, #4	; (adr r2, 8003514 <ucg_dev_rotate180+0x20>)
 800350e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003512:	bf00      	nop
 8003514:	08003563 	.word	0x08003563
 8003518:	080035db 	.word	0x080035db
 800351c:	080035db 	.word	0x080035db
 8003520:	08003545 	.word	0x08003545
 8003524:	080035db 	.word	0x080035db
 8003528:	080035db 	.word	0x080035db
 800352c:	080035db 	.word	0x080035db
 8003530:	080035db 	.word	0x080035db
 8003534:	080035ab 	.word	0x080035ab
 8003538:	080035ab 	.word	0x080035ab
 800353c:	080035db 	.word	0x080035db
 8003540:	080035ab 	.word	0x080035ab
 8003544:	68fb      	ldr	r3, [r7, #12]
 8003546:	691b      	ldr	r3, [r3, #16]
 8003548:	68fa      	ldr	r2, [r7, #12]
 800354a:	3214      	adds	r2, #20
 800354c:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8003550:	68f8      	ldr	r0, [r7, #12]
 8003552:	4798      	blx	r3
 8003554:	687a      	ldr	r2, [r7, #4]
 8003556:	68fb      	ldr	r3, [r7, #12]
 8003558:	3314      	adds	r3, #20
 800355a:	6818      	ldr	r0, [r3, #0]
 800355c:	6010      	str	r0, [r2, #0]
 800355e:	2301      	movs	r3, #1
 8003560:	e043      	b.n	80035ea <ucg_dev_rotate180+0xf6>
 8003562:	687b      	ldr	r3, [r7, #4]
 8003564:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003568:	b29a      	uxth	r2, r3
 800356a:	687b      	ldr	r3, [r7, #4]
 800356c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8003570:	b29b      	uxth	r3, r3
 8003572:	4413      	add	r3, r2
 8003574:	b29b      	uxth	r3, r3
 8003576:	3b01      	subs	r3, #1
 8003578:	b29b      	uxth	r3, r3
 800357a:	b21a      	sxth	r2, r3
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	805a      	strh	r2, [r3, #2]
 8003580:	687b      	ldr	r3, [r7, #4]
 8003582:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003586:	b29a      	uxth	r2, r3
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800358e:	b29b      	uxth	r3, r3
 8003590:	4413      	add	r3, r2
 8003592:	b29b      	uxth	r3, r3
 8003594:	3b01      	subs	r3, #1
 8003596:	b29b      	uxth	r3, r3
 8003598:	b21a      	sxth	r2, r3
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	801a      	strh	r2, [r3, #0]
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	4619      	mov	r1, r3
 80035a2:	68f8      	ldr	r0, [r7, #12]
 80035a4:	f7ff ff72 	bl	800348c <ucg_rotate_180_xy>
 80035a8:	e017      	b.n	80035da <ucg_dev_rotate180+0xe6>
 80035aa:	68fb      	ldr	r3, [r7, #12]
 80035ac:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 80035b0:	b29b      	uxth	r3, r3
 80035b2:	3302      	adds	r3, #2
 80035b4:	b29b      	uxth	r3, r3
 80035b6:	b21a      	sxth	r2, r3
 80035b8:	68fb      	ldr	r3, [r7, #12]
 80035ba:	85da      	strh	r2, [r3, #46]	; 0x2e
 80035bc:	68fb      	ldr	r3, [r7, #12]
 80035be:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 80035c2:	f003 0303 	and.w	r3, r3, #3
 80035c6:	b21a      	sxth	r2, r3
 80035c8:	68fb      	ldr	r3, [r7, #12]
 80035ca:	85da      	strh	r2, [r3, #46]	; 0x2e
 80035cc:	68fb      	ldr	r3, [r7, #12]
 80035ce:	3324      	adds	r3, #36	; 0x24
 80035d0:	4619      	mov	r1, r3
 80035d2:	68f8      	ldr	r0, [r7, #12]
 80035d4:	f7ff ff5a 	bl	800348c <ucg_rotate_180_xy>
 80035d8:	bf00      	nop
 80035da:	68fb      	ldr	r3, [r7, #12]
 80035dc:	691b      	ldr	r3, [r3, #16]
 80035de:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 80035e2:	687a      	ldr	r2, [r7, #4]
 80035e4:	68f8      	ldr	r0, [r7, #12]
 80035e6:	4798      	blx	r3
 80035e8:	4603      	mov	r3, r0
 80035ea:	4618      	mov	r0, r3
 80035ec:	3710      	adds	r7, #16
 80035ee:	46bd      	mov	sp, r7
 80035f0:	bd80      	pop	{r7, pc}
 80035f2:	bf00      	nop

080035f4 <ucg_SetRotate180>:
 80035f4:	b580      	push	{r7, lr}
 80035f6:	b082      	sub	sp, #8
 80035f8:	af00      	add	r7, sp, #0
 80035fa:	6078      	str	r0, [r7, #4]
 80035fc:	6878      	ldr	r0, [r7, #4]
 80035fe:	f7ff ff2c 	bl	800345a <ucg_UndoRotate>
 8003602:	687b      	ldr	r3, [r7, #4]
 8003604:	689a      	ldr	r2, [r3, #8]
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	611a      	str	r2, [r3, #16]
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	4a05      	ldr	r2, [pc, #20]	; (8003624 <ucg_SetRotate180+0x30>)
 800360e:	609a      	str	r2, [r3, #8]
 8003610:	6878      	ldr	r0, [r7, #4]
 8003612:	f7ff f85e 	bl	80026d2 <ucg_GetDimension>
 8003616:	6878      	ldr	r0, [r7, #4]
 8003618:	f7ff f843 	bl	80026a2 <ucg_SetMaxClipRange>
 800361c:	bf00      	nop
 800361e:	3708      	adds	r7, #8
 8003620:	46bd      	mov	sp, r7
 8003622:	bd80      	pop	{r7, pc}
 8003624:	080034f5 	.word	0x080034f5

08003628 <USART_ReceiveData>:
 8003628:	b480      	push	{r7}
 800362a:	b083      	sub	sp, #12
 800362c:	af00      	add	r7, sp, #0
 800362e:	6078      	str	r0, [r7, #4]
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	889b      	ldrh	r3, [r3, #4]
 8003634:	b29b      	uxth	r3, r3
 8003636:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800363a:	b29b      	uxth	r3, r3
 800363c:	4618      	mov	r0, r3
 800363e:	370c      	adds	r7, #12
 8003640:	46bd      	mov	sp, r7
 8003642:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003646:	4770      	bx	lr

08003648 <USART_GetITStatus>:
 8003648:	b480      	push	{r7}
 800364a:	b087      	sub	sp, #28
 800364c:	af00      	add	r7, sp, #0
 800364e:	6078      	str	r0, [r7, #4]
 8003650:	460b      	mov	r3, r1
 8003652:	807b      	strh	r3, [r7, #2]
 8003654:	2300      	movs	r3, #0
 8003656:	60fb      	str	r3, [r7, #12]
 8003658:	2300      	movs	r3, #0
 800365a:	617b      	str	r3, [r7, #20]
 800365c:	2300      	movs	r3, #0
 800365e:	60bb      	str	r3, [r7, #8]
 8003660:	2300      	movs	r3, #0
 8003662:	74fb      	strb	r3, [r7, #19]
 8003664:	887b      	ldrh	r3, [r7, #2]
 8003666:	b2db      	uxtb	r3, r3
 8003668:	095b      	lsrs	r3, r3, #5
 800366a:	b2db      	uxtb	r3, r3
 800366c:	60bb      	str	r3, [r7, #8]
 800366e:	887b      	ldrh	r3, [r7, #2]
 8003670:	f003 031f 	and.w	r3, r3, #31
 8003674:	617b      	str	r3, [r7, #20]
 8003676:	2201      	movs	r2, #1
 8003678:	697b      	ldr	r3, [r7, #20]
 800367a:	fa02 f303 	lsl.w	r3, r2, r3
 800367e:	617b      	str	r3, [r7, #20]
 8003680:	68bb      	ldr	r3, [r7, #8]
 8003682:	2b01      	cmp	r3, #1
 8003684:	d107      	bne.n	8003696 <USART_GetITStatus+0x4e>
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	899b      	ldrh	r3, [r3, #12]
 800368a:	b29b      	uxth	r3, r3
 800368c:	461a      	mov	r2, r3
 800368e:	697b      	ldr	r3, [r7, #20]
 8003690:	4013      	ands	r3, r2
 8003692:	617b      	str	r3, [r7, #20]
 8003694:	e011      	b.n	80036ba <USART_GetITStatus+0x72>
 8003696:	68bb      	ldr	r3, [r7, #8]
 8003698:	2b02      	cmp	r3, #2
 800369a:	d107      	bne.n	80036ac <USART_GetITStatus+0x64>
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	8a1b      	ldrh	r3, [r3, #16]
 80036a0:	b29b      	uxth	r3, r3
 80036a2:	461a      	mov	r2, r3
 80036a4:	697b      	ldr	r3, [r7, #20]
 80036a6:	4013      	ands	r3, r2
 80036a8:	617b      	str	r3, [r7, #20]
 80036aa:	e006      	b.n	80036ba <USART_GetITStatus+0x72>
 80036ac:	687b      	ldr	r3, [r7, #4]
 80036ae:	8a9b      	ldrh	r3, [r3, #20]
 80036b0:	b29b      	uxth	r3, r3
 80036b2:	461a      	mov	r2, r3
 80036b4:	697b      	ldr	r3, [r7, #20]
 80036b6:	4013      	ands	r3, r2
 80036b8:	617b      	str	r3, [r7, #20]
 80036ba:	887b      	ldrh	r3, [r7, #2]
 80036bc:	0a1b      	lsrs	r3, r3, #8
 80036be:	b29b      	uxth	r3, r3
 80036c0:	60fb      	str	r3, [r7, #12]
 80036c2:	2201      	movs	r2, #1
 80036c4:	68fb      	ldr	r3, [r7, #12]
 80036c6:	fa02 f303 	lsl.w	r3, r2, r3
 80036ca:	60fb      	str	r3, [r7, #12]
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	881b      	ldrh	r3, [r3, #0]
 80036d0:	b29b      	uxth	r3, r3
 80036d2:	461a      	mov	r2, r3
 80036d4:	68fb      	ldr	r3, [r7, #12]
 80036d6:	4013      	ands	r3, r2
 80036d8:	60fb      	str	r3, [r7, #12]
 80036da:	697b      	ldr	r3, [r7, #20]
 80036dc:	2b00      	cmp	r3, #0
 80036de:	d005      	beq.n	80036ec <USART_GetITStatus+0xa4>
 80036e0:	68fb      	ldr	r3, [r7, #12]
 80036e2:	2b00      	cmp	r3, #0
 80036e4:	d002      	beq.n	80036ec <USART_GetITStatus+0xa4>
 80036e6:	2301      	movs	r3, #1
 80036e8:	74fb      	strb	r3, [r7, #19]
 80036ea:	e001      	b.n	80036f0 <USART_GetITStatus+0xa8>
 80036ec:	2300      	movs	r3, #0
 80036ee:	74fb      	strb	r3, [r7, #19]
 80036f0:	7cfb      	ldrb	r3, [r7, #19]
 80036f2:	4618      	mov	r0, r3
 80036f4:	371c      	adds	r7, #28
 80036f6:	46bd      	mov	sp, r7
 80036f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036fc:	4770      	bx	lr

080036fe <USART_ClearITPendingBit>:
 80036fe:	b480      	push	{r7}
 8003700:	b085      	sub	sp, #20
 8003702:	af00      	add	r7, sp, #0
 8003704:	6078      	str	r0, [r7, #4]
 8003706:	460b      	mov	r3, r1
 8003708:	807b      	strh	r3, [r7, #2]
 800370a:	2300      	movs	r3, #0
 800370c:	81fb      	strh	r3, [r7, #14]
 800370e:	2300      	movs	r3, #0
 8003710:	81bb      	strh	r3, [r7, #12]
 8003712:	887b      	ldrh	r3, [r7, #2]
 8003714:	0a1b      	lsrs	r3, r3, #8
 8003716:	81fb      	strh	r3, [r7, #14]
 8003718:	89fb      	ldrh	r3, [r7, #14]
 800371a:	2201      	movs	r2, #1
 800371c:	fa02 f303 	lsl.w	r3, r2, r3
 8003720:	81bb      	strh	r3, [r7, #12]
 8003722:	89bb      	ldrh	r3, [r7, #12]
 8003724:	43db      	mvns	r3, r3
 8003726:	b29a      	uxth	r2, r3
 8003728:	687b      	ldr	r3, [r7, #4]
 800372a:	801a      	strh	r2, [r3, #0]
 800372c:	bf00      	nop
 800372e:	3714      	adds	r7, #20
 8003730:	46bd      	mov	sp, r7
 8003732:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003736:	4770      	bx	lr

08003738 <ucg_clip_is_x_visible>:
 8003738:	b480      	push	{r7}
 800373a:	b085      	sub	sp, #20
 800373c:	af00      	add	r7, sp, #0
 800373e:	6078      	str	r0, [r7, #4]
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8003744:	81fb      	strh	r3, [r7, #14]
 8003746:	89fa      	ldrh	r2, [r7, #14]
 8003748:	687b      	ldr	r3, [r7, #4]
 800374a:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 800374e:	b29b      	uxth	r3, r3
 8003750:	1ad3      	subs	r3, r2, r3
 8003752:	b29b      	uxth	r3, r3
 8003754:	81fb      	strh	r3, [r7, #14]
 8003756:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800375a:	2b00      	cmp	r3, #0
 800375c:	da01      	bge.n	8003762 <ucg_clip_is_x_visible+0x2a>
 800375e:	2300      	movs	r3, #0
 8003760:	e009      	b.n	8003776 <ucg_clip_is_x_visible+0x3e>
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8003768:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800376c:	429a      	cmp	r2, r3
 800376e:	db01      	blt.n	8003774 <ucg_clip_is_x_visible+0x3c>
 8003770:	2300      	movs	r3, #0
 8003772:	e000      	b.n	8003776 <ucg_clip_is_x_visible+0x3e>
 8003774:	2301      	movs	r3, #1
 8003776:	4618      	mov	r0, r3
 8003778:	3714      	adds	r7, #20
 800377a:	46bd      	mov	sp, r7
 800377c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003780:	4770      	bx	lr

08003782 <ucg_clip_is_y_visible>:
 8003782:	b480      	push	{r7}
 8003784:	b085      	sub	sp, #20
 8003786:	af00      	add	r7, sp, #0
 8003788:	6078      	str	r0, [r7, #4]
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800378e:	81fb      	strh	r3, [r7, #14]
 8003790:	89fa      	ldrh	r2, [r7, #14]
 8003792:	687b      	ldr	r3, [r7, #4]
 8003794:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8003798:	b29b      	uxth	r3, r3
 800379a:	1ad3      	subs	r3, r2, r3
 800379c:	b29b      	uxth	r3, r3
 800379e:	81fb      	strh	r3, [r7, #14]
 80037a0:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80037a4:	2b00      	cmp	r3, #0
 80037a6:	da01      	bge.n	80037ac <ucg_clip_is_y_visible+0x2a>
 80037a8:	2300      	movs	r3, #0
 80037aa:	e009      	b.n	80037c0 <ucg_clip_is_y_visible+0x3e>
 80037ac:	687b      	ldr	r3, [r7, #4]
 80037ae:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 80037b2:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80037b6:	429a      	cmp	r2, r3
 80037b8:	db01      	blt.n	80037be <ucg_clip_is_y_visible+0x3c>
 80037ba:	2300      	movs	r3, #0
 80037bc:	e000      	b.n	80037c0 <ucg_clip_is_y_visible+0x3e>
 80037be:	2301      	movs	r3, #1
 80037c0:	4618      	mov	r0, r3
 80037c2:	3714      	adds	r7, #20
 80037c4:	46bd      	mov	sp, r7
 80037c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037ca:	4770      	bx	lr

080037cc <ucg_clip_intersection>:
 80037cc:	b480      	push	{r7}
 80037ce:	b087      	sub	sp, #28
 80037d0:	af00      	add	r7, sp, #0
 80037d2:	60f8      	str	r0, [r7, #12]
 80037d4:	60b9      	str	r1, [r7, #8]
 80037d6:	4611      	mov	r1, r2
 80037d8:	461a      	mov	r2, r3
 80037da:	460b      	mov	r3, r1
 80037dc:	80fb      	strh	r3, [r7, #6]
 80037de:	4613      	mov	r3, r2
 80037e0:	80bb      	strh	r3, [r7, #4]
 80037e2:	68fb      	ldr	r3, [r7, #12]
 80037e4:	881b      	ldrh	r3, [r3, #0]
 80037e6:	82fb      	strh	r3, [r7, #22]
 80037e8:	68bb      	ldr	r3, [r7, #8]
 80037ea:	881b      	ldrh	r3, [r3, #0]
 80037ec:	82bb      	strh	r3, [r7, #20]
 80037ee:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 80037f2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80037f6:	429a      	cmp	r2, r3
 80037f8:	db01      	blt.n	80037fe <ucg_clip_intersection+0x32>
 80037fa:	2300      	movs	r3, #0
 80037fc:	e01a      	b.n	8003834 <ucg_clip_intersection+0x68>
 80037fe:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8003802:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003806:	429a      	cmp	r2, r3
 8003808:	dc01      	bgt.n	800380e <ucg_clip_intersection+0x42>
 800380a:	2300      	movs	r3, #0
 800380c:	e012      	b.n	8003834 <ucg_clip_intersection+0x68>
 800380e:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8003812:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003816:	429a      	cmp	r2, r3
 8003818:	da02      	bge.n	8003820 <ucg_clip_intersection+0x54>
 800381a:	68fb      	ldr	r3, [r7, #12]
 800381c:	88fa      	ldrh	r2, [r7, #6]
 800381e:	801a      	strh	r2, [r3, #0]
 8003820:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8003824:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8003828:	429a      	cmp	r2, r3
 800382a:	dd02      	ble.n	8003832 <ucg_clip_intersection+0x66>
 800382c:	68bb      	ldr	r3, [r7, #8]
 800382e:	88ba      	ldrh	r2, [r7, #4]
 8003830:	801a      	strh	r2, [r3, #0]
 8003832:	2301      	movs	r3, #1
 8003834:	4618      	mov	r0, r3
 8003836:	371c      	adds	r7, #28
 8003838:	46bd      	mov	sp, r7
 800383a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800383e:	4770      	bx	lr

08003840 <ucg_clip_is_pixel_visible>:
 8003840:	b580      	push	{r7, lr}
 8003842:	b082      	sub	sp, #8
 8003844:	af00      	add	r7, sp, #0
 8003846:	6078      	str	r0, [r7, #4]
 8003848:	6878      	ldr	r0, [r7, #4]
 800384a:	f7ff ff75 	bl	8003738 <ucg_clip_is_x_visible>
 800384e:	4603      	mov	r3, r0
 8003850:	2b00      	cmp	r3, #0
 8003852:	d101      	bne.n	8003858 <ucg_clip_is_pixel_visible+0x18>
 8003854:	2300      	movs	r3, #0
 8003856:	e008      	b.n	800386a <ucg_clip_is_pixel_visible+0x2a>
 8003858:	6878      	ldr	r0, [r7, #4]
 800385a:	f7ff ff92 	bl	8003782 <ucg_clip_is_y_visible>
 800385e:	4603      	mov	r3, r0
 8003860:	2b00      	cmp	r3, #0
 8003862:	d101      	bne.n	8003868 <ucg_clip_is_pixel_visible+0x28>
 8003864:	2300      	movs	r3, #0
 8003866:	e000      	b.n	800386a <ucg_clip_is_pixel_visible+0x2a>
 8003868:	2301      	movs	r3, #1
 800386a:	4618      	mov	r0, r3
 800386c:	3708      	adds	r7, #8
 800386e:	46bd      	mov	sp, r7
 8003870:	bd80      	pop	{r7, pc}
	...

08003874 <ucg_clip_l90fx>:
 8003874:	b590      	push	{r4, r7, lr}
 8003876:	b085      	sub	sp, #20
 8003878:	af00      	add	r7, sp, #0
 800387a:	6078      	str	r0, [r7, #4]
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	2200      	movs	r2, #0
 8003880:	861a      	strh	r2, [r3, #48]	; 0x30
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	; 0x2e
 8003888:	2b03      	cmp	r3, #3
 800388a:	f200 816d 	bhi.w	8003b68 <ucg_clip_l90fx+0x2f4>
 800388e:	a201      	add	r2, pc, #4	; (adr r2, 8003894 <ucg_clip_l90fx+0x20>)
 8003890:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003894:	080038a5 	.word	0x080038a5
 8003898:	0800394b 	.word	0x0800394b
 800389c:	080039f1 	.word	0x080039f1
 80038a0:	08003aad 	.word	0x08003aad
 80038a4:	6878      	ldr	r0, [r7, #4]
 80038a6:	f7ff ff6c 	bl	8003782 <ucg_clip_is_y_visible>
 80038aa:	4603      	mov	r3, r0
 80038ac:	2b00      	cmp	r3, #0
 80038ae:	d101      	bne.n	80038b4 <ucg_clip_l90fx+0x40>
 80038b0:	2300      	movs	r3, #0
 80038b2:	e15a      	b.n	8003b6a <ucg_clip_l90fx+0x2f6>
 80038b4:	687b      	ldr	r3, [r7, #4]
 80038b6:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 80038ba:	81fb      	strh	r3, [r7, #14]
 80038bc:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80038c0:	81bb      	strh	r3, [r7, #12]
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 80038c8:	b29a      	uxth	r2, r3
 80038ca:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80038ce:	b29b      	uxth	r3, r3
 80038d0:	4413      	add	r3, r2
 80038d2:	b29b      	uxth	r3, r3
 80038d4:	b21b      	sxth	r3, r3
 80038d6:	81bb      	strh	r3, [r7, #12]
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 80038e4:	b29a      	uxth	r2, r3
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 80038ec:	b29b      	uxth	r3, r3
 80038ee:	4413      	add	r3, r2
 80038f0:	b29b      	uxth	r3, r3
 80038f2:	b21b      	sxth	r3, r3
 80038f4:	f107 010c 	add.w	r1, r7, #12
 80038f8:	f107 000e 	add.w	r0, r7, #14
 80038fc:	4622      	mov	r2, r4
 80038fe:	f7ff ff65 	bl	80037cc <ucg_clip_intersection>
 8003902:	4603      	mov	r3, r0
 8003904:	2b00      	cmp	r3, #0
 8003906:	d101      	bne.n	800390c <ucg_clip_l90fx+0x98>
 8003908:	2300      	movs	r3, #0
 800390a:	e12e      	b.n	8003b6a <ucg_clip_l90fx+0x2f6>
 800390c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003910:	b29a      	uxth	r2, r3
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003918:	b29b      	uxth	r3, r3
 800391a:	1ad3      	subs	r3, r2, r3
 800391c:	b29b      	uxth	r3, r3
 800391e:	b21a      	sxth	r2, r3
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	861a      	strh	r2, [r3, #48]	; 0x30
 8003924:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	849a      	strh	r2, [r3, #36]	; 0x24
 800392c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003930:	b29a      	uxth	r2, r3
 8003932:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003936:	b29b      	uxth	r3, r3
 8003938:	1ad3      	subs	r3, r2, r3
 800393a:	b29b      	uxth	r3, r3
 800393c:	b21b      	sxth	r3, r3
 800393e:	81bb      	strh	r3, [r7, #12]
 8003940:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003948:	e10e      	b.n	8003b68 <ucg_clip_l90fx+0x2f4>
 800394a:	6878      	ldr	r0, [r7, #4]
 800394c:	f7ff fef4 	bl	8003738 <ucg_clip_is_x_visible>
 8003950:	4603      	mov	r3, r0
 8003952:	2b00      	cmp	r3, #0
 8003954:	d101      	bne.n	800395a <ucg_clip_l90fx+0xe6>
 8003956:	2300      	movs	r3, #0
 8003958:	e107      	b.n	8003b6a <ucg_clip_l90fx+0x2f6>
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003960:	81fb      	strh	r3, [r7, #14]
 8003962:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003966:	81bb      	strh	r3, [r7, #12]
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 800396e:	b29a      	uxth	r2, r3
 8003970:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003974:	b29b      	uxth	r3, r3
 8003976:	4413      	add	r3, r2
 8003978:	b29b      	uxth	r3, r3
 800397a:	b21b      	sxth	r3, r3
 800397c:	81bb      	strh	r3, [r7, #12]
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 800398a:	b29a      	uxth	r2, r3
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8003992:	b29b      	uxth	r3, r3
 8003994:	4413      	add	r3, r2
 8003996:	b29b      	uxth	r3, r3
 8003998:	b21b      	sxth	r3, r3
 800399a:	f107 010c 	add.w	r1, r7, #12
 800399e:	f107 000e 	add.w	r0, r7, #14
 80039a2:	4622      	mov	r2, r4
 80039a4:	f7ff ff12 	bl	80037cc <ucg_clip_intersection>
 80039a8:	4603      	mov	r3, r0
 80039aa:	2b00      	cmp	r3, #0
 80039ac:	d101      	bne.n	80039b2 <ucg_clip_l90fx+0x13e>
 80039ae:	2300      	movs	r3, #0
 80039b0:	e0db      	b.n	8003b6a <ucg_clip_l90fx+0x2f6>
 80039b2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80039b6:	b29a      	uxth	r2, r3
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 80039be:	b29b      	uxth	r3, r3
 80039c0:	1ad3      	subs	r3, r2, r3
 80039c2:	b29b      	uxth	r3, r3
 80039c4:	b21a      	sxth	r2, r3
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	861a      	strh	r2, [r3, #48]	; 0x30
 80039ca:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	84da      	strh	r2, [r3, #38]	; 0x26
 80039d2:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80039d6:	b29a      	uxth	r2, r3
 80039d8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80039dc:	b29b      	uxth	r3, r3
 80039de:	1ad3      	subs	r3, r2, r3
 80039e0:	b29b      	uxth	r3, r3
 80039e2:	b21b      	sxth	r3, r3
 80039e4:	81bb      	strh	r3, [r7, #12]
 80039e6:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 80039ea:	687b      	ldr	r3, [r7, #4]
 80039ec:	859a      	strh	r2, [r3, #44]	; 0x2c
 80039ee:	e0bb      	b.n	8003b68 <ucg_clip_l90fx+0x2f4>
 80039f0:	6878      	ldr	r0, [r7, #4]
 80039f2:	f7ff fec6 	bl	8003782 <ucg_clip_is_y_visible>
 80039f6:	4603      	mov	r3, r0
 80039f8:	2b00      	cmp	r3, #0
 80039fa:	d101      	bne.n	8003a00 <ucg_clip_l90fx+0x18c>
 80039fc:	2300      	movs	r3, #0
 80039fe:	e0b4      	b.n	8003b6a <ucg_clip_l90fx+0x2f6>
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003a06:	81bb      	strh	r3, [r7, #12]
 8003a08:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003a0c:	b29b      	uxth	r3, r3
 8003a0e:	3301      	adds	r3, #1
 8003a10:	b29b      	uxth	r3, r3
 8003a12:	b21b      	sxth	r3, r3
 8003a14:	81bb      	strh	r3, [r7, #12]
 8003a16:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003a1a:	81fb      	strh	r3, [r7, #14]
 8003a1c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003a20:	b29a      	uxth	r2, r3
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8003a28:	b29b      	uxth	r3, r3
 8003a2a:	1ad3      	subs	r3, r2, r3
 8003a2c:	b29b      	uxth	r3, r3
 8003a2e:	b21b      	sxth	r3, r3
 8003a30:	81fb      	strh	r3, [r7, #14]
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	; 0x70
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 8003a3e:	b29a      	uxth	r2, r3
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	; 0x74
 8003a46:	b29b      	uxth	r3, r3
 8003a48:	4413      	add	r3, r2
 8003a4a:	b29b      	uxth	r3, r3
 8003a4c:	b21b      	sxth	r3, r3
 8003a4e:	f107 010c 	add.w	r1, r7, #12
 8003a52:	f107 000e 	add.w	r0, r7, #14
 8003a56:	4622      	mov	r2, r4
 8003a58:	f7ff feb8 	bl	80037cc <ucg_clip_intersection>
 8003a5c:	4603      	mov	r3, r0
 8003a5e:	2b00      	cmp	r3, #0
 8003a60:	d101      	bne.n	8003a66 <ucg_clip_l90fx+0x1f2>
 8003a62:	2300      	movs	r3, #0
 8003a64:	e081      	b.n	8003b6a <ucg_clip_l90fx+0x2f6>
 8003a66:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003a6a:	b29a      	uxth	r2, r3
 8003a6c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003a70:	b29b      	uxth	r3, r3
 8003a72:	1ad3      	subs	r3, r2, r3
 8003a74:	b29b      	uxth	r3, r3
 8003a76:	b21a      	sxth	r2, r3
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003a7c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003a80:	b29b      	uxth	r3, r3
 8003a82:	3b01      	subs	r3, #1
 8003a84:	b29b      	uxth	r3, r3
 8003a86:	b21b      	sxth	r3, r3
 8003a88:	81bb      	strh	r3, [r7, #12]
 8003a8a:	687b      	ldr	r3, [r7, #4]
 8003a8c:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8003a90:	b29a      	uxth	r2, r3
 8003a92:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003a96:	b29b      	uxth	r3, r3
 8003a98:	1ad3      	subs	r3, r2, r3
 8003a9a:	b29b      	uxth	r3, r3
 8003a9c:	b21a      	sxth	r2, r3
 8003a9e:	687b      	ldr	r3, [r7, #4]
 8003aa0:	861a      	strh	r2, [r3, #48]	; 0x30
 8003aa2:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003aa6:	687b      	ldr	r3, [r7, #4]
 8003aa8:	849a      	strh	r2, [r3, #36]	; 0x24
 8003aaa:	e05d      	b.n	8003b68 <ucg_clip_l90fx+0x2f4>
 8003aac:	6878      	ldr	r0, [r7, #4]
 8003aae:	f7ff fe43 	bl	8003738 <ucg_clip_is_x_visible>
 8003ab2:	4603      	mov	r3, r0
 8003ab4:	2b00      	cmp	r3, #0
 8003ab6:	d101      	bne.n	8003abc <ucg_clip_l90fx+0x248>
 8003ab8:	2300      	movs	r3, #0
 8003aba:	e056      	b.n	8003b6a <ucg_clip_l90fx+0x2f6>
 8003abc:	687b      	ldr	r3, [r7, #4]
 8003abe:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003ac2:	81bb      	strh	r3, [r7, #12]
 8003ac4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003ac8:	b29b      	uxth	r3, r3
 8003aca:	3301      	adds	r3, #1
 8003acc:	b29b      	uxth	r3, r3
 8003ace:	b21b      	sxth	r3, r3
 8003ad0:	81bb      	strh	r3, [r7, #12]
 8003ad2:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003ad6:	81fb      	strh	r3, [r7, #14]
 8003ad8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003adc:	b29a      	uxth	r2, r3
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	; 0x2c
 8003ae4:	b29b      	uxth	r3, r3
 8003ae6:	1ad3      	subs	r3, r2, r3
 8003ae8:	b29b      	uxth	r3, r3
 8003aea:	b21b      	sxth	r3, r3
 8003aec:	81fb      	strh	r3, [r7, #14]
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	; 0x72
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	; 0x72
 8003afa:	b29a      	uxth	r2, r3
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	; 0x76
 8003b02:	b29b      	uxth	r3, r3
 8003b04:	4413      	add	r3, r2
 8003b06:	b29b      	uxth	r3, r3
 8003b08:	b21b      	sxth	r3, r3
 8003b0a:	f107 010c 	add.w	r1, r7, #12
 8003b0e:	f107 000e 	add.w	r0, r7, #14
 8003b12:	4622      	mov	r2, r4
 8003b14:	f7ff fe5a 	bl	80037cc <ucg_clip_intersection>
 8003b18:	4603      	mov	r3, r0
 8003b1a:	2b00      	cmp	r3, #0
 8003b1c:	d101      	bne.n	8003b22 <ucg_clip_l90fx+0x2ae>
 8003b1e:	2300      	movs	r3, #0
 8003b20:	e023      	b.n	8003b6a <ucg_clip_l90fx+0x2f6>
 8003b22:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003b26:	b29a      	uxth	r2, r3
 8003b28:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003b2c:	b29b      	uxth	r3, r3
 8003b2e:	1ad3      	subs	r3, r2, r3
 8003b30:	b29b      	uxth	r3, r3
 8003b32:	b21a      	sxth	r2, r3
 8003b34:	687b      	ldr	r3, [r7, #4]
 8003b36:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003b38:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003b3c:	b29b      	uxth	r3, r3
 8003b3e:	3b01      	subs	r3, #1
 8003b40:	b29b      	uxth	r3, r3
 8003b42:	b21b      	sxth	r3, r3
 8003b44:	81bb      	strh	r3, [r7, #12]
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8003b4c:	b29a      	uxth	r2, r3
 8003b4e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8003b52:	b29b      	uxth	r3, r3
 8003b54:	1ad3      	subs	r3, r2, r3
 8003b56:	b29b      	uxth	r3, r3
 8003b58:	b21a      	sxth	r2, r3
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	861a      	strh	r2, [r3, #48]	; 0x30
 8003b5e:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003b62:	687b      	ldr	r3, [r7, #4]
 8003b64:	84da      	strh	r2, [r3, #38]	; 0x26
 8003b66:	bf00      	nop
 8003b68:	2301      	movs	r3, #1
 8003b6a:	4618      	mov	r0, r3
 8003b6c:	3714      	adds	r7, #20
 8003b6e:	46bd      	mov	sp, r7
 8003b70:	bd90      	pop	{r4, r7, pc}
 8003b72:	bf00      	nop

08003b74 <ucg_clip_l90se>:
 8003b74:	b580      	push	{r7, lr}
 8003b76:	b084      	sub	sp, #16
 8003b78:	af00      	add	r7, sp, #0
 8003b7a:	6078      	str	r0, [r7, #4]
 8003b7c:	6878      	ldr	r0, [r7, #4]
 8003b7e:	f7ff fe79 	bl	8003874 <ucg_clip_l90fx>
 8003b82:	4603      	mov	r3, r0
 8003b84:	2b00      	cmp	r3, #0
 8003b86:	d101      	bne.n	8003b8c <ucg_clip_l90se+0x18>
 8003b88:	2300      	movs	r3, #0
 8003b8a:	e019      	b.n	8003bc0 <ucg_clip_l90se+0x4c>
 8003b8c:	2300      	movs	r3, #0
 8003b8e:	73fb      	strb	r3, [r7, #15]
 8003b90:	e012      	b.n	8003bb8 <ucg_clip_l90se+0x44>
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	f103 0146 	add.w	r1, r3, #70	; 0x46
 8003b98:	7bfa      	ldrb	r2, [r7, #15]
 8003b9a:	4613      	mov	r3, r2
 8003b9c:	00db      	lsls	r3, r3, #3
 8003b9e:	1a9b      	subs	r3, r3, r2
 8003ba0:	005b      	lsls	r3, r3, #1
 8003ba2:	18ca      	adds	r2, r1, r3
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	f9b3 3030 	ldrsh.w	r3, [r3, #48]	; 0x30
 8003baa:	4619      	mov	r1, r3
 8003bac:	4610      	mov	r0, r2
 8003bae:	f7fe faf6 	bl	800219e <ucg_ccs_seek>
 8003bb2:	7bfb      	ldrb	r3, [r7, #15]
 8003bb4:	3301      	adds	r3, #1
 8003bb6:	73fb      	strb	r3, [r7, #15]
 8003bb8:	7bfb      	ldrb	r3, [r7, #15]
 8003bba:	2b02      	cmp	r3, #2
 8003bbc:	d9e9      	bls.n	8003b92 <ucg_clip_l90se+0x1e>
 8003bbe:	2301      	movs	r3, #1
 8003bc0:	4618      	mov	r0, r3
 8003bc2:	3710      	adds	r7, #16
 8003bc4:	46bd      	mov	sp, r7
 8003bc6:	bd80      	pop	{r7, pc}

08003bc8 <ucg_com_PowerDown>:
 8003bc8:	b590      	push	{r4, r7, lr}
 8003bca:	b083      	sub	sp, #12
 8003bcc:	af00      	add	r7, sp, #0
 8003bce:	6078      	str	r0, [r7, #4]
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003bd6:	f003 0308 	and.w	r3, r3, #8
 8003bda:	2b00      	cmp	r3, #0
 8003bdc:	d006      	beq.n	8003bec <ucg_com_PowerDown+0x24>
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	69dc      	ldr	r4, [r3, #28]
 8003be2:	2300      	movs	r3, #0
 8003be4:	2200      	movs	r2, #0
 8003be6:	210b      	movs	r1, #11
 8003be8:	6878      	ldr	r0, [r7, #4]
 8003bea:	47a0      	blx	r4
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003bf2:	f023 0308 	bic.w	r3, r3, #8
 8003bf6:	b2da      	uxtb	r2, r3
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003bfe:	bf00      	nop
 8003c00:	370c      	adds	r7, #12
 8003c02:	46bd      	mov	sp, r7
 8003c04:	bd90      	pop	{r4, r7, pc}

08003c06 <ucg_com_PowerUp>:
 8003c06:	b590      	push	{r4, r7, lr}
 8003c08:	b085      	sub	sp, #20
 8003c0a:	af00      	add	r7, sp, #0
 8003c0c:	6078      	str	r0, [r7, #4]
 8003c0e:	460b      	mov	r3, r1
 8003c10:	807b      	strh	r3, [r7, #2]
 8003c12:	4613      	mov	r3, r2
 8003c14:	803b      	strh	r3, [r7, #0]
 8003c16:	887b      	ldrh	r3, [r7, #2]
 8003c18:	813b      	strh	r3, [r7, #8]
 8003c1a:	883b      	ldrh	r3, [r7, #0]
 8003c1c:	817b      	strh	r3, [r7, #10]
 8003c1e:	6878      	ldr	r0, [r7, #4]
 8003c20:	f7ff ffd2 	bl	8003bc8 <ucg_com_PowerDown>
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	2200      	movs	r2, #0
 8003c28:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	69dc      	ldr	r4, [r3, #28]
 8003c30:	f107 0308 	add.w	r3, r7, #8
 8003c34:	2200      	movs	r2, #0
 8003c36:	210a      	movs	r1, #10
 8003c38:	6878      	ldr	r0, [r7, #4]
 8003c3a:	47a0      	blx	r4
 8003c3c:	4603      	mov	r3, r0
 8003c3e:	81fb      	strh	r3, [r7, #14]
 8003c40:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003c44:	2b00      	cmp	r3, #0
 8003c46:	d008      	beq.n	8003c5a <ucg_com_PowerUp+0x54>
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003c4e:	f043 0308 	orr.w	r3, r3, #8
 8003c52:	b2da      	uxtb	r2, r3
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003c5a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003c5e:	4618      	mov	r0, r3
 8003c60:	3714      	adds	r7, #20
 8003c62:	46bd      	mov	sp, r7
 8003c64:	bd90      	pop	{r4, r7, pc}

08003c66 <ucg_com_SetLineStatus>:
 8003c66:	b590      	push	{r4, r7, lr}
 8003c68:	b083      	sub	sp, #12
 8003c6a:	af00      	add	r7, sp, #0
 8003c6c:	6078      	str	r0, [r7, #4]
 8003c6e:	4608      	mov	r0, r1
 8003c70:	4611      	mov	r1, r2
 8003c72:	461a      	mov	r2, r3
 8003c74:	4603      	mov	r3, r0
 8003c76:	70fb      	strb	r3, [r7, #3]
 8003c78:	460b      	mov	r3, r1
 8003c7a:	70bb      	strb	r3, [r7, #2]
 8003c7c:	4613      	mov	r3, r2
 8003c7e:	707b      	strb	r3, [r7, #1]
 8003c80:	78fb      	ldrb	r3, [r7, #3]
 8003c82:	2b00      	cmp	r3, #0
 8003c84:	d131      	bne.n	8003cea <ucg_com_SetLineStatus+0x84>
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003c8c:	78bb      	ldrb	r3, [r7, #2]
 8003c8e:	4013      	ands	r3, r2
 8003c90:	b2db      	uxtb	r3, r3
 8003c92:	2b00      	cmp	r3, #0
 8003c94:	d008      	beq.n	8003ca8 <ucg_com_SetLineStatus+0x42>
 8003c96:	687b      	ldr	r3, [r7, #4]
 8003c98:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8003c9c:	78bb      	ldrb	r3, [r7, #2]
 8003c9e:	4013      	ands	r3, r2
 8003ca0:	b2db      	uxtb	r3, r3
 8003ca2:	78ba      	ldrb	r2, [r7, #2]
 8003ca4:	429a      	cmp	r2, r3
 8003ca6:	d14b      	bne.n	8003d40 <ucg_com_SetLineStatus+0xda>
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	69dc      	ldr	r4, [r3, #28]
 8003cac:	787b      	ldrb	r3, [r7, #1]
 8003cae:	b219      	sxth	r1, r3
 8003cb0:	78fb      	ldrb	r3, [r7, #3]
 8003cb2:	b29a      	uxth	r2, r3
 8003cb4:	2300      	movs	r3, #0
 8003cb6:	6878      	ldr	r0, [r7, #4]
 8003cb8:	47a0      	blx	r4
 8003cba:	687b      	ldr	r3, [r7, #4]
 8003cbc:	f893 30af 	ldrb.w	r3, [r3, #175]	; 0xaf
 8003cc0:	b25a      	sxtb	r2, r3
 8003cc2:	f997 3002 	ldrsb.w	r3, [r7, #2]
 8003cc6:	43db      	mvns	r3, r3
 8003cc8:	b25b      	sxtb	r3, r3
 8003cca:	4013      	ands	r3, r2
 8003ccc:	b25b      	sxtb	r3, r3
 8003cce:	b2da      	uxtb	r2, r3
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003cd6:	687b      	ldr	r3, [r7, #4]
 8003cd8:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003cdc:	78bb      	ldrb	r3, [r7, #2]
 8003cde:	4313      	orrs	r3, r2
 8003ce0:	b2da      	uxtb	r2, r3
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003ce8:	e02a      	b.n	8003d40 <ucg_com_SetLineStatus+0xda>
 8003cea:	687b      	ldr	r3, [r7, #4]
 8003cec:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003cf0:	78bb      	ldrb	r3, [r7, #2]
 8003cf2:	4013      	ands	r3, r2
 8003cf4:	b2db      	uxtb	r3, r3
 8003cf6:	2b00      	cmp	r3, #0
 8003cf8:	d007      	beq.n	8003d0a <ucg_com_SetLineStatus+0xa4>
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8003d00:	78bb      	ldrb	r3, [r7, #2]
 8003d02:	4013      	ands	r3, r2
 8003d04:	b2db      	uxtb	r3, r3
 8003d06:	2b00      	cmp	r3, #0
 8003d08:	d11a      	bne.n	8003d40 <ucg_com_SetLineStatus+0xda>
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	69dc      	ldr	r4, [r3, #28]
 8003d0e:	787b      	ldrb	r3, [r7, #1]
 8003d10:	b219      	sxth	r1, r3
 8003d12:	78fb      	ldrb	r3, [r7, #3]
 8003d14:	b29a      	uxth	r2, r3
 8003d16:	2300      	movs	r3, #0
 8003d18:	6878      	ldr	r0, [r7, #4]
 8003d1a:	47a0      	blx	r4
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	f893 20af 	ldrb.w	r2, [r3, #175]	; 0xaf
 8003d22:	78bb      	ldrb	r3, [r7, #2]
 8003d24:	4313      	orrs	r3, r2
 8003d26:	b2da      	uxtb	r2, r3
 8003d28:	687b      	ldr	r3, [r7, #4]
 8003d2a:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8003d2e:	687b      	ldr	r3, [r7, #4]
 8003d30:	f893 20ae 	ldrb.w	r2, [r3, #174]	; 0xae
 8003d34:	78bb      	ldrb	r3, [r7, #2]
 8003d36:	4313      	orrs	r3, r2
 8003d38:	b2da      	uxtb	r2, r3
 8003d3a:	687b      	ldr	r3, [r7, #4]
 8003d3c:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8003d40:	bf00      	nop
 8003d42:	370c      	adds	r7, #12
 8003d44:	46bd      	mov	sp, r7
 8003d46:	bd90      	pop	{r4, r7, pc}

08003d48 <ucg_com_SetResetLineStatus>:
 8003d48:	b580      	push	{r7, lr}
 8003d4a:	b082      	sub	sp, #8
 8003d4c:	af00      	add	r7, sp, #0
 8003d4e:	6078      	str	r0, [r7, #4]
 8003d50:	460b      	mov	r3, r1
 8003d52:	70fb      	strb	r3, [r7, #3]
 8003d54:	78f9      	ldrb	r1, [r7, #3]
 8003d56:	230d      	movs	r3, #13
 8003d58:	2204      	movs	r2, #4
 8003d5a:	6878      	ldr	r0, [r7, #4]
 8003d5c:	f7ff ff83 	bl	8003c66 <ucg_com_SetLineStatus>
 8003d60:	bf00      	nop
 8003d62:	3708      	adds	r7, #8
 8003d64:	46bd      	mov	sp, r7
 8003d66:	bd80      	pop	{r7, pc}

08003d68 <ucg_com_SetCSLineStatus>:
 8003d68:	b580      	push	{r7, lr}
 8003d6a:	b082      	sub	sp, #8
 8003d6c:	af00      	add	r7, sp, #0
 8003d6e:	6078      	str	r0, [r7, #4]
 8003d70:	460b      	mov	r3, r1
 8003d72:	70fb      	strb	r3, [r7, #3]
 8003d74:	78f9      	ldrb	r1, [r7, #3]
 8003d76:	230e      	movs	r3, #14
 8003d78:	2202      	movs	r2, #2
 8003d7a:	6878      	ldr	r0, [r7, #4]
 8003d7c:	f7ff ff73 	bl	8003c66 <ucg_com_SetLineStatus>
 8003d80:	bf00      	nop
 8003d82:	3708      	adds	r7, #8
 8003d84:	46bd      	mov	sp, r7
 8003d86:	bd80      	pop	{r7, pc}

08003d88 <ucg_com_SetCDLineStatus>:
 8003d88:	b580      	push	{r7, lr}
 8003d8a:	b082      	sub	sp, #8
 8003d8c:	af00      	add	r7, sp, #0
 8003d8e:	6078      	str	r0, [r7, #4]
 8003d90:	460b      	mov	r3, r1
 8003d92:	70fb      	strb	r3, [r7, #3]
 8003d94:	78f9      	ldrb	r1, [r7, #3]
 8003d96:	230f      	movs	r3, #15
 8003d98:	2201      	movs	r2, #1
 8003d9a:	6878      	ldr	r0, [r7, #4]
 8003d9c:	f7ff ff63 	bl	8003c66 <ucg_com_SetLineStatus>
 8003da0:	bf00      	nop
 8003da2:	3708      	adds	r7, #8
 8003da4:	46bd      	mov	sp, r7
 8003da6:	bd80      	pop	{r7, pc}

08003da8 <ucg_com_DelayMicroseconds>:
 8003da8:	b590      	push	{r4, r7, lr}
 8003daa:	b083      	sub	sp, #12
 8003dac:	af00      	add	r7, sp, #0
 8003dae:	6078      	str	r0, [r7, #4]
 8003db0:	460b      	mov	r3, r1
 8003db2:	807b      	strh	r3, [r7, #2]
 8003db4:	687b      	ldr	r3, [r7, #4]
 8003db6:	69dc      	ldr	r4, [r3, #28]
 8003db8:	887a      	ldrh	r2, [r7, #2]
 8003dba:	2300      	movs	r3, #0
 8003dbc:	210c      	movs	r1, #12
 8003dbe:	6878      	ldr	r0, [r7, #4]
 8003dc0:	47a0      	blx	r4
 8003dc2:	bf00      	nop
 8003dc4:	370c      	adds	r7, #12
 8003dc6:	46bd      	mov	sp, r7
 8003dc8:	bd90      	pop	{r4, r7, pc}

08003dca <ucg_com_DelayMilliseconds>:
 8003dca:	b580      	push	{r7, lr}
 8003dcc:	b082      	sub	sp, #8
 8003dce:	af00      	add	r7, sp, #0
 8003dd0:	6078      	str	r0, [r7, #4]
 8003dd2:	460b      	mov	r3, r1
 8003dd4:	807b      	strh	r3, [r7, #2]
 8003dd6:	e007      	b.n	8003de8 <ucg_com_DelayMilliseconds+0x1e>
 8003dd8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003ddc:	6878      	ldr	r0, [r7, #4]
 8003dde:	f7ff ffe3 	bl	8003da8 <ucg_com_DelayMicroseconds>
 8003de2:	887b      	ldrh	r3, [r7, #2]
 8003de4:	3b01      	subs	r3, #1
 8003de6:	807b      	strh	r3, [r7, #2]
 8003de8:	887b      	ldrh	r3, [r7, #2]
 8003dea:	2b00      	cmp	r3, #0
 8003dec:	d1f4      	bne.n	8003dd8 <ucg_com_DelayMilliseconds+0xe>
 8003dee:	bf00      	nop
 8003df0:	3708      	adds	r7, #8
 8003df2:	46bd      	mov	sp, r7
 8003df4:	bd80      	pop	{r7, pc}

08003df6 <ucg_com_SendByte>:
 8003df6:	b590      	push	{r4, r7, lr}
 8003df8:	b083      	sub	sp, #12
 8003dfa:	af00      	add	r7, sp, #0
 8003dfc:	6078      	str	r0, [r7, #4]
 8003dfe:	460b      	mov	r3, r1
 8003e00:	70fb      	strb	r3, [r7, #3]
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	69dc      	ldr	r4, [r3, #28]
 8003e06:	78fb      	ldrb	r3, [r7, #3]
 8003e08:	b29a      	uxth	r2, r3
 8003e0a:	2300      	movs	r3, #0
 8003e0c:	2110      	movs	r1, #16
 8003e0e:	6878      	ldr	r0, [r7, #4]
 8003e10:	47a0      	blx	r4
 8003e12:	bf00      	nop
 8003e14:	370c      	adds	r7, #12
 8003e16:	46bd      	mov	sp, r7
 8003e18:	bd90      	pop	{r4, r7, pc}

08003e1a <ucg_com_SendStringP>:
 8003e1a:	b590      	push	{r4, r7, lr}
 8003e1c:	b087      	sub	sp, #28
 8003e1e:	af00      	add	r7, sp, #0
 8003e20:	60f8      	str	r0, [r7, #12]
 8003e22:	460b      	mov	r3, r1
 8003e24:	607a      	str	r2, [r7, #4]
 8003e26:	817b      	strh	r3, [r7, #10]
 8003e28:	e010      	b.n	8003e4c <ucg_com_SendStringP+0x32>
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	781b      	ldrb	r3, [r3, #0]
 8003e2e:	75fb      	strb	r3, [r7, #23]
 8003e30:	68fb      	ldr	r3, [r7, #12]
 8003e32:	69dc      	ldr	r4, [r3, #28]
 8003e34:	7dfb      	ldrb	r3, [r7, #23]
 8003e36:	b29a      	uxth	r2, r3
 8003e38:	2300      	movs	r3, #0
 8003e3a:	2110      	movs	r1, #16
 8003e3c:	68f8      	ldr	r0, [r7, #12]
 8003e3e:	47a0      	blx	r4
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	3301      	adds	r3, #1
 8003e44:	607b      	str	r3, [r7, #4]
 8003e46:	897b      	ldrh	r3, [r7, #10]
 8003e48:	3b01      	subs	r3, #1
 8003e4a:	817b      	strh	r3, [r7, #10]
 8003e4c:	897b      	ldrh	r3, [r7, #10]
 8003e4e:	2b00      	cmp	r3, #0
 8003e50:	d1eb      	bne.n	8003e2a <ucg_com_SendStringP+0x10>
 8003e52:	bf00      	nop
 8003e54:	371c      	adds	r7, #28
 8003e56:	46bd      	mov	sp, r7
 8003e58:	bd90      	pop	{r4, r7, pc}

08003e5a <ucg_com_SendCmdArg>:
 8003e5a:	b580      	push	{r7, lr}
 8003e5c:	b084      	sub	sp, #16
 8003e5e:	af00      	add	r7, sp, #0
 8003e60:	60f8      	str	r0, [r7, #12]
 8003e62:	60b9      	str	r1, [r7, #8]
 8003e64:	4611      	mov	r1, r2
 8003e66:	461a      	mov	r2, r3
 8003e68:	460b      	mov	r3, r1
 8003e6a:	71fb      	strb	r3, [r7, #7]
 8003e6c:	4613      	mov	r3, r2
 8003e6e:	71bb      	strb	r3, [r7, #6]
 8003e70:	68fb      	ldr	r3, [r7, #12]
 8003e72:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8003e76:	085b      	lsrs	r3, r3, #1
 8003e78:	b2db      	uxtb	r3, r3
 8003e7a:	f003 0301 	and.w	r3, r3, #1
 8003e7e:	b2db      	uxtb	r3, r3
 8003e80:	4619      	mov	r1, r3
 8003e82:	68f8      	ldr	r0, [r7, #12]
 8003e84:	f7ff ff80 	bl	8003d88 <ucg_com_SetCDLineStatus>
 8003e88:	79fb      	ldrb	r3, [r7, #7]
 8003e8a:	b29b      	uxth	r3, r3
 8003e8c:	68ba      	ldr	r2, [r7, #8]
 8003e8e:	4619      	mov	r1, r3
 8003e90:	68f8      	ldr	r0, [r7, #12]
 8003e92:	f7ff ffc2 	bl	8003e1a <ucg_com_SendStringP>
 8003e96:	79bb      	ldrb	r3, [r7, #6]
 8003e98:	2b00      	cmp	r3, #0
 8003e9a:	d014      	beq.n	8003ec6 <ucg_com_SendCmdArg+0x6c>
 8003e9c:	79fb      	ldrb	r3, [r7, #7]
 8003e9e:	68ba      	ldr	r2, [r7, #8]
 8003ea0:	4413      	add	r3, r2
 8003ea2:	60bb      	str	r3, [r7, #8]
 8003ea4:	68fb      	ldr	r3, [r7, #12]
 8003ea6:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8003eaa:	f003 0301 	and.w	r3, r3, #1
 8003eae:	b2db      	uxtb	r3, r3
 8003eb0:	4619      	mov	r1, r3
 8003eb2:	68f8      	ldr	r0, [r7, #12]
 8003eb4:	f7ff ff68 	bl	8003d88 <ucg_com_SetCDLineStatus>
 8003eb8:	79bb      	ldrb	r3, [r7, #6]
 8003eba:	b29b      	uxth	r3, r3
 8003ebc:	68ba      	ldr	r2, [r7, #8]
 8003ebe:	4619      	mov	r1, r3
 8003ec0:	68f8      	ldr	r0, [r7, #12]
 8003ec2:	f7ff ffaa 	bl	8003e1a <ucg_com_SendStringP>
 8003ec6:	bf00      	nop
 8003ec8:	3710      	adds	r7, #16
 8003eca:	46bd      	mov	sp, r7
 8003ecc:	bd80      	pop	{r7, pc}
	...

08003ed0 <ucg_com_SendCmdSeq>:
 8003ed0:	b580      	push	{r7, lr}
 8003ed2:	b084      	sub	sp, #16
 8003ed4:	af00      	add	r7, sp, #0
 8003ed6:	6078      	str	r0, [r7, #4]
 8003ed8:	6039      	str	r1, [r7, #0]
 8003eda:	683b      	ldr	r3, [r7, #0]
 8003edc:	781b      	ldrb	r3, [r3, #0]
 8003ede:	73fb      	strb	r3, [r7, #15]
 8003ee0:	7bfb      	ldrb	r3, [r7, #15]
 8003ee2:	091b      	lsrs	r3, r3, #4
 8003ee4:	73bb      	strb	r3, [r7, #14]
 8003ee6:	7bfb      	ldrb	r3, [r7, #15]
 8003ee8:	f003 030f 	and.w	r3, r3, #15
 8003eec:	737b      	strb	r3, [r7, #13]
 8003eee:	7bbb      	ldrb	r3, [r7, #14]
 8003ef0:	2b0f      	cmp	r3, #15
 8003ef2:	f200 8124 	bhi.w	800413e <ucg_com_SendCmdSeq+0x26e>
 8003ef6:	a201      	add	r2, pc, #4	; (adr r2, 8003efc <ucg_com_SendCmdSeq+0x2c>)
 8003ef8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003efc:	0800413f 	.word	0x0800413f
 8003f00:	08003f3d 	.word	0x08003f3d
 8003f04:	08003f3d 	.word	0x08003f3d
 8003f08:	08003f3d 	.word	0x08003f3d
 8003f0c:	0800413f 	.word	0x0800413f
 8003f10:	0800413f 	.word	0x0800413f
 8003f14:	08003f5d 	.word	0x08003f5d
 8003f18:	08003f8f 	.word	0x08003f8f
 8003f1c:	08003fd3 	.word	0x08003fd3
 8003f20:	08003fff 	.word	0x08003fff
 8003f24:	0800402b 	.word	0x0800402b
 8003f28:	0800408b 	.word	0x0800408b
 8003f2c:	0800413f 	.word	0x0800413f
 8003f30:	0800413f 	.word	0x0800413f
 8003f34:	0800413f 	.word	0x0800413f
 8003f38:	080040eb 	.word	0x080040eb
 8003f3c:	683b      	ldr	r3, [r7, #0]
 8003f3e:	1c59      	adds	r1, r3, #1
 8003f40:	7b7b      	ldrb	r3, [r7, #13]
 8003f42:	7bba      	ldrb	r2, [r7, #14]
 8003f44:	6878      	ldr	r0, [r7, #4]
 8003f46:	f7ff ff88 	bl	8003e5a <ucg_com_SendCmdArg>
 8003f4a:	7bbb      	ldrb	r3, [r7, #14]
 8003f4c:	1c5a      	adds	r2, r3, #1
 8003f4e:	7b7b      	ldrb	r3, [r7, #13]
 8003f50:	4413      	add	r3, r2
 8003f52:	461a      	mov	r2, r3
 8003f54:	683b      	ldr	r3, [r7, #0]
 8003f56:	4413      	add	r3, r2
 8003f58:	603b      	str	r3, [r7, #0]
 8003f5a:	e0ef      	b.n	800413c <ucg_com_SendCmdSeq+0x26c>
 8003f5c:	687b      	ldr	r3, [r7, #4]
 8003f5e:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8003f62:	f003 0301 	and.w	r3, r3, #1
 8003f66:	b2db      	uxtb	r3, r3
 8003f68:	4619      	mov	r1, r3
 8003f6a:	6878      	ldr	r0, [r7, #4]
 8003f6c:	f7ff ff0c 	bl	8003d88 <ucg_com_SetCDLineStatus>
 8003f70:	7b7b      	ldrb	r3, [r7, #13]
 8003f72:	b299      	uxth	r1, r3
 8003f74:	683b      	ldr	r3, [r7, #0]
 8003f76:	3301      	adds	r3, #1
 8003f78:	461a      	mov	r2, r3
 8003f7a:	6878      	ldr	r0, [r7, #4]
 8003f7c:	f7ff ff4d 	bl	8003e1a <ucg_com_SendStringP>
 8003f80:	7b7b      	ldrb	r3, [r7, #13]
 8003f82:	3301      	adds	r3, #1
 8003f84:	461a      	mov	r2, r3
 8003f86:	683b      	ldr	r3, [r7, #0]
 8003f88:	4413      	add	r3, r2
 8003f8a:	603b      	str	r3, [r7, #0]
 8003f8c:	e0d6      	b.n	800413c <ucg_com_SendCmdSeq+0x26c>
 8003f8e:	687b      	ldr	r3, [r7, #4]
 8003f90:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 8003f94:	085b      	lsrs	r3, r3, #1
 8003f96:	b2db      	uxtb	r3, r3
 8003f98:	f003 0301 	and.w	r3, r3, #1
 8003f9c:	2b00      	cmp	r3, #0
 8003f9e:	bf0c      	ite	eq
 8003fa0:	2301      	moveq	r3, #1
 8003fa2:	2300      	movne	r3, #0
 8003fa4:	b2db      	uxtb	r3, r3
 8003fa6:	4619      	mov	r1, r3
 8003fa8:	6878      	ldr	r0, [r7, #4]
 8003faa:	f7ff feed 	bl	8003d88 <ucg_com_SetCDLineStatus>
 8003fae:	7b7b      	ldrb	r3, [r7, #13]
 8003fb0:	2b00      	cmp	r3, #0
 8003fb2:	d007      	beq.n	8003fc4 <ucg_com_SendCmdSeq+0xf4>
 8003fb4:	7b7b      	ldrb	r3, [r7, #13]
 8003fb6:	b299      	uxth	r1, r3
 8003fb8:	683b      	ldr	r3, [r7, #0]
 8003fba:	3301      	adds	r3, #1
 8003fbc:	461a      	mov	r2, r3
 8003fbe:	6878      	ldr	r0, [r7, #4]
 8003fc0:	f7ff ff2b 	bl	8003e1a <ucg_com_SendStringP>
 8003fc4:	7b7b      	ldrb	r3, [r7, #13]
 8003fc6:	3301      	adds	r3, #1
 8003fc8:	461a      	mov	r2, r3
 8003fca:	683b      	ldr	r3, [r7, #0]
 8003fcc:	4413      	add	r3, r2
 8003fce:	603b      	str	r3, [r7, #0]
 8003fd0:	e0b4      	b.n	800413c <ucg_com_SendCmdSeq+0x26c>
 8003fd2:	683b      	ldr	r3, [r7, #0]
 8003fd4:	3301      	adds	r3, #1
 8003fd6:	603b      	str	r3, [r7, #0]
 8003fd8:	683b      	ldr	r3, [r7, #0]
 8003fda:	781b      	ldrb	r3, [r3, #0]
 8003fdc:	73fb      	strb	r3, [r7, #15]
 8003fde:	7b7b      	ldrb	r3, [r7, #13]
 8003fe0:	b29b      	uxth	r3, r3
 8003fe2:	021b      	lsls	r3, r3, #8
 8003fe4:	b29a      	uxth	r2, r3
 8003fe6:	7bfb      	ldrb	r3, [r7, #15]
 8003fe8:	b29b      	uxth	r3, r3
 8003fea:	4413      	add	r3, r2
 8003fec:	b29b      	uxth	r3, r3
 8003fee:	4619      	mov	r1, r3
 8003ff0:	6878      	ldr	r0, [r7, #4]
 8003ff2:	f7ff feea 	bl	8003dca <ucg_com_DelayMilliseconds>
 8003ff6:	683b      	ldr	r3, [r7, #0]
 8003ff8:	3301      	adds	r3, #1
 8003ffa:	603b      	str	r3, [r7, #0]
 8003ffc:	e09e      	b.n	800413c <ucg_com_SendCmdSeq+0x26c>
 8003ffe:	683b      	ldr	r3, [r7, #0]
 8004000:	3301      	adds	r3, #1
 8004002:	603b      	str	r3, [r7, #0]
 8004004:	683b      	ldr	r3, [r7, #0]
 8004006:	781b      	ldrb	r3, [r3, #0]
 8004008:	73fb      	strb	r3, [r7, #15]
 800400a:	7b7b      	ldrb	r3, [r7, #13]
 800400c:	b29b      	uxth	r3, r3
 800400e:	021b      	lsls	r3, r3, #8
 8004010:	b29a      	uxth	r2, r3
 8004012:	7bfb      	ldrb	r3, [r7, #15]
 8004014:	b29b      	uxth	r3, r3
 8004016:	4413      	add	r3, r2
 8004018:	b29b      	uxth	r3, r3
 800401a:	4619      	mov	r1, r3
 800401c:	6878      	ldr	r0, [r7, #4]
 800401e:	f7ff fec3 	bl	8003da8 <ucg_com_DelayMicroseconds>
 8004022:	683b      	ldr	r3, [r7, #0]
 8004024:	3301      	adds	r3, #1
 8004026:	603b      	str	r3, [r7, #0]
 8004028:	e088      	b.n	800413c <ucg_com_SendCmdSeq+0x26c>
 800402a:	683b      	ldr	r3, [r7, #0]
 800402c:	3301      	adds	r3, #1
 800402e:	603b      	str	r3, [r7, #0]
 8004030:	683b      	ldr	r3, [r7, #0]
 8004032:	781b      	ldrb	r3, [r3, #0]
 8004034:	73fb      	strb	r3, [r7, #15]
 8004036:	683b      	ldr	r3, [r7, #0]
 8004038:	3301      	adds	r3, #1
 800403a:	603b      	str	r3, [r7, #0]
 800403c:	683b      	ldr	r3, [r7, #0]
 800403e:	781b      	ldrb	r3, [r3, #0]
 8004040:	733b      	strb	r3, [r7, #12]
 8004042:	683b      	ldr	r3, [r7, #0]
 8004044:	3301      	adds	r3, #1
 8004046:	603b      	str	r3, [r7, #0]
 8004048:	687b      	ldr	r3, [r7, #4]
 800404a:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 800404e:	f003 0301 	and.w	r3, r3, #1
 8004052:	b2db      	uxtb	r3, r3
 8004054:	4619      	mov	r1, r3
 8004056:	6878      	ldr	r0, [r7, #4]
 8004058:	f7ff fe96 	bl	8003d88 <ucg_com_SetCDLineStatus>
 800405c:	687b      	ldr	r3, [r7, #4]
 800405e:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8004062:	461a      	mov	r2, r3
 8004064:	687b      	ldr	r3, [r7, #4]
 8004066:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 800406a:	441a      	add	r2, r3
 800406c:	7b7b      	ldrb	r3, [r7, #13]
 800406e:	fa42 f303 	asr.w	r3, r2, r3
 8004072:	b2da      	uxtb	r2, r3
 8004074:	7bfb      	ldrb	r3, [r7, #15]
 8004076:	4013      	ands	r3, r2
 8004078:	b2da      	uxtb	r2, r3
 800407a:	7b3b      	ldrb	r3, [r7, #12]
 800407c:	4313      	orrs	r3, r2
 800407e:	b2db      	uxtb	r3, r3
 8004080:	4619      	mov	r1, r3
 8004082:	6878      	ldr	r0, [r7, #4]
 8004084:	f7ff feb7 	bl	8003df6 <ucg_com_SendByte>
 8004088:	e058      	b.n	800413c <ucg_com_SendCmdSeq+0x26c>
 800408a:	683b      	ldr	r3, [r7, #0]
 800408c:	3301      	adds	r3, #1
 800408e:	603b      	str	r3, [r7, #0]
 8004090:	683b      	ldr	r3, [r7, #0]
 8004092:	781b      	ldrb	r3, [r3, #0]
 8004094:	73fb      	strb	r3, [r7, #15]
 8004096:	683b      	ldr	r3, [r7, #0]
 8004098:	3301      	adds	r3, #1
 800409a:	603b      	str	r3, [r7, #0]
 800409c:	683b      	ldr	r3, [r7, #0]
 800409e:	781b      	ldrb	r3, [r3, #0]
 80040a0:	733b      	strb	r3, [r7, #12]
 80040a2:	683b      	ldr	r3, [r7, #0]
 80040a4:	3301      	adds	r3, #1
 80040a6:	603b      	str	r3, [r7, #0]
 80040a8:	687b      	ldr	r3, [r7, #4]
 80040aa:	f893 30b0 	ldrb.w	r3, [r3, #176]	; 0xb0
 80040ae:	f003 0301 	and.w	r3, r3, #1
 80040b2:	b2db      	uxtb	r3, r3
 80040b4:	4619      	mov	r1, r3
 80040b6:	6878      	ldr	r0, [r7, #4]
 80040b8:	f7ff fe66 	bl	8003d88 <ucg_com_SetCDLineStatus>
 80040bc:	687b      	ldr	r3, [r7, #4]
 80040be:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 80040c2:	461a      	mov	r2, r3
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
 80040ca:	441a      	add	r2, r3
 80040cc:	7b7b      	ldrb	r3, [r7, #13]
 80040ce:	fa42 f303 	asr.w	r3, r2, r3
 80040d2:	b2da      	uxtb	r2, r3
 80040d4:	7bfb      	ldrb	r3, [r7, #15]
 80040d6:	4013      	ands	r3, r2
 80040d8:	b2da      	uxtb	r2, r3
 80040da:	7b3b      	ldrb	r3, [r7, #12]
 80040dc:	4313      	orrs	r3, r2
 80040de:	b2db      	uxtb	r3, r3
 80040e0:	4619      	mov	r1, r3
 80040e2:	6878      	ldr	r0, [r7, #4]
 80040e4:	f7ff fe87 	bl	8003df6 <ucg_com_SendByte>
 80040e8:	e028      	b.n	800413c <ucg_com_SendCmdSeq+0x26c>
 80040ea:	7b7b      	ldrb	r3, [r7, #13]
 80040ec:	089b      	lsrs	r3, r3, #2
 80040ee:	73bb      	strb	r3, [r7, #14]
 80040f0:	7b7b      	ldrb	r3, [r7, #13]
 80040f2:	f003 0303 	and.w	r3, r3, #3
 80040f6:	737b      	strb	r3, [r7, #13]
 80040f8:	7bbb      	ldrb	r3, [r7, #14]
 80040fa:	2b01      	cmp	r3, #1
 80040fc:	d00c      	beq.n	8004118 <ucg_com_SendCmdSeq+0x248>
 80040fe:	2b03      	cmp	r3, #3
 8004100:	d013      	beq.n	800412a <ucg_com_SendCmdSeq+0x25a>
 8004102:	2b00      	cmp	r3, #0
 8004104:	d116      	bne.n	8004134 <ucg_com_SendCmdSeq+0x264>
 8004106:	7b7b      	ldrb	r3, [r7, #13]
 8004108:	f003 0301 	and.w	r3, r3, #1
 800410c:	b2db      	uxtb	r3, r3
 800410e:	4619      	mov	r1, r3
 8004110:	6878      	ldr	r0, [r7, #4]
 8004112:	f7ff fe19 	bl	8003d48 <ucg_com_SetResetLineStatus>
 8004116:	e00d      	b.n	8004134 <ucg_com_SendCmdSeq+0x264>
 8004118:	7b7b      	ldrb	r3, [r7, #13]
 800411a:	f003 0301 	and.w	r3, r3, #1
 800411e:	b2db      	uxtb	r3, r3
 8004120:	4619      	mov	r1, r3
 8004122:	6878      	ldr	r0, [r7, #4]
 8004124:	f7ff fe20 	bl	8003d68 <ucg_com_SetCSLineStatus>
 8004128:	e004      	b.n	8004134 <ucg_com_SendCmdSeq+0x264>
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	7b7a      	ldrb	r2, [r7, #13]
 800412e:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8004132:	bf00      	nop
 8004134:	683b      	ldr	r3, [r7, #0]
 8004136:	3301      	adds	r3, #1
 8004138:	603b      	str	r3, [r7, #0]
 800413a:	bf00      	nop
 800413c:	e6cd      	b.n	8003eda <ucg_com_SendCmdSeq+0xa>
 800413e:	bf00      	nop
 8004140:	3710      	adds	r7, #16
 8004142:	46bd      	mov	sp, r7
 8004144:	bd80      	pop	{r7, pc}
 8004146:	bf00      	nop

08004148 <siprintf>:
 8004148:	b40e      	push	{r1, r2, r3}
 800414a:	b500      	push	{lr}
 800414c:	b09c      	sub	sp, #112	; 0x70
 800414e:	ab1d      	add	r3, sp, #116	; 0x74
 8004150:	9002      	str	r0, [sp, #8]
 8004152:	9006      	str	r0, [sp, #24]
 8004154:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004158:	4809      	ldr	r0, [pc, #36]	; (8004180 <siprintf+0x38>)
 800415a:	9107      	str	r1, [sp, #28]
 800415c:	9104      	str	r1, [sp, #16]
 800415e:	4909      	ldr	r1, [pc, #36]	; (8004184 <siprintf+0x3c>)
 8004160:	f853 2b04 	ldr.w	r2, [r3], #4
 8004164:	9105      	str	r1, [sp, #20]
 8004166:	6800      	ldr	r0, [r0, #0]
 8004168:	9301      	str	r3, [sp, #4]
 800416a:	a902      	add	r1, sp, #8
 800416c:	f000 f992 	bl	8004494 <_svfiprintf_r>
 8004170:	9b02      	ldr	r3, [sp, #8]
 8004172:	2200      	movs	r2, #0
 8004174:	701a      	strb	r2, [r3, #0]
 8004176:	b01c      	add	sp, #112	; 0x70
 8004178:	f85d eb04 	ldr.w	lr, [sp], #4
 800417c:	b003      	add	sp, #12
 800417e:	4770      	bx	lr
 8004180:	20000074 	.word	0x20000074
 8004184:	ffff0208 	.word	0xffff0208

08004188 <memset>:
 8004188:	4402      	add	r2, r0
 800418a:	4603      	mov	r3, r0
 800418c:	4293      	cmp	r3, r2
 800418e:	d100      	bne.n	8004192 <memset+0xa>
 8004190:	4770      	bx	lr
 8004192:	f803 1b01 	strb.w	r1, [r3], #1
 8004196:	e7f9      	b.n	800418c <memset+0x4>

08004198 <__errno>:
 8004198:	4b01      	ldr	r3, [pc, #4]	; (80041a0 <__errno+0x8>)
 800419a:	6818      	ldr	r0, [r3, #0]
 800419c:	4770      	bx	lr
 800419e:	bf00      	nop
 80041a0:	20000074 	.word	0x20000074

080041a4 <__libc_init_array>:
 80041a4:	b570      	push	{r4, r5, r6, lr}
 80041a6:	4d0d      	ldr	r5, [pc, #52]	; (80041dc <__libc_init_array+0x38>)
 80041a8:	4c0d      	ldr	r4, [pc, #52]	; (80041e0 <__libc_init_array+0x3c>)
 80041aa:	1b64      	subs	r4, r4, r5
 80041ac:	10a4      	asrs	r4, r4, #2
 80041ae:	2600      	movs	r6, #0
 80041b0:	42a6      	cmp	r6, r4
 80041b2:	d109      	bne.n	80041c8 <__libc_init_array+0x24>
 80041b4:	4d0b      	ldr	r5, [pc, #44]	; (80041e4 <__libc_init_array+0x40>)
 80041b6:	4c0c      	ldr	r4, [pc, #48]	; (80041e8 <__libc_init_array+0x44>)
 80041b8:	f000 fc6a 	bl	8004a90 <_init>
 80041bc:	1b64      	subs	r4, r4, r5
 80041be:	10a4      	asrs	r4, r4, #2
 80041c0:	2600      	movs	r6, #0
 80041c2:	42a6      	cmp	r6, r4
 80041c4:	d105      	bne.n	80041d2 <__libc_init_array+0x2e>
 80041c6:	bd70      	pop	{r4, r5, r6, pc}
 80041c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80041cc:	4798      	blx	r3
 80041ce:	3601      	adds	r6, #1
 80041d0:	e7ee      	b.n	80041b0 <__libc_init_array+0xc>
 80041d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80041d6:	4798      	blx	r3
 80041d8:	3601      	adds	r6, #1
 80041da:	e7f2      	b.n	80041c2 <__libc_init_array+0x1e>
 80041dc:	080053b0 	.word	0x080053b0
 80041e0:	080053b0 	.word	0x080053b0
 80041e4:	080053b0 	.word	0x080053b0
 80041e8:	080053b4 	.word	0x080053b4

080041ec <__retarget_lock_acquire_recursive>:
 80041ec:	4770      	bx	lr

080041ee <__retarget_lock_release_recursive>:
 80041ee:	4770      	bx	lr

080041f0 <_free_r>:
 80041f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80041f2:	2900      	cmp	r1, #0
 80041f4:	d044      	beq.n	8004280 <_free_r+0x90>
 80041f6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80041fa:	9001      	str	r0, [sp, #4]
 80041fc:	2b00      	cmp	r3, #0
 80041fe:	f1a1 0404 	sub.w	r4, r1, #4
 8004202:	bfb8      	it	lt
 8004204:	18e4      	addlt	r4, r4, r3
 8004206:	f000 f8df 	bl	80043c8 <__malloc_lock>
 800420a:	4a1e      	ldr	r2, [pc, #120]	; (8004284 <_free_r+0x94>)
 800420c:	9801      	ldr	r0, [sp, #4]
 800420e:	6813      	ldr	r3, [r2, #0]
 8004210:	b933      	cbnz	r3, 8004220 <_free_r+0x30>
 8004212:	6063      	str	r3, [r4, #4]
 8004214:	6014      	str	r4, [r2, #0]
 8004216:	b003      	add	sp, #12
 8004218:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800421c:	f000 b8da 	b.w	80043d4 <__malloc_unlock>
 8004220:	42a3      	cmp	r3, r4
 8004222:	d908      	bls.n	8004236 <_free_r+0x46>
 8004224:	6825      	ldr	r5, [r4, #0]
 8004226:	1961      	adds	r1, r4, r5
 8004228:	428b      	cmp	r3, r1
 800422a:	bf01      	itttt	eq
 800422c:	6819      	ldreq	r1, [r3, #0]
 800422e:	685b      	ldreq	r3, [r3, #4]
 8004230:	1949      	addeq	r1, r1, r5
 8004232:	6021      	streq	r1, [r4, #0]
 8004234:	e7ed      	b.n	8004212 <_free_r+0x22>
 8004236:	461a      	mov	r2, r3
 8004238:	685b      	ldr	r3, [r3, #4]
 800423a:	b10b      	cbz	r3, 8004240 <_free_r+0x50>
 800423c:	42a3      	cmp	r3, r4
 800423e:	d9fa      	bls.n	8004236 <_free_r+0x46>
 8004240:	6811      	ldr	r1, [r2, #0]
 8004242:	1855      	adds	r5, r2, r1
 8004244:	42a5      	cmp	r5, r4
 8004246:	d10b      	bne.n	8004260 <_free_r+0x70>
 8004248:	6824      	ldr	r4, [r4, #0]
 800424a:	4421      	add	r1, r4
 800424c:	1854      	adds	r4, r2, r1
 800424e:	42a3      	cmp	r3, r4
 8004250:	6011      	str	r1, [r2, #0]
 8004252:	d1e0      	bne.n	8004216 <_free_r+0x26>
 8004254:	681c      	ldr	r4, [r3, #0]
 8004256:	685b      	ldr	r3, [r3, #4]
 8004258:	6053      	str	r3, [r2, #4]
 800425a:	440c      	add	r4, r1
 800425c:	6014      	str	r4, [r2, #0]
 800425e:	e7da      	b.n	8004216 <_free_r+0x26>
 8004260:	d902      	bls.n	8004268 <_free_r+0x78>
 8004262:	230c      	movs	r3, #12
 8004264:	6003      	str	r3, [r0, #0]
 8004266:	e7d6      	b.n	8004216 <_free_r+0x26>
 8004268:	6825      	ldr	r5, [r4, #0]
 800426a:	1961      	adds	r1, r4, r5
 800426c:	428b      	cmp	r3, r1
 800426e:	bf04      	itt	eq
 8004270:	6819      	ldreq	r1, [r3, #0]
 8004272:	685b      	ldreq	r3, [r3, #4]
 8004274:	6063      	str	r3, [r4, #4]
 8004276:	bf04      	itt	eq
 8004278:	1949      	addeq	r1, r1, r5
 800427a:	6021      	streq	r1, [r4, #0]
 800427c:	6054      	str	r4, [r2, #4]
 800427e:	e7ca      	b.n	8004216 <_free_r+0x26>
 8004280:	b003      	add	sp, #12
 8004282:	bd30      	pop	{r4, r5, pc}
 8004284:	20001490 	.word	0x20001490

08004288 <sbrk_aligned>:
 8004288:	b570      	push	{r4, r5, r6, lr}
 800428a:	4e0e      	ldr	r6, [pc, #56]	; (80042c4 <sbrk_aligned+0x3c>)
 800428c:	460c      	mov	r4, r1
 800428e:	6831      	ldr	r1, [r6, #0]
 8004290:	4605      	mov	r5, r0
 8004292:	b911      	cbnz	r1, 800429a <sbrk_aligned+0x12>
 8004294:	f000 fba6 	bl	80049e4 <_sbrk_r>
 8004298:	6030      	str	r0, [r6, #0]
 800429a:	4621      	mov	r1, r4
 800429c:	4628      	mov	r0, r5
 800429e:	f000 fba1 	bl	80049e4 <_sbrk_r>
 80042a2:	1c43      	adds	r3, r0, #1
 80042a4:	d00a      	beq.n	80042bc <sbrk_aligned+0x34>
 80042a6:	1cc4      	adds	r4, r0, #3
 80042a8:	f024 0403 	bic.w	r4, r4, #3
 80042ac:	42a0      	cmp	r0, r4
 80042ae:	d007      	beq.n	80042c0 <sbrk_aligned+0x38>
 80042b0:	1a21      	subs	r1, r4, r0
 80042b2:	4628      	mov	r0, r5
 80042b4:	f000 fb96 	bl	80049e4 <_sbrk_r>
 80042b8:	3001      	adds	r0, #1
 80042ba:	d101      	bne.n	80042c0 <sbrk_aligned+0x38>
 80042bc:	f04f 34ff 	mov.w	r4, #4294967295
 80042c0:	4620      	mov	r0, r4
 80042c2:	bd70      	pop	{r4, r5, r6, pc}
 80042c4:	20001494 	.word	0x20001494

080042c8 <_malloc_r>:
 80042c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80042cc:	1ccd      	adds	r5, r1, #3
 80042ce:	f025 0503 	bic.w	r5, r5, #3
 80042d2:	3508      	adds	r5, #8
 80042d4:	2d0c      	cmp	r5, #12
 80042d6:	bf38      	it	cc
 80042d8:	250c      	movcc	r5, #12
 80042da:	2d00      	cmp	r5, #0
 80042dc:	4607      	mov	r7, r0
 80042de:	db01      	blt.n	80042e4 <_malloc_r+0x1c>
 80042e0:	42a9      	cmp	r1, r5
 80042e2:	d905      	bls.n	80042f0 <_malloc_r+0x28>
 80042e4:	230c      	movs	r3, #12
 80042e6:	603b      	str	r3, [r7, #0]
 80042e8:	2600      	movs	r6, #0
 80042ea:	4630      	mov	r0, r6
 80042ec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80042f0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80043c4 <_malloc_r+0xfc>
 80042f4:	f000 f868 	bl	80043c8 <__malloc_lock>
 80042f8:	f8d8 3000 	ldr.w	r3, [r8]
 80042fc:	461c      	mov	r4, r3
 80042fe:	bb5c      	cbnz	r4, 8004358 <_malloc_r+0x90>
 8004300:	4629      	mov	r1, r5
 8004302:	4638      	mov	r0, r7
 8004304:	f7ff ffc0 	bl	8004288 <sbrk_aligned>
 8004308:	1c43      	adds	r3, r0, #1
 800430a:	4604      	mov	r4, r0
 800430c:	d155      	bne.n	80043ba <_malloc_r+0xf2>
 800430e:	f8d8 4000 	ldr.w	r4, [r8]
 8004312:	4626      	mov	r6, r4
 8004314:	2e00      	cmp	r6, #0
 8004316:	d145      	bne.n	80043a4 <_malloc_r+0xdc>
 8004318:	2c00      	cmp	r4, #0
 800431a:	d048      	beq.n	80043ae <_malloc_r+0xe6>
 800431c:	6823      	ldr	r3, [r4, #0]
 800431e:	4631      	mov	r1, r6
 8004320:	4638      	mov	r0, r7
 8004322:	eb04 0903 	add.w	r9, r4, r3
 8004326:	f000 fb5d 	bl	80049e4 <_sbrk_r>
 800432a:	4581      	cmp	r9, r0
 800432c:	d13f      	bne.n	80043ae <_malloc_r+0xe6>
 800432e:	6821      	ldr	r1, [r4, #0]
 8004330:	1a6d      	subs	r5, r5, r1
 8004332:	4629      	mov	r1, r5
 8004334:	4638      	mov	r0, r7
 8004336:	f7ff ffa7 	bl	8004288 <sbrk_aligned>
 800433a:	3001      	adds	r0, #1
 800433c:	d037      	beq.n	80043ae <_malloc_r+0xe6>
 800433e:	6823      	ldr	r3, [r4, #0]
 8004340:	442b      	add	r3, r5
 8004342:	6023      	str	r3, [r4, #0]
 8004344:	f8d8 3000 	ldr.w	r3, [r8]
 8004348:	2b00      	cmp	r3, #0
 800434a:	d038      	beq.n	80043be <_malloc_r+0xf6>
 800434c:	685a      	ldr	r2, [r3, #4]
 800434e:	42a2      	cmp	r2, r4
 8004350:	d12b      	bne.n	80043aa <_malloc_r+0xe2>
 8004352:	2200      	movs	r2, #0
 8004354:	605a      	str	r2, [r3, #4]
 8004356:	e00f      	b.n	8004378 <_malloc_r+0xb0>
 8004358:	6822      	ldr	r2, [r4, #0]
 800435a:	1b52      	subs	r2, r2, r5
 800435c:	d41f      	bmi.n	800439e <_malloc_r+0xd6>
 800435e:	2a0b      	cmp	r2, #11
 8004360:	d917      	bls.n	8004392 <_malloc_r+0xca>
 8004362:	1961      	adds	r1, r4, r5
 8004364:	42a3      	cmp	r3, r4
 8004366:	6025      	str	r5, [r4, #0]
 8004368:	bf18      	it	ne
 800436a:	6059      	strne	r1, [r3, #4]
 800436c:	6863      	ldr	r3, [r4, #4]
 800436e:	bf08      	it	eq
 8004370:	f8c8 1000 	streq.w	r1, [r8]
 8004374:	5162      	str	r2, [r4, r5]
 8004376:	604b      	str	r3, [r1, #4]
 8004378:	4638      	mov	r0, r7
 800437a:	f104 060b 	add.w	r6, r4, #11
 800437e:	f000 f829 	bl	80043d4 <__malloc_unlock>
 8004382:	f026 0607 	bic.w	r6, r6, #7
 8004386:	1d23      	adds	r3, r4, #4
 8004388:	1af2      	subs	r2, r6, r3
 800438a:	d0ae      	beq.n	80042ea <_malloc_r+0x22>
 800438c:	1b9b      	subs	r3, r3, r6
 800438e:	50a3      	str	r3, [r4, r2]
 8004390:	e7ab      	b.n	80042ea <_malloc_r+0x22>
 8004392:	42a3      	cmp	r3, r4
 8004394:	6862      	ldr	r2, [r4, #4]
 8004396:	d1dd      	bne.n	8004354 <_malloc_r+0x8c>
 8004398:	f8c8 2000 	str.w	r2, [r8]
 800439c:	e7ec      	b.n	8004378 <_malloc_r+0xb0>
 800439e:	4623      	mov	r3, r4
 80043a0:	6864      	ldr	r4, [r4, #4]
 80043a2:	e7ac      	b.n	80042fe <_malloc_r+0x36>
 80043a4:	4634      	mov	r4, r6
 80043a6:	6876      	ldr	r6, [r6, #4]
 80043a8:	e7b4      	b.n	8004314 <_malloc_r+0x4c>
 80043aa:	4613      	mov	r3, r2
 80043ac:	e7cc      	b.n	8004348 <_malloc_r+0x80>
 80043ae:	230c      	movs	r3, #12
 80043b0:	603b      	str	r3, [r7, #0]
 80043b2:	4638      	mov	r0, r7
 80043b4:	f000 f80e 	bl	80043d4 <__malloc_unlock>
 80043b8:	e797      	b.n	80042ea <_malloc_r+0x22>
 80043ba:	6025      	str	r5, [r4, #0]
 80043bc:	e7dc      	b.n	8004378 <_malloc_r+0xb0>
 80043be:	605b      	str	r3, [r3, #4]
 80043c0:	deff      	udf	#255	; 0xff
 80043c2:	bf00      	nop
 80043c4:	20001490 	.word	0x20001490

080043c8 <__malloc_lock>:
 80043c8:	4801      	ldr	r0, [pc, #4]	; (80043d0 <__malloc_lock+0x8>)
 80043ca:	f7ff bf0f 	b.w	80041ec <__retarget_lock_acquire_recursive>
 80043ce:	bf00      	nop
 80043d0:	2000148c 	.word	0x2000148c

080043d4 <__malloc_unlock>:
 80043d4:	4801      	ldr	r0, [pc, #4]	; (80043dc <__malloc_unlock+0x8>)
 80043d6:	f7ff bf0a 	b.w	80041ee <__retarget_lock_release_recursive>
 80043da:	bf00      	nop
 80043dc:	2000148c 	.word	0x2000148c

080043e0 <__ssputs_r>:
 80043e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80043e4:	688e      	ldr	r6, [r1, #8]
 80043e6:	461f      	mov	r7, r3
 80043e8:	42be      	cmp	r6, r7
 80043ea:	680b      	ldr	r3, [r1, #0]
 80043ec:	4682      	mov	sl, r0
 80043ee:	460c      	mov	r4, r1
 80043f0:	4690      	mov	r8, r2
 80043f2:	d82c      	bhi.n	800444e <__ssputs_r+0x6e>
 80043f4:	898a      	ldrh	r2, [r1, #12]
 80043f6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80043fa:	d026      	beq.n	800444a <__ssputs_r+0x6a>
 80043fc:	6965      	ldr	r5, [r4, #20]
 80043fe:	6909      	ldr	r1, [r1, #16]
 8004400:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004404:	eba3 0901 	sub.w	r9, r3, r1
 8004408:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800440c:	1c7b      	adds	r3, r7, #1
 800440e:	444b      	add	r3, r9
 8004410:	106d      	asrs	r5, r5, #1
 8004412:	429d      	cmp	r5, r3
 8004414:	bf38      	it	cc
 8004416:	461d      	movcc	r5, r3
 8004418:	0553      	lsls	r3, r2, #21
 800441a:	d527      	bpl.n	800446c <__ssputs_r+0x8c>
 800441c:	4629      	mov	r1, r5
 800441e:	f7ff ff53 	bl	80042c8 <_malloc_r>
 8004422:	4606      	mov	r6, r0
 8004424:	b360      	cbz	r0, 8004480 <__ssputs_r+0xa0>
 8004426:	6921      	ldr	r1, [r4, #16]
 8004428:	464a      	mov	r2, r9
 800442a:	f000 faeb 	bl	8004a04 <memcpy>
 800442e:	89a3      	ldrh	r3, [r4, #12]
 8004430:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8004434:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004438:	81a3      	strh	r3, [r4, #12]
 800443a:	6126      	str	r6, [r4, #16]
 800443c:	6165      	str	r5, [r4, #20]
 800443e:	444e      	add	r6, r9
 8004440:	eba5 0509 	sub.w	r5, r5, r9
 8004444:	6026      	str	r6, [r4, #0]
 8004446:	60a5      	str	r5, [r4, #8]
 8004448:	463e      	mov	r6, r7
 800444a:	42be      	cmp	r6, r7
 800444c:	d900      	bls.n	8004450 <__ssputs_r+0x70>
 800444e:	463e      	mov	r6, r7
 8004450:	6820      	ldr	r0, [r4, #0]
 8004452:	4632      	mov	r2, r6
 8004454:	4641      	mov	r1, r8
 8004456:	f000 faab 	bl	80049b0 <memmove>
 800445a:	68a3      	ldr	r3, [r4, #8]
 800445c:	1b9b      	subs	r3, r3, r6
 800445e:	60a3      	str	r3, [r4, #8]
 8004460:	6823      	ldr	r3, [r4, #0]
 8004462:	4433      	add	r3, r6
 8004464:	6023      	str	r3, [r4, #0]
 8004466:	2000      	movs	r0, #0
 8004468:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800446c:	462a      	mov	r2, r5
 800446e:	f000 fad7 	bl	8004a20 <_realloc_r>
 8004472:	4606      	mov	r6, r0
 8004474:	2800      	cmp	r0, #0
 8004476:	d1e0      	bne.n	800443a <__ssputs_r+0x5a>
 8004478:	6921      	ldr	r1, [r4, #16]
 800447a:	4650      	mov	r0, sl
 800447c:	f7ff feb8 	bl	80041f0 <_free_r>
 8004480:	230c      	movs	r3, #12
 8004482:	f8ca 3000 	str.w	r3, [sl]
 8004486:	89a3      	ldrh	r3, [r4, #12]
 8004488:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800448c:	81a3      	strh	r3, [r4, #12]
 800448e:	f04f 30ff 	mov.w	r0, #4294967295
 8004492:	e7e9      	b.n	8004468 <__ssputs_r+0x88>

08004494 <_svfiprintf_r>:
 8004494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004498:	4698      	mov	r8, r3
 800449a:	898b      	ldrh	r3, [r1, #12]
 800449c:	061b      	lsls	r3, r3, #24
 800449e:	b09d      	sub	sp, #116	; 0x74
 80044a0:	4607      	mov	r7, r0
 80044a2:	460d      	mov	r5, r1
 80044a4:	4614      	mov	r4, r2
 80044a6:	d50e      	bpl.n	80044c6 <_svfiprintf_r+0x32>
 80044a8:	690b      	ldr	r3, [r1, #16]
 80044aa:	b963      	cbnz	r3, 80044c6 <_svfiprintf_r+0x32>
 80044ac:	2140      	movs	r1, #64	; 0x40
 80044ae:	f7ff ff0b 	bl	80042c8 <_malloc_r>
 80044b2:	6028      	str	r0, [r5, #0]
 80044b4:	6128      	str	r0, [r5, #16]
 80044b6:	b920      	cbnz	r0, 80044c2 <_svfiprintf_r+0x2e>
 80044b8:	230c      	movs	r3, #12
 80044ba:	603b      	str	r3, [r7, #0]
 80044bc:	f04f 30ff 	mov.w	r0, #4294967295
 80044c0:	e0d0      	b.n	8004664 <_svfiprintf_r+0x1d0>
 80044c2:	2340      	movs	r3, #64	; 0x40
 80044c4:	616b      	str	r3, [r5, #20]
 80044c6:	2300      	movs	r3, #0
 80044c8:	9309      	str	r3, [sp, #36]	; 0x24
 80044ca:	2320      	movs	r3, #32
 80044cc:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80044d0:	f8cd 800c 	str.w	r8, [sp, #12]
 80044d4:	2330      	movs	r3, #48	; 0x30
 80044d6:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800467c <_svfiprintf_r+0x1e8>
 80044da:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80044de:	f04f 0901 	mov.w	r9, #1
 80044e2:	4623      	mov	r3, r4
 80044e4:	469a      	mov	sl, r3
 80044e6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80044ea:	b10a      	cbz	r2, 80044f0 <_svfiprintf_r+0x5c>
 80044ec:	2a25      	cmp	r2, #37	; 0x25
 80044ee:	d1f9      	bne.n	80044e4 <_svfiprintf_r+0x50>
 80044f0:	ebba 0b04 	subs.w	fp, sl, r4
 80044f4:	d00b      	beq.n	800450e <_svfiprintf_r+0x7a>
 80044f6:	465b      	mov	r3, fp
 80044f8:	4622      	mov	r2, r4
 80044fa:	4629      	mov	r1, r5
 80044fc:	4638      	mov	r0, r7
 80044fe:	f7ff ff6f 	bl	80043e0 <__ssputs_r>
 8004502:	3001      	adds	r0, #1
 8004504:	f000 80a9 	beq.w	800465a <_svfiprintf_r+0x1c6>
 8004508:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800450a:	445a      	add	r2, fp
 800450c:	9209      	str	r2, [sp, #36]	; 0x24
 800450e:	f89a 3000 	ldrb.w	r3, [sl]
 8004512:	2b00      	cmp	r3, #0
 8004514:	f000 80a1 	beq.w	800465a <_svfiprintf_r+0x1c6>
 8004518:	2300      	movs	r3, #0
 800451a:	f04f 32ff 	mov.w	r2, #4294967295
 800451e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004522:	f10a 0a01 	add.w	sl, sl, #1
 8004526:	9304      	str	r3, [sp, #16]
 8004528:	9307      	str	r3, [sp, #28]
 800452a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800452e:	931a      	str	r3, [sp, #104]	; 0x68
 8004530:	4654      	mov	r4, sl
 8004532:	2205      	movs	r2, #5
 8004534:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004538:	4850      	ldr	r0, [pc, #320]	; (800467c <_svfiprintf_r+0x1e8>)
 800453a:	f7fb fe51 	bl	80001e0 <memchr>
 800453e:	9a04      	ldr	r2, [sp, #16]
 8004540:	b9d8      	cbnz	r0, 800457a <_svfiprintf_r+0xe6>
 8004542:	06d0      	lsls	r0, r2, #27
 8004544:	bf44      	itt	mi
 8004546:	2320      	movmi	r3, #32
 8004548:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800454c:	0711      	lsls	r1, r2, #28
 800454e:	bf44      	itt	mi
 8004550:	232b      	movmi	r3, #43	; 0x2b
 8004552:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004556:	f89a 3000 	ldrb.w	r3, [sl]
 800455a:	2b2a      	cmp	r3, #42	; 0x2a
 800455c:	d015      	beq.n	800458a <_svfiprintf_r+0xf6>
 800455e:	9a07      	ldr	r2, [sp, #28]
 8004560:	4654      	mov	r4, sl
 8004562:	2000      	movs	r0, #0
 8004564:	f04f 0c0a 	mov.w	ip, #10
 8004568:	4621      	mov	r1, r4
 800456a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800456e:	3b30      	subs	r3, #48	; 0x30
 8004570:	2b09      	cmp	r3, #9
 8004572:	d94d      	bls.n	8004610 <_svfiprintf_r+0x17c>
 8004574:	b1b0      	cbz	r0, 80045a4 <_svfiprintf_r+0x110>
 8004576:	9207      	str	r2, [sp, #28]
 8004578:	e014      	b.n	80045a4 <_svfiprintf_r+0x110>
 800457a:	eba0 0308 	sub.w	r3, r0, r8
 800457e:	fa09 f303 	lsl.w	r3, r9, r3
 8004582:	4313      	orrs	r3, r2
 8004584:	9304      	str	r3, [sp, #16]
 8004586:	46a2      	mov	sl, r4
 8004588:	e7d2      	b.n	8004530 <_svfiprintf_r+0x9c>
 800458a:	9b03      	ldr	r3, [sp, #12]
 800458c:	1d19      	adds	r1, r3, #4
 800458e:	681b      	ldr	r3, [r3, #0]
 8004590:	9103      	str	r1, [sp, #12]
 8004592:	2b00      	cmp	r3, #0
 8004594:	bfbb      	ittet	lt
 8004596:	425b      	neglt	r3, r3
 8004598:	f042 0202 	orrlt.w	r2, r2, #2
 800459c:	9307      	strge	r3, [sp, #28]
 800459e:	9307      	strlt	r3, [sp, #28]
 80045a0:	bfb8      	it	lt
 80045a2:	9204      	strlt	r2, [sp, #16]
 80045a4:	7823      	ldrb	r3, [r4, #0]
 80045a6:	2b2e      	cmp	r3, #46	; 0x2e
 80045a8:	d10c      	bne.n	80045c4 <_svfiprintf_r+0x130>
 80045aa:	7863      	ldrb	r3, [r4, #1]
 80045ac:	2b2a      	cmp	r3, #42	; 0x2a
 80045ae:	d134      	bne.n	800461a <_svfiprintf_r+0x186>
 80045b0:	9b03      	ldr	r3, [sp, #12]
 80045b2:	1d1a      	adds	r2, r3, #4
 80045b4:	681b      	ldr	r3, [r3, #0]
 80045b6:	9203      	str	r2, [sp, #12]
 80045b8:	2b00      	cmp	r3, #0
 80045ba:	bfb8      	it	lt
 80045bc:	f04f 33ff 	movlt.w	r3, #4294967295
 80045c0:	3402      	adds	r4, #2
 80045c2:	9305      	str	r3, [sp, #20]
 80045c4:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800468c <_svfiprintf_r+0x1f8>
 80045c8:	7821      	ldrb	r1, [r4, #0]
 80045ca:	2203      	movs	r2, #3
 80045cc:	4650      	mov	r0, sl
 80045ce:	f7fb fe07 	bl	80001e0 <memchr>
 80045d2:	b138      	cbz	r0, 80045e4 <_svfiprintf_r+0x150>
 80045d4:	9b04      	ldr	r3, [sp, #16]
 80045d6:	eba0 000a 	sub.w	r0, r0, sl
 80045da:	2240      	movs	r2, #64	; 0x40
 80045dc:	4082      	lsls	r2, r0
 80045de:	4313      	orrs	r3, r2
 80045e0:	3401      	adds	r4, #1
 80045e2:	9304      	str	r3, [sp, #16]
 80045e4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80045e8:	4825      	ldr	r0, [pc, #148]	; (8004680 <_svfiprintf_r+0x1ec>)
 80045ea:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80045ee:	2206      	movs	r2, #6
 80045f0:	f7fb fdf6 	bl	80001e0 <memchr>
 80045f4:	2800      	cmp	r0, #0
 80045f6:	d038      	beq.n	800466a <_svfiprintf_r+0x1d6>
 80045f8:	4b22      	ldr	r3, [pc, #136]	; (8004684 <_svfiprintf_r+0x1f0>)
 80045fa:	bb1b      	cbnz	r3, 8004644 <_svfiprintf_r+0x1b0>
 80045fc:	9b03      	ldr	r3, [sp, #12]
 80045fe:	3307      	adds	r3, #7
 8004600:	f023 0307 	bic.w	r3, r3, #7
 8004604:	3308      	adds	r3, #8
 8004606:	9303      	str	r3, [sp, #12]
 8004608:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800460a:	4433      	add	r3, r6
 800460c:	9309      	str	r3, [sp, #36]	; 0x24
 800460e:	e768      	b.n	80044e2 <_svfiprintf_r+0x4e>
 8004610:	fb0c 3202 	mla	r2, ip, r2, r3
 8004614:	460c      	mov	r4, r1
 8004616:	2001      	movs	r0, #1
 8004618:	e7a6      	b.n	8004568 <_svfiprintf_r+0xd4>
 800461a:	2300      	movs	r3, #0
 800461c:	3401      	adds	r4, #1
 800461e:	9305      	str	r3, [sp, #20]
 8004620:	4619      	mov	r1, r3
 8004622:	f04f 0c0a 	mov.w	ip, #10
 8004626:	4620      	mov	r0, r4
 8004628:	f810 2b01 	ldrb.w	r2, [r0], #1
 800462c:	3a30      	subs	r2, #48	; 0x30
 800462e:	2a09      	cmp	r2, #9
 8004630:	d903      	bls.n	800463a <_svfiprintf_r+0x1a6>
 8004632:	2b00      	cmp	r3, #0
 8004634:	d0c6      	beq.n	80045c4 <_svfiprintf_r+0x130>
 8004636:	9105      	str	r1, [sp, #20]
 8004638:	e7c4      	b.n	80045c4 <_svfiprintf_r+0x130>
 800463a:	fb0c 2101 	mla	r1, ip, r1, r2
 800463e:	4604      	mov	r4, r0
 8004640:	2301      	movs	r3, #1
 8004642:	e7f0      	b.n	8004626 <_svfiprintf_r+0x192>
 8004644:	ab03      	add	r3, sp, #12
 8004646:	9300      	str	r3, [sp, #0]
 8004648:	462a      	mov	r2, r5
 800464a:	4b0f      	ldr	r3, [pc, #60]	; (8004688 <_svfiprintf_r+0x1f4>)
 800464c:	a904      	add	r1, sp, #16
 800464e:	4638      	mov	r0, r7
 8004650:	f3af 8000 	nop.w
 8004654:	1c42      	adds	r2, r0, #1
 8004656:	4606      	mov	r6, r0
 8004658:	d1d6      	bne.n	8004608 <_svfiprintf_r+0x174>
 800465a:	89ab      	ldrh	r3, [r5, #12]
 800465c:	065b      	lsls	r3, r3, #25
 800465e:	f53f af2d 	bmi.w	80044bc <_svfiprintf_r+0x28>
 8004662:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004664:	b01d      	add	sp, #116	; 0x74
 8004666:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800466a:	ab03      	add	r3, sp, #12
 800466c:	9300      	str	r3, [sp, #0]
 800466e:	462a      	mov	r2, r5
 8004670:	4b05      	ldr	r3, [pc, #20]	; (8004688 <_svfiprintf_r+0x1f4>)
 8004672:	a904      	add	r1, sp, #16
 8004674:	4638      	mov	r0, r7
 8004676:	f000 f879 	bl	800476c <_printf_i>
 800467a:	e7eb      	b.n	8004654 <_svfiprintf_r+0x1c0>
 800467c:	0800537c 	.word	0x0800537c
 8004680:	08005386 	.word	0x08005386
 8004684:	00000000 	.word	0x00000000
 8004688:	080043e1 	.word	0x080043e1
 800468c:	08005382 	.word	0x08005382

08004690 <_printf_common>:
 8004690:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004694:	4616      	mov	r6, r2
 8004696:	4699      	mov	r9, r3
 8004698:	688a      	ldr	r2, [r1, #8]
 800469a:	690b      	ldr	r3, [r1, #16]
 800469c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80046a0:	4293      	cmp	r3, r2
 80046a2:	bfb8      	it	lt
 80046a4:	4613      	movlt	r3, r2
 80046a6:	6033      	str	r3, [r6, #0]
 80046a8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80046ac:	4607      	mov	r7, r0
 80046ae:	460c      	mov	r4, r1
 80046b0:	b10a      	cbz	r2, 80046b6 <_printf_common+0x26>
 80046b2:	3301      	adds	r3, #1
 80046b4:	6033      	str	r3, [r6, #0]
 80046b6:	6823      	ldr	r3, [r4, #0]
 80046b8:	0699      	lsls	r1, r3, #26
 80046ba:	bf42      	ittt	mi
 80046bc:	6833      	ldrmi	r3, [r6, #0]
 80046be:	3302      	addmi	r3, #2
 80046c0:	6033      	strmi	r3, [r6, #0]
 80046c2:	6825      	ldr	r5, [r4, #0]
 80046c4:	f015 0506 	ands.w	r5, r5, #6
 80046c8:	d106      	bne.n	80046d8 <_printf_common+0x48>
 80046ca:	f104 0a19 	add.w	sl, r4, #25
 80046ce:	68e3      	ldr	r3, [r4, #12]
 80046d0:	6832      	ldr	r2, [r6, #0]
 80046d2:	1a9b      	subs	r3, r3, r2
 80046d4:	42ab      	cmp	r3, r5
 80046d6:	dc26      	bgt.n	8004726 <_printf_common+0x96>
 80046d8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80046dc:	1e13      	subs	r3, r2, #0
 80046de:	6822      	ldr	r2, [r4, #0]
 80046e0:	bf18      	it	ne
 80046e2:	2301      	movne	r3, #1
 80046e4:	0692      	lsls	r2, r2, #26
 80046e6:	d42b      	bmi.n	8004740 <_printf_common+0xb0>
 80046e8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80046ec:	4649      	mov	r1, r9
 80046ee:	4638      	mov	r0, r7
 80046f0:	47c0      	blx	r8
 80046f2:	3001      	adds	r0, #1
 80046f4:	d01e      	beq.n	8004734 <_printf_common+0xa4>
 80046f6:	6823      	ldr	r3, [r4, #0]
 80046f8:	6922      	ldr	r2, [r4, #16]
 80046fa:	f003 0306 	and.w	r3, r3, #6
 80046fe:	2b04      	cmp	r3, #4
 8004700:	bf02      	ittt	eq
 8004702:	68e5      	ldreq	r5, [r4, #12]
 8004704:	6833      	ldreq	r3, [r6, #0]
 8004706:	1aed      	subeq	r5, r5, r3
 8004708:	68a3      	ldr	r3, [r4, #8]
 800470a:	bf0c      	ite	eq
 800470c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004710:	2500      	movne	r5, #0
 8004712:	4293      	cmp	r3, r2
 8004714:	bfc4      	itt	gt
 8004716:	1a9b      	subgt	r3, r3, r2
 8004718:	18ed      	addgt	r5, r5, r3
 800471a:	2600      	movs	r6, #0
 800471c:	341a      	adds	r4, #26
 800471e:	42b5      	cmp	r5, r6
 8004720:	d11a      	bne.n	8004758 <_printf_common+0xc8>
 8004722:	2000      	movs	r0, #0
 8004724:	e008      	b.n	8004738 <_printf_common+0xa8>
 8004726:	2301      	movs	r3, #1
 8004728:	4652      	mov	r2, sl
 800472a:	4649      	mov	r1, r9
 800472c:	4638      	mov	r0, r7
 800472e:	47c0      	blx	r8
 8004730:	3001      	adds	r0, #1
 8004732:	d103      	bne.n	800473c <_printf_common+0xac>
 8004734:	f04f 30ff 	mov.w	r0, #4294967295
 8004738:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800473c:	3501      	adds	r5, #1
 800473e:	e7c6      	b.n	80046ce <_printf_common+0x3e>
 8004740:	18e1      	adds	r1, r4, r3
 8004742:	1c5a      	adds	r2, r3, #1
 8004744:	2030      	movs	r0, #48	; 0x30
 8004746:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800474a:	4422      	add	r2, r4
 800474c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004750:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004754:	3302      	adds	r3, #2
 8004756:	e7c7      	b.n	80046e8 <_printf_common+0x58>
 8004758:	2301      	movs	r3, #1
 800475a:	4622      	mov	r2, r4
 800475c:	4649      	mov	r1, r9
 800475e:	4638      	mov	r0, r7
 8004760:	47c0      	blx	r8
 8004762:	3001      	adds	r0, #1
 8004764:	d0e6      	beq.n	8004734 <_printf_common+0xa4>
 8004766:	3601      	adds	r6, #1
 8004768:	e7d9      	b.n	800471e <_printf_common+0x8e>
	...

0800476c <_printf_i>:
 800476c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004770:	7e0f      	ldrb	r7, [r1, #24]
 8004772:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8004774:	2f78      	cmp	r7, #120	; 0x78
 8004776:	4691      	mov	r9, r2
 8004778:	4680      	mov	r8, r0
 800477a:	460c      	mov	r4, r1
 800477c:	469a      	mov	sl, r3
 800477e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8004782:	d807      	bhi.n	8004794 <_printf_i+0x28>
 8004784:	2f62      	cmp	r7, #98	; 0x62
 8004786:	d80a      	bhi.n	800479e <_printf_i+0x32>
 8004788:	2f00      	cmp	r7, #0
 800478a:	f000 80d4 	beq.w	8004936 <_printf_i+0x1ca>
 800478e:	2f58      	cmp	r7, #88	; 0x58
 8004790:	f000 80c0 	beq.w	8004914 <_printf_i+0x1a8>
 8004794:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004798:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800479c:	e03a      	b.n	8004814 <_printf_i+0xa8>
 800479e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80047a2:	2b15      	cmp	r3, #21
 80047a4:	d8f6      	bhi.n	8004794 <_printf_i+0x28>
 80047a6:	a101      	add	r1, pc, #4	; (adr r1, 80047ac <_printf_i+0x40>)
 80047a8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80047ac:	08004805 	.word	0x08004805
 80047b0:	08004819 	.word	0x08004819
 80047b4:	08004795 	.word	0x08004795
 80047b8:	08004795 	.word	0x08004795
 80047bc:	08004795 	.word	0x08004795
 80047c0:	08004795 	.word	0x08004795
 80047c4:	08004819 	.word	0x08004819
 80047c8:	08004795 	.word	0x08004795
 80047cc:	08004795 	.word	0x08004795
 80047d0:	08004795 	.word	0x08004795
 80047d4:	08004795 	.word	0x08004795
 80047d8:	0800491d 	.word	0x0800491d
 80047dc:	08004845 	.word	0x08004845
 80047e0:	080048d7 	.word	0x080048d7
 80047e4:	08004795 	.word	0x08004795
 80047e8:	08004795 	.word	0x08004795
 80047ec:	0800493f 	.word	0x0800493f
 80047f0:	08004795 	.word	0x08004795
 80047f4:	08004845 	.word	0x08004845
 80047f8:	08004795 	.word	0x08004795
 80047fc:	08004795 	.word	0x08004795
 8004800:	080048df 	.word	0x080048df
 8004804:	682b      	ldr	r3, [r5, #0]
 8004806:	1d1a      	adds	r2, r3, #4
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	602a      	str	r2, [r5, #0]
 800480c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004810:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004814:	2301      	movs	r3, #1
 8004816:	e09f      	b.n	8004958 <_printf_i+0x1ec>
 8004818:	6820      	ldr	r0, [r4, #0]
 800481a:	682b      	ldr	r3, [r5, #0]
 800481c:	0607      	lsls	r7, r0, #24
 800481e:	f103 0104 	add.w	r1, r3, #4
 8004822:	6029      	str	r1, [r5, #0]
 8004824:	d501      	bpl.n	800482a <_printf_i+0xbe>
 8004826:	681e      	ldr	r6, [r3, #0]
 8004828:	e003      	b.n	8004832 <_printf_i+0xc6>
 800482a:	0646      	lsls	r6, r0, #25
 800482c:	d5fb      	bpl.n	8004826 <_printf_i+0xba>
 800482e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8004832:	2e00      	cmp	r6, #0
 8004834:	da03      	bge.n	800483e <_printf_i+0xd2>
 8004836:	232d      	movs	r3, #45	; 0x2d
 8004838:	4276      	negs	r6, r6
 800483a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800483e:	485a      	ldr	r0, [pc, #360]	; (80049a8 <_printf_i+0x23c>)
 8004840:	230a      	movs	r3, #10
 8004842:	e012      	b.n	800486a <_printf_i+0xfe>
 8004844:	682b      	ldr	r3, [r5, #0]
 8004846:	6820      	ldr	r0, [r4, #0]
 8004848:	1d19      	adds	r1, r3, #4
 800484a:	6029      	str	r1, [r5, #0]
 800484c:	0605      	lsls	r5, r0, #24
 800484e:	d501      	bpl.n	8004854 <_printf_i+0xe8>
 8004850:	681e      	ldr	r6, [r3, #0]
 8004852:	e002      	b.n	800485a <_printf_i+0xee>
 8004854:	0641      	lsls	r1, r0, #25
 8004856:	d5fb      	bpl.n	8004850 <_printf_i+0xe4>
 8004858:	881e      	ldrh	r6, [r3, #0]
 800485a:	4853      	ldr	r0, [pc, #332]	; (80049a8 <_printf_i+0x23c>)
 800485c:	2f6f      	cmp	r7, #111	; 0x6f
 800485e:	bf0c      	ite	eq
 8004860:	2308      	moveq	r3, #8
 8004862:	230a      	movne	r3, #10
 8004864:	2100      	movs	r1, #0
 8004866:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800486a:	6865      	ldr	r5, [r4, #4]
 800486c:	60a5      	str	r5, [r4, #8]
 800486e:	2d00      	cmp	r5, #0
 8004870:	bfa2      	ittt	ge
 8004872:	6821      	ldrge	r1, [r4, #0]
 8004874:	f021 0104 	bicge.w	r1, r1, #4
 8004878:	6021      	strge	r1, [r4, #0]
 800487a:	b90e      	cbnz	r6, 8004880 <_printf_i+0x114>
 800487c:	2d00      	cmp	r5, #0
 800487e:	d04b      	beq.n	8004918 <_printf_i+0x1ac>
 8004880:	4615      	mov	r5, r2
 8004882:	fbb6 f1f3 	udiv	r1, r6, r3
 8004886:	fb03 6711 	mls	r7, r3, r1, r6
 800488a:	5dc7      	ldrb	r7, [r0, r7]
 800488c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8004890:	4637      	mov	r7, r6
 8004892:	42bb      	cmp	r3, r7
 8004894:	460e      	mov	r6, r1
 8004896:	d9f4      	bls.n	8004882 <_printf_i+0x116>
 8004898:	2b08      	cmp	r3, #8
 800489a:	d10b      	bne.n	80048b4 <_printf_i+0x148>
 800489c:	6823      	ldr	r3, [r4, #0]
 800489e:	07de      	lsls	r6, r3, #31
 80048a0:	d508      	bpl.n	80048b4 <_printf_i+0x148>
 80048a2:	6923      	ldr	r3, [r4, #16]
 80048a4:	6861      	ldr	r1, [r4, #4]
 80048a6:	4299      	cmp	r1, r3
 80048a8:	bfde      	ittt	le
 80048aa:	2330      	movle	r3, #48	; 0x30
 80048ac:	f805 3c01 	strble.w	r3, [r5, #-1]
 80048b0:	f105 35ff 	addle.w	r5, r5, #4294967295
 80048b4:	1b52      	subs	r2, r2, r5
 80048b6:	6122      	str	r2, [r4, #16]
 80048b8:	f8cd a000 	str.w	sl, [sp]
 80048bc:	464b      	mov	r3, r9
 80048be:	aa03      	add	r2, sp, #12
 80048c0:	4621      	mov	r1, r4
 80048c2:	4640      	mov	r0, r8
 80048c4:	f7ff fee4 	bl	8004690 <_printf_common>
 80048c8:	3001      	adds	r0, #1
 80048ca:	d14a      	bne.n	8004962 <_printf_i+0x1f6>
 80048cc:	f04f 30ff 	mov.w	r0, #4294967295
 80048d0:	b004      	add	sp, #16
 80048d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80048d6:	6823      	ldr	r3, [r4, #0]
 80048d8:	f043 0320 	orr.w	r3, r3, #32
 80048dc:	6023      	str	r3, [r4, #0]
 80048de:	4833      	ldr	r0, [pc, #204]	; (80049ac <_printf_i+0x240>)
 80048e0:	2778      	movs	r7, #120	; 0x78
 80048e2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80048e6:	6823      	ldr	r3, [r4, #0]
 80048e8:	6829      	ldr	r1, [r5, #0]
 80048ea:	061f      	lsls	r7, r3, #24
 80048ec:	f851 6b04 	ldr.w	r6, [r1], #4
 80048f0:	d402      	bmi.n	80048f8 <_printf_i+0x18c>
 80048f2:	065f      	lsls	r7, r3, #25
 80048f4:	bf48      	it	mi
 80048f6:	b2b6      	uxthmi	r6, r6
 80048f8:	07df      	lsls	r7, r3, #31
 80048fa:	bf48      	it	mi
 80048fc:	f043 0320 	orrmi.w	r3, r3, #32
 8004900:	6029      	str	r1, [r5, #0]
 8004902:	bf48      	it	mi
 8004904:	6023      	strmi	r3, [r4, #0]
 8004906:	b91e      	cbnz	r6, 8004910 <_printf_i+0x1a4>
 8004908:	6823      	ldr	r3, [r4, #0]
 800490a:	f023 0320 	bic.w	r3, r3, #32
 800490e:	6023      	str	r3, [r4, #0]
 8004910:	2310      	movs	r3, #16
 8004912:	e7a7      	b.n	8004864 <_printf_i+0xf8>
 8004914:	4824      	ldr	r0, [pc, #144]	; (80049a8 <_printf_i+0x23c>)
 8004916:	e7e4      	b.n	80048e2 <_printf_i+0x176>
 8004918:	4615      	mov	r5, r2
 800491a:	e7bd      	b.n	8004898 <_printf_i+0x12c>
 800491c:	682b      	ldr	r3, [r5, #0]
 800491e:	6826      	ldr	r6, [r4, #0]
 8004920:	6961      	ldr	r1, [r4, #20]
 8004922:	1d18      	adds	r0, r3, #4
 8004924:	6028      	str	r0, [r5, #0]
 8004926:	0635      	lsls	r5, r6, #24
 8004928:	681b      	ldr	r3, [r3, #0]
 800492a:	d501      	bpl.n	8004930 <_printf_i+0x1c4>
 800492c:	6019      	str	r1, [r3, #0]
 800492e:	e002      	b.n	8004936 <_printf_i+0x1ca>
 8004930:	0670      	lsls	r0, r6, #25
 8004932:	d5fb      	bpl.n	800492c <_printf_i+0x1c0>
 8004934:	8019      	strh	r1, [r3, #0]
 8004936:	2300      	movs	r3, #0
 8004938:	6123      	str	r3, [r4, #16]
 800493a:	4615      	mov	r5, r2
 800493c:	e7bc      	b.n	80048b8 <_printf_i+0x14c>
 800493e:	682b      	ldr	r3, [r5, #0]
 8004940:	1d1a      	adds	r2, r3, #4
 8004942:	602a      	str	r2, [r5, #0]
 8004944:	681d      	ldr	r5, [r3, #0]
 8004946:	6862      	ldr	r2, [r4, #4]
 8004948:	2100      	movs	r1, #0
 800494a:	4628      	mov	r0, r5
 800494c:	f7fb fc48 	bl	80001e0 <memchr>
 8004950:	b108      	cbz	r0, 8004956 <_printf_i+0x1ea>
 8004952:	1b40      	subs	r0, r0, r5
 8004954:	6060      	str	r0, [r4, #4]
 8004956:	6863      	ldr	r3, [r4, #4]
 8004958:	6123      	str	r3, [r4, #16]
 800495a:	2300      	movs	r3, #0
 800495c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004960:	e7aa      	b.n	80048b8 <_printf_i+0x14c>
 8004962:	6923      	ldr	r3, [r4, #16]
 8004964:	462a      	mov	r2, r5
 8004966:	4649      	mov	r1, r9
 8004968:	4640      	mov	r0, r8
 800496a:	47d0      	blx	sl
 800496c:	3001      	adds	r0, #1
 800496e:	d0ad      	beq.n	80048cc <_printf_i+0x160>
 8004970:	6823      	ldr	r3, [r4, #0]
 8004972:	079b      	lsls	r3, r3, #30
 8004974:	d413      	bmi.n	800499e <_printf_i+0x232>
 8004976:	68e0      	ldr	r0, [r4, #12]
 8004978:	9b03      	ldr	r3, [sp, #12]
 800497a:	4298      	cmp	r0, r3
 800497c:	bfb8      	it	lt
 800497e:	4618      	movlt	r0, r3
 8004980:	e7a6      	b.n	80048d0 <_printf_i+0x164>
 8004982:	2301      	movs	r3, #1
 8004984:	4632      	mov	r2, r6
 8004986:	4649      	mov	r1, r9
 8004988:	4640      	mov	r0, r8
 800498a:	47d0      	blx	sl
 800498c:	3001      	adds	r0, #1
 800498e:	d09d      	beq.n	80048cc <_printf_i+0x160>
 8004990:	3501      	adds	r5, #1
 8004992:	68e3      	ldr	r3, [r4, #12]
 8004994:	9903      	ldr	r1, [sp, #12]
 8004996:	1a5b      	subs	r3, r3, r1
 8004998:	42ab      	cmp	r3, r5
 800499a:	dcf2      	bgt.n	8004982 <_printf_i+0x216>
 800499c:	e7eb      	b.n	8004976 <_printf_i+0x20a>
 800499e:	2500      	movs	r5, #0
 80049a0:	f104 0619 	add.w	r6, r4, #25
 80049a4:	e7f5      	b.n	8004992 <_printf_i+0x226>
 80049a6:	bf00      	nop
 80049a8:	0800538d 	.word	0x0800538d
 80049ac:	0800539e 	.word	0x0800539e

080049b0 <memmove>:
 80049b0:	4288      	cmp	r0, r1
 80049b2:	b510      	push	{r4, lr}
 80049b4:	eb01 0402 	add.w	r4, r1, r2
 80049b8:	d902      	bls.n	80049c0 <memmove+0x10>
 80049ba:	4284      	cmp	r4, r0
 80049bc:	4623      	mov	r3, r4
 80049be:	d807      	bhi.n	80049d0 <memmove+0x20>
 80049c0:	1e43      	subs	r3, r0, #1
 80049c2:	42a1      	cmp	r1, r4
 80049c4:	d008      	beq.n	80049d8 <memmove+0x28>
 80049c6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80049ca:	f803 2f01 	strb.w	r2, [r3, #1]!
 80049ce:	e7f8      	b.n	80049c2 <memmove+0x12>
 80049d0:	4402      	add	r2, r0
 80049d2:	4601      	mov	r1, r0
 80049d4:	428a      	cmp	r2, r1
 80049d6:	d100      	bne.n	80049da <memmove+0x2a>
 80049d8:	bd10      	pop	{r4, pc}
 80049da:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80049de:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80049e2:	e7f7      	b.n	80049d4 <memmove+0x24>

080049e4 <_sbrk_r>:
 80049e4:	b538      	push	{r3, r4, r5, lr}
 80049e6:	4d06      	ldr	r5, [pc, #24]	; (8004a00 <_sbrk_r+0x1c>)
 80049e8:	2300      	movs	r3, #0
 80049ea:	4604      	mov	r4, r0
 80049ec:	4608      	mov	r0, r1
 80049ee:	602b      	str	r3, [r5, #0]
 80049f0:	f7fc f9b0 	bl	8000d54 <_sbrk>
 80049f4:	1c43      	adds	r3, r0, #1
 80049f6:	d102      	bne.n	80049fe <_sbrk_r+0x1a>
 80049f8:	682b      	ldr	r3, [r5, #0]
 80049fa:	b103      	cbz	r3, 80049fe <_sbrk_r+0x1a>
 80049fc:	6023      	str	r3, [r4, #0]
 80049fe:	bd38      	pop	{r3, r4, r5, pc}
 8004a00:	20001488 	.word	0x20001488

08004a04 <memcpy>:
 8004a04:	440a      	add	r2, r1
 8004a06:	4291      	cmp	r1, r2
 8004a08:	f100 33ff 	add.w	r3, r0, #4294967295
 8004a0c:	d100      	bne.n	8004a10 <memcpy+0xc>
 8004a0e:	4770      	bx	lr
 8004a10:	b510      	push	{r4, lr}
 8004a12:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004a16:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004a1a:	4291      	cmp	r1, r2
 8004a1c:	d1f9      	bne.n	8004a12 <memcpy+0xe>
 8004a1e:	bd10      	pop	{r4, pc}

08004a20 <_realloc_r>:
 8004a20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004a24:	4680      	mov	r8, r0
 8004a26:	4614      	mov	r4, r2
 8004a28:	460e      	mov	r6, r1
 8004a2a:	b921      	cbnz	r1, 8004a36 <_realloc_r+0x16>
 8004a2c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004a30:	4611      	mov	r1, r2
 8004a32:	f7ff bc49 	b.w	80042c8 <_malloc_r>
 8004a36:	b92a      	cbnz	r2, 8004a44 <_realloc_r+0x24>
 8004a38:	f7ff fbda 	bl	80041f0 <_free_r>
 8004a3c:	4625      	mov	r5, r4
 8004a3e:	4628      	mov	r0, r5
 8004a40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004a44:	f000 f81b 	bl	8004a7e <_malloc_usable_size_r>
 8004a48:	4284      	cmp	r4, r0
 8004a4a:	4607      	mov	r7, r0
 8004a4c:	d802      	bhi.n	8004a54 <_realloc_r+0x34>
 8004a4e:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8004a52:	d812      	bhi.n	8004a7a <_realloc_r+0x5a>
 8004a54:	4621      	mov	r1, r4
 8004a56:	4640      	mov	r0, r8
 8004a58:	f7ff fc36 	bl	80042c8 <_malloc_r>
 8004a5c:	4605      	mov	r5, r0
 8004a5e:	2800      	cmp	r0, #0
 8004a60:	d0ed      	beq.n	8004a3e <_realloc_r+0x1e>
 8004a62:	42bc      	cmp	r4, r7
 8004a64:	4622      	mov	r2, r4
 8004a66:	4631      	mov	r1, r6
 8004a68:	bf28      	it	cs
 8004a6a:	463a      	movcs	r2, r7
 8004a6c:	f7ff ffca 	bl	8004a04 <memcpy>
 8004a70:	4631      	mov	r1, r6
 8004a72:	4640      	mov	r0, r8
 8004a74:	f7ff fbbc 	bl	80041f0 <_free_r>
 8004a78:	e7e1      	b.n	8004a3e <_realloc_r+0x1e>
 8004a7a:	4635      	mov	r5, r6
 8004a7c:	e7df      	b.n	8004a3e <_realloc_r+0x1e>

08004a7e <_malloc_usable_size_r>:
 8004a7e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004a82:	1f18      	subs	r0, r3, #4
 8004a84:	2b00      	cmp	r3, #0
 8004a86:	bfbc      	itt	lt
 8004a88:	580b      	ldrlt	r3, [r1, r0]
 8004a8a:	18c0      	addlt	r0, r0, r3
 8004a8c:	4770      	bx	lr
	...

08004a90 <_init>:
 8004a90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a92:	bf00      	nop
 8004a94:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004a96:	bc08      	pop	{r3}
 8004a98:	469e      	mov	lr, r3
 8004a9a:	4770      	bx	lr

08004a9c <_fini>:
 8004a9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a9e:	bf00      	nop
 8004aa0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004aa2:	bc08      	pop	{r3}
 8004aa4:	469e      	mov	lr, r3
 8004aa6:	4770      	bx	lr
